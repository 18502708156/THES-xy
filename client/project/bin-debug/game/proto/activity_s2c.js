// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var activity_brief = (function () {
        function activity_brief() {
        }
        return activity_brief;
    }());
    Sproto.activity_brief = activity_brief;
    __reflect(activity_brief.prototype, "Sproto.activity_brief");
    function _decode_activity_brief(d) {
        var o = new activity_brief;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.activity = d.ri();
                    break;
                case 1:
                    o.isopen = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_activity_brief(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.activity != undefined) {
            se.wi(self.activity, 0);
        }
        if (self.isopen != undefined) {
            se.wb(self.isopen, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["activity_brief"] = { en: _encode_activity_brief, de: _decode_activity_brief };
    var sc_activity_hall_request = (function () {
        function sc_activity_hall_request() {
        }
        return sc_activity_hall_request;
    }());
    Sproto.sc_activity_hall_request = sc_activity_hall_request;
    __reflect(sc_activity_hall_request.prototype, "Sproto.sc_activity_hall_request");
    function _decode_sc_activity_hall_request(d) {
        var o = new sc_activity_hall_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.activitys = d.roa("activity_brief");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_activity_hall_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.activitys != undefined) {
            se.woa("activity_brief", self.activitys, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_activity_hall_request"] = { en: _encode_sc_activity_hall_request, de: _decode_sc_activity_hall_request };
    var sc_activity_info_res_request = (function () {
        function sc_activity_info_res_request() {
        }
        return sc_activity_info_res_request;
    }());
    Sproto.sc_activity_info_res_request = sc_activity_info_res_request;
    __reflect(sc_activity_info_res_request.prototype, "Sproto.sc_activity_info_res_request");
    function _decode_sc_activity_info_res_request(d) {
        var o = new sc_activity_info_res_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.answer = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_activity_info_res_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.answer != undefined) {
            se.ws(self.answer, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_activity_info_res_request"] = { en: _encode_sc_activity_info_res_request, de: _decode_sc_activity_info_res_request };
    var sc_activity_msg_request = (function () {
        function sc_activity_msg_request() {
        }
        return sc_activity_msg_request;
    }());
    Sproto.sc_activity_msg_request = sc_activity_msg_request;
    __reflect(sc_activity_msg_request.prototype, "Sproto.sc_activity_msg_request");
    function _decode_sc_activity_msg_request(d) {
        var o = new sc_activity_msg_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.activity = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_activity_msg_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.activity != undefined) {
            se.wi(self.activity, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_activity_msg_request"] = { en: _encode_sc_activity_msg_request, de: _decode_sc_activity_msg_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=activity_s2c.js.map