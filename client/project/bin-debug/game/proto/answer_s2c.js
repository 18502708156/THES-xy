// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var answer_rank = (function () {
        function answer_rank() {
        }
        return answer_rank;
    }());
    Sproto.answer_rank = answer_rank;
    __reflect(answer_rank.prototype, "Sproto.answer_rank");
    function _decode_answer_rank(d) {
        var o = new answer_rank;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.name = d.rs();
                    break;
                case 1:
                    o.point = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_answer_rank(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.name != undefined) {
            se.ws(self.name, 0);
        }
        if (self.point != undefined) {
            se.wi(self.point, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["answer_rank"] = { en: _encode_answer_rank, de: _decode_answer_rank };
    var sc_answer_info_request = (function () {
        function sc_answer_info_request() {
        }
        return sc_answer_info_request;
    }());
    Sproto.sc_answer_info_request = sc_answer_info_request;
    __reflect(sc_answer_info_request.prototype, "Sproto.sc_answer_info_request");
    function _decode_sc_answer_info_request(d) {
        var o = new sc_answer_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.rank = d.roa("answer_rank");
                    break;
                case 2:
                    o.answerNum = d.ri();
                    break;
                case 3:
                    o.answerNo = d.ri();
                    break;
                case 4:
                    o.answerList = d.ria();
                    break;
                case 5:
                    o.point = d.ri();
                    break;
                case 6:
                    o.rankNo = d.ri();
                    break;
                case 7:
                    o.operation = d.ri();
                    break;
                case 8:
                    o.timeout = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_answer_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 9);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.rank != undefined) {
            se.woa("answer_rank", self.rank, 1);
        }
        if (self.answerNum != undefined) {
            se.wi(self.answerNum, 2);
        }
        if (self.answerNo != undefined) {
            se.wi(self.answerNo, 3);
        }
        if (self.answerList != undefined) {
            se.wia(self.answerList, 4);
        }
        if (self.point != undefined) {
            se.wi(self.point, 5);
        }
        if (self.rankNo != undefined) {
            se.wi(self.rankNo, 6);
        }
        if (self.operation != undefined) {
            se.wi(self.operation, 7);
        }
        if (self.timeout != undefined) {
            se.wi(self.timeout, 8);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_answer_info_request"] = { en: _encode_sc_answer_info_request, de: _decode_sc_answer_info_request };
    var sc_answer_rank_res_request = (function () {
        function sc_answer_rank_res_request() {
        }
        return sc_answer_rank_res_request;
    }());
    Sproto.sc_answer_rank_res_request = sc_answer_rank_res_request;
    __reflect(sc_answer_rank_res_request.prototype, "Sproto.sc_answer_rank_res_request");
    function _decode_sc_answer_rank_res_request(d) {
        var o = new sc_answer_rank_res_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rank = d.roa("answer_rank");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_answer_rank_res_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rank != undefined) {
            se.woa("answer_rank", self.rank, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_answer_rank_res_request"] = { en: _encode_sc_answer_rank_res_request, de: _decode_sc_answer_rank_res_request };
    var sc_answer_reward_request = (function () {
        function sc_answer_reward_request() {
        }
        return sc_answer_reward_request;
    }());
    Sproto.sc_answer_reward_request = sc_answer_reward_request;
    __reflect(sc_answer_reward_request.prototype, "Sproto.sc_answer_reward_request");
    function _decode_sc_answer_reward_request(d) {
        var o = new sc_answer_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.point = d.ri();
                    break;
                case 1:
                    o.rankNo = d.ri();
                    break;
                case 2:
                    o.rewards = d.roa("reward_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_answer_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.point != undefined) {
            se.wi(self.point, 0);
        }
        if (self.rankNo != undefined) {
            se.wi(self.rankNo, 1);
        }
        if (self.rewards != undefined) {
            se.woa("reward_data", self.rewards, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_answer_reward_request"] = { en: _encode_sc_answer_reward_request, de: _decode_sc_answer_reward_request };
    var sc_answer_update_request = (function () {
        function sc_answer_update_request() {
        }
        return sc_answer_update_request;
    }());
    Sproto.sc_answer_update_request = sc_answer_update_request;
    __reflect(sc_answer_update_request.prototype, "Sproto.sc_answer_update_request");
    function _decode_sc_answer_update_request(d) {
        var o = new sc_answer_update_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.answerNum = d.ri();
                    break;
                case 2:
                    o.answerNo = d.ri();
                    break;
                case 3:
                    o.answerList = d.ria();
                    break;
                case 4:
                    o.point = d.ri();
                    break;
                case 5:
                    o.operation = d.ri();
                    break;
                case 6:
                    o.timeout = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_answer_update_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 7);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.answerNum != undefined) {
            se.wi(self.answerNum, 1);
        }
        if (self.answerNo != undefined) {
            se.wi(self.answerNo, 2);
        }
        if (self.answerList != undefined) {
            se.wia(self.answerList, 3);
        }
        if (self.point != undefined) {
            se.wi(self.point, 4);
        }
        if (self.operation != undefined) {
            se.wi(self.operation, 5);
        }
        if (self.timeout != undefined) {
            se.wi(self.timeout, 6);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_answer_update_request"] = { en: _encode_sc_answer_update_request, de: _decode_sc_answer_update_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=answer_s2c.js.map