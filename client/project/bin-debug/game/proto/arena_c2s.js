// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_arena_get_reward_request = (function () {
        function cs_arena_get_reward_request() {
        }
        return cs_arena_get_reward_request;
    }());
    Sproto.cs_arena_get_reward_request = cs_arena_get_reward_request;
    __reflect(cs_arena_get_reward_request.prototype, "Sproto.cs_arena_get_reward_request");
    function _decode_cs_arena_get_reward_request(d) {
        var o = new cs_arena_get_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_arena_get_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_arena_get_reward_request"] = { en: _encode_cs_arena_get_reward_request, de: _decode_cs_arena_get_reward_request };
    var cs_arena_info_request = (function () {
        function cs_arena_info_request() {
        }
        return cs_arena_info_request;
    }());
    Sproto.cs_arena_info_request = cs_arena_info_request;
    __reflect(cs_arena_info_request.prototype, "Sproto.cs_arena_info_request");
    function _decode_cs_arena_info_request(d) {
        var o = new cs_arena_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_arena_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_arena_info_request"] = { en: _encode_cs_arena_info_request, de: _decode_cs_arena_info_request };
    var cs_arena_info_response = (function () {
        function cs_arena_info_response() {
        }
        return cs_arena_info_response;
    }());
    Sproto.cs_arena_info_response = cs_arena_info_response;
    __reflect(cs_arena_info_response.prototype, "Sproto.cs_arena_info_response");
    function _decode_cs_arena_info_response(d) {
        var o = new cs_arena_info_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targets = d.roa("arena_target_data");
                    break;
                case 1:
                    o.rank = d.ri();
                    break;
                case 2:
                    o.maxrank = d.ri();
                    break;
                case 3:
                    o.pkcount = d.ri();
                    break;
                case 4:
                    o.remaintime = d.ri();
                    break;
                case 5:
                    o.buycount = d.ri();
                    break;
                case 6:
                    o.medal = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_arena_info_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 7);
        if (self.targets != undefined) {
            se.woa("arena_target_data", self.targets, 0);
        }
        if (self.rank != undefined) {
            se.wi(self.rank, 1);
        }
        if (self.maxrank != undefined) {
            se.wi(self.maxrank, 2);
        }
        if (self.pkcount != undefined) {
            se.wi(self.pkcount, 3);
        }
        if (self.remaintime != undefined) {
            se.wi(self.remaintime, 4);
        }
        if (self.buycount != undefined) {
            se.wi(self.buycount, 5);
        }
        if (self.medal != undefined) {
            se.wi(self.medal, 6);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_arena_info_response"] = { en: _encode_cs_arena_info_response, de: _decode_cs_arena_info_response };
    var cs_arena_pk_request = (function () {
        function cs_arena_pk_request() {
        }
        return cs_arena_pk_request;
    }());
    Sproto.cs_arena_pk_request = cs_arena_pk_request;
    __reflect(cs_arena_pk_request.prototype, "Sproto.cs_arena_pk_request");
    function _decode_cs_arena_pk_request(d) {
        var o = new cs_arena_pk_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rank = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_arena_pk_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rank != undefined) {
            se.wi(self.rank, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_arena_pk_request"] = { en: _encode_cs_arena_pk_request, de: _decode_cs_arena_pk_request };
    var cs_arena_rank_request = (function () {
        function cs_arena_rank_request() {
        }
        return cs_arena_rank_request;
    }());
    Sproto.cs_arena_rank_request = cs_arena_rank_request;
    __reflect(cs_arena_rank_request.prototype, "Sproto.cs_arena_rank_request");
    function _decode_cs_arena_rank_request(d) {
        var o = new cs_arena_rank_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_arena_rank_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_arena_rank_request"] = { en: _encode_cs_arena_rank_request, de: _decode_cs_arena_rank_request };
    var cs_arena_rank_response = (function () {
        function cs_arena_rank_response() {
        }
        return cs_arena_rank_response;
    }());
    Sproto.cs_arena_rank_response = cs_arena_rank_response;
    __reflect(cs_arena_rank_response.prototype, "Sproto.cs_arena_rank_response");
    function _decode_cs_arena_rank_response(d) {
        var o = new cs_arena_rank_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ranklist = d.roa("rank_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_arena_rank_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ranklist != undefined) {
            se.woa("rank_data", self.ranklist, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_arena_rank_response"] = { en: _encode_cs_arena_rank_response, de: _decode_cs_arena_rank_response };
    var cs_buy_pk_request = (function () {
        function cs_buy_pk_request() {
        }
        return cs_buy_pk_request;
    }());
    Sproto.cs_buy_pk_request = cs_buy_pk_request;
    __reflect(cs_buy_pk_request.prototype, "Sproto.cs_buy_pk_request");
    function _decode_cs_buy_pk_request(d) {
        var o = new cs_buy_pk_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_buy_pk_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_buy_pk_request"] = { en: _encode_cs_buy_pk_request, de: _decode_cs_buy_pk_request };
    var cs_buy_pk_response = (function () {
        function cs_buy_pk_response() {
        }
        return cs_buy_pk_response;
    }());
    Sproto.cs_buy_pk_response = cs_buy_pk_response;
    __reflect(cs_buy_pk_response.prototype, "Sproto.cs_buy_pk_response");
    function _decode_cs_buy_pk_response(d) {
        var o = new cs_buy_pk_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.pkcount = d.ri();
                    break;
                case 2:
                    o.buycount = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_buy_pk_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.pkcount != undefined) {
            se.wi(self.pkcount, 1);
        }
        if (self.buycount != undefined) {
            se.wi(self.buycount, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_buy_pk_response"] = { en: _encode_cs_buy_pk_response, de: _decode_cs_buy_pk_response };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=arena_c2s.js.map