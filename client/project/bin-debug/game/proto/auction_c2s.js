// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_auction_buy_request = (function () {
        function cs_auction_buy_request() {
        }
        return cs_auction_buy_request;
    }());
    Sproto.cs_auction_buy_request = cs_auction_buy_request;
    __reflect(cs_auction_buy_request.prototype, "Sproto.cs_auction_buy_request");
    function _decode_cs_auction_buy_request(d) {
        var o = new cs_auction_buy_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.guildid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_buy_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.guildid != undefined) {
            se.wi(self.guildid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_buy_request"] = { en: _encode_cs_auction_buy_request, de: _decode_cs_auction_buy_request };
    var cs_auction_list_request = (function () {
        function cs_auction_list_request() {
        }
        return cs_auction_list_request;
    }());
    Sproto.cs_auction_list_request = cs_auction_list_request;
    __reflect(cs_auction_list_request.prototype, "Sproto.cs_auction_list_request");
    function _decode_cs_auction_list_request(d) {
        var o = new cs_auction_list_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.auctype = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_list_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.auctype != undefined) {
            se.wi(self.auctype, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_list_request"] = { en: _encode_cs_auction_list_request, de: _decode_cs_auction_list_request };
    var cs_auction_offer_request = (function () {
        function cs_auction_offer_request() {
        }
        return cs_auction_offer_request;
    }());
    Sproto.cs_auction_offer_request = cs_auction_offer_request;
    __reflect(cs_auction_offer_request.prototype, "Sproto.cs_auction_offer_request");
    function _decode_cs_auction_offer_request(d) {
        var o = new cs_auction_offer_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.guildid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_offer_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.guildid != undefined) {
            se.wi(self.guildid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_offer_request"] = { en: _encode_cs_auction_offer_request, de: _decode_cs_auction_offer_request };
    var cs_auction_query_item_request = (function () {
        function cs_auction_query_item_request() {
        }
        return cs_auction_query_item_request;
    }());
    Sproto.cs_auction_query_item_request = cs_auction_query_item_request;
    __reflect(cs_auction_query_item_request.prototype, "Sproto.cs_auction_query_item_request");
    function _decode_cs_auction_query_item_request(d) {
        var o = new cs_auction_query_item_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.itemid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_query_item_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.itemid != undefined) {
            se.wi(self.itemid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_query_item_request"] = { en: _encode_cs_auction_query_item_request, de: _decode_cs_auction_query_item_request };
    var cs_auction_query_item_response = (function () {
        function cs_auction_query_item_response() {
        }
        return cs_auction_query_item_response;
    }());
    Sproto.cs_auction_query_item_response = cs_auction_query_item_response;
    __reflect(cs_auction_query_item_response.prototype, "Sproto.cs_auction_query_item_response");
    function _decode_cs_auction_query_item_response(d) {
        var o = new cs_auction_query_item_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dealprice = d.ri();
                    break;
                case 1:
                    o.addprice = d.ri();
                    break;
                case 2:
                    o.price = d.ri();
                    break;
                case 3:
                    o.numerictype = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_query_item_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.dealprice != undefined) {
            se.wi(self.dealprice, 0);
        }
        if (self.addprice != undefined) {
            se.wi(self.addprice, 1);
        }
        if (self.price != undefined) {
            se.wi(self.price, 2);
        }
        if (self.numerictype != undefined) {
            se.wi(self.numerictype, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_query_item_response"] = { en: _encode_cs_auction_query_item_response, de: _decode_cs_auction_query_item_response };
    var cs_auction_record_request = (function () {
        function cs_auction_record_request() {
        }
        return cs_auction_record_request;
    }());
    Sproto.cs_auction_record_request = cs_auction_record_request;
    __reflect(cs_auction_record_request.prototype, "Sproto.cs_auction_record_request");
    function _decode_cs_auction_record_request(d) {
        var o = new cs_auction_record_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.auctype = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_record_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.auctype != undefined) {
            se.wi(self.auctype, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_record_request"] = { en: _encode_cs_auction_record_request, de: _decode_cs_auction_record_request };
    var cs_auction_select_request = (function () {
        function cs_auction_select_request() {
        }
        return cs_auction_select_request;
    }());
    Sproto.cs_auction_select_request = cs_auction_select_request;
    __reflect(cs_auction_select_request.prototype, "Sproto.cs_auction_select_request");
    function _decode_cs_auction_select_request(d) {
        var o = new cs_auction_select_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.choose = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_select_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.choose != undefined) {
            se.wi(self.choose, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_select_request"] = { en: _encode_cs_auction_select_request, de: _decode_cs_auction_select_request };
    var cs_auction_update_request = (function () {
        function cs_auction_update_request() {
        }
        return cs_auction_update_request;
    }());
    Sproto.cs_auction_update_request = cs_auction_update_request;
    __reflect(cs_auction_update_request.prototype, "Sproto.cs_auction_update_request");
    function _decode_cs_auction_update_request(d) {
        var o = new cs_auction_update_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.guildid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_update_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.guildid != undefined) {
            se.wi(self.guildid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_update_request"] = { en: _encode_cs_auction_update_request, de: _decode_cs_auction_update_request };
    var cs_auction_useitem_request = (function () {
        function cs_auction_useitem_request() {
        }
        return cs_auction_useitem_request;
    }());
    Sproto.cs_auction_useitem_request = cs_auction_useitem_request;
    __reflect(cs_auction_useitem_request.prototype, "Sproto.cs_auction_useitem_request");
    function _decode_cs_auction_useitem_request(d) {
        var o = new cs_auction_useitem_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_auction_useitem_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_auction_useitem_request"] = { en: _encode_cs_auction_useitem_request, de: _decode_cs_auction_useitem_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=auction_c2s.js.map