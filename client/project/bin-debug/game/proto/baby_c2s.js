// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var baby_start_data = (function () {
        function baby_start_data() {
        }
        return baby_start_data;
    }());
    Sproto.baby_start_data = baby_start_data;
    __reflect(baby_start_data.prototype, "Sproto.baby_start_data");
    function _decode_baby_start_data(d) {
        var o = new baby_start_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_baby_start_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["baby_start_data"] = { en: _encode_baby_start_data, de: _decode_baby_start_data };
    var baby_start_smelt = (function () {
        function baby_start_smelt() {
        }
        return baby_start_smelt;
    }());
    Sproto.baby_start_smelt = baby_start_smelt;
    __reflect(baby_start_smelt.prototype, "Sproto.baby_start_smelt");
    function _decode_baby_start_smelt(d) {
        var o = new baby_start_smelt;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.num = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_baby_start_smelt(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.num != undefined) {
            se.wi(self.num, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["baby_start_smelt"] = { en: _encode_baby_start_smelt, de: _decode_baby_start_smelt };
    var cs_baby_active_request = (function () {
        function cs_baby_active_request() {
        }
        return cs_baby_active_request;
    }());
    Sproto.cs_baby_active_request = cs_baby_active_request;
    __reflect(cs_baby_active_request.prototype, "Sproto.cs_baby_active_request");
    function _decode_cs_baby_active_request(d) {
        var o = new cs_baby_active_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_active_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_active_request"] = { en: _encode_cs_baby_active_request, de: _decode_cs_baby_active_request };
    var cs_baby_active_response = (function () {
        function cs_baby_active_response() {
        }
        return cs_baby_active_response;
    }());
    Sproto.cs_baby_active_response = cs_baby_active_response;
    __reflect(cs_baby_active_response.prototype, "Sproto.cs_baby_active_response");
    function _decode_cs_baby_active_response(d) {
        var o = new cs_baby_active_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_active_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_active_response"] = { en: _encode_cs_baby_active_response, de: _decode_cs_baby_active_response };
    var cs_baby_addexp_request = (function () {
        function cs_baby_addexp_request() {
        }
        return cs_baby_addexp_request;
    }());
    Sproto.cs_baby_addexp_request = cs_baby_addexp_request;
    __reflect(cs_baby_addexp_request.prototype, "Sproto.cs_baby_addexp_request");
    function _decode_cs_baby_addexp_request(d) {
        var o = new cs_baby_addexp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.autobuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_addexp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.autobuy != undefined) {
            se.wi(self.autobuy, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_addexp_request"] = { en: _encode_cs_baby_addexp_request, de: _decode_cs_baby_addexp_request };
    var cs_baby_addexp_response = (function () {
        function cs_baby_addexp_response() {
        }
        return cs_baby_addexp_response;
    }());
    Sproto.cs_baby_addexp_response = cs_baby_addexp_response;
    __reflect(cs_baby_addexp_response.prototype, "Sproto.cs_baby_addexp_response");
    function _decode_cs_baby_addexp_response(d) {
        var o = new cs_baby_addexp_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_addexp_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_addexp_response"] = { en: _encode_cs_baby_addexp_response, de: _decode_cs_baby_addexp_response };
    var cs_baby_addgift_request = (function () {
        function cs_baby_addgift_request() {
        }
        return cs_baby_addgift_request;
    }());
    Sproto.cs_baby_addgift_request = cs_baby_addgift_request;
    __reflect(cs_baby_addgift_request.prototype, "Sproto.cs_baby_addgift_request");
    function _decode_cs_baby_addgift_request(d) {
        var o = new cs_baby_addgift_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_addgift_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_addgift_request"] = { en: _encode_cs_baby_addgift_request, de: _decode_cs_baby_addgift_request };
    var cs_baby_addgift_response = (function () {
        function cs_baby_addgift_response() {
        }
        return cs_baby_addgift_response;
    }());
    Sproto.cs_baby_addgift_response = cs_baby_addgift_response;
    __reflect(cs_baby_addgift_response.prototype, "Sproto.cs_baby_addgift_response");
    function _decode_cs_baby_addgift_response(d) {
        var o = new cs_baby_addgift_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.exp = d.ri();
                    break;
                case 2:
                    o.level = d.ri();
                    break;
                case 3:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_addgift_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.exp != undefined) {
            se.wi(self.exp, 1);
        }
        if (self.level != undefined) {
            se.wi(self.level, 2);
        }
        if (self.id != undefined) {
            se.wi(self.id, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_addgift_response"] = { en: _encode_cs_baby_addgift_response, de: _decode_cs_baby_addgift_response };
    var cs_baby_explore_buy_request = (function () {
        function cs_baby_explore_buy_request() {
        }
        return cs_baby_explore_buy_request;
    }());
    Sproto.cs_baby_explore_buy_request = cs_baby_explore_buy_request;
    __reflect(cs_baby_explore_buy_request.prototype, "Sproto.cs_baby_explore_buy_request");
    function _decode_cs_baby_explore_buy_request(d) {
        var o = new cs_baby_explore_buy_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_explore_buy_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_explore_buy_request"] = { en: _encode_cs_baby_explore_buy_request, de: _decode_cs_baby_explore_buy_request };
    var cs_baby_explore_finish_request = (function () {
        function cs_baby_explore_finish_request() {
        }
        return cs_baby_explore_finish_request;
    }());
    Sproto.cs_baby_explore_finish_request = cs_baby_explore_finish_request;
    __reflect(cs_baby_explore_finish_request.prototype, "Sproto.cs_baby_explore_finish_request");
    function _decode_cs_baby_explore_finish_request(d) {
        var o = new cs_baby_explore_finish_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_explore_finish_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_explore_finish_request"] = { en: _encode_cs_baby_explore_finish_request, de: _decode_cs_baby_explore_finish_request };
    var cs_baby_explore_info_request = (function () {
        function cs_baby_explore_info_request() {
        }
        return cs_baby_explore_info_request;
    }());
    Sproto.cs_baby_explore_info_request = cs_baby_explore_info_request;
    __reflect(cs_baby_explore_info_request.prototype, "Sproto.cs_baby_explore_info_request");
    function _decode_cs_baby_explore_info_request(d) {
        var o = new cs_baby_explore_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_explore_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_explore_info_request"] = { en: _encode_cs_baby_explore_info_request, de: _decode_cs_baby_explore_info_request };
    var cs_baby_explore_quick_request = (function () {
        function cs_baby_explore_quick_request() {
        }
        return cs_baby_explore_quick_request;
    }());
    Sproto.cs_baby_explore_quick_request = cs_baby_explore_quick_request;
    __reflect(cs_baby_explore_quick_request.prototype, "Sproto.cs_baby_explore_quick_request");
    function _decode_cs_baby_explore_quick_request(d) {
        var o = new cs_baby_explore_quick_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_explore_quick_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_explore_quick_request"] = { en: _encode_cs_baby_explore_quick_request, de: _decode_cs_baby_explore_quick_request };
    var cs_baby_explore_refresh_request = (function () {
        function cs_baby_explore_refresh_request() {
        }
        return cs_baby_explore_refresh_request;
    }());
    Sproto.cs_baby_explore_refresh_request = cs_baby_explore_refresh_request;
    __reflect(cs_baby_explore_refresh_request.prototype, "Sproto.cs_baby_explore_refresh_request");
    function _decode_cs_baby_explore_refresh_request(d) {
        var o = new cs_baby_explore_refresh_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_explore_refresh_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_explore_refresh_request"] = { en: _encode_cs_baby_explore_refresh_request, de: _decode_cs_baby_explore_refresh_request };
    var cs_baby_explore_start_request = (function () {
        function cs_baby_explore_start_request() {
        }
        return cs_baby_explore_start_request;
    }());
    Sproto.cs_baby_explore_start_request = cs_baby_explore_start_request;
    __reflect(cs_baby_explore_start_request.prototype, "Sproto.cs_baby_explore_start_request");
    function _decode_cs_baby_explore_start_request(d) {
        var o = new cs_baby_explore_start_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                case 1:
                    o.petIds = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_explore_start_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        if (self.petIds != undefined) {
            se.wia(self.petIds, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_explore_start_request"] = { en: _encode_cs_baby_explore_start_request, de: _decode_cs_baby_explore_start_request };
    var cs_baby_hunsuit_up_request = (function () {
        function cs_baby_hunsuit_up_request() {
        }
        return cs_baby_hunsuit_up_request;
    }());
    Sproto.cs_baby_hunsuit_up_request = cs_baby_hunsuit_up_request;
    __reflect(cs_baby_hunsuit_up_request.prototype, "Sproto.cs_baby_hunsuit_up_request");
    function _decode_cs_baby_hunsuit_up_request(d) {
        var o = new cs_baby_hunsuit_up_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_hunsuit_up_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_hunsuit_up_request"] = { en: _encode_cs_baby_hunsuit_up_request, de: _decode_cs_baby_hunsuit_up_request };
    var cs_baby_hunsuit_up_response = (function () {
        function cs_baby_hunsuit_up_response() {
        }
        return cs_baby_hunsuit_up_response;
    }());
    Sproto.cs_baby_hunsuit_up_response = cs_baby_hunsuit_up_response;
    __reflect(cs_baby_hunsuit_up_response.prototype, "Sproto.cs_baby_hunsuit_up_response");
    function _decode_cs_baby_hunsuit_up_response(d) {
        var o = new cs_baby_hunsuit_up_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_hunsuit_up_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_hunsuit_up_response"] = { en: _encode_cs_baby_hunsuit_up_response, de: _decode_cs_baby_hunsuit_up_response };
    var cs_baby_merge_request = (function () {
        function cs_baby_merge_request() {
        }
        return cs_baby_merge_request;
    }());
    Sproto.cs_baby_merge_request = cs_baby_merge_request;
    __reflect(cs_baby_merge_request.prototype, "Sproto.cs_baby_merge_request");
    function _decode_cs_baby_merge_request(d) {
        var o = new cs_baby_merge_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_merge_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_merge_request"] = { en: _encode_cs_baby_merge_request, de: _decode_cs_baby_merge_request };
    var cs_baby_merge_response = (function () {
        function cs_baby_merge_response() {
        }
        return cs_baby_merge_response;
    }());
    Sproto.cs_baby_merge_response = cs_baby_merge_response;
    __reflect(cs_baby_merge_response.prototype, "Sproto.cs_baby_merge_response");
    function _decode_cs_baby_merge_response(d) {
        var o = new cs_baby_merge_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_merge_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_merge_response"] = { en: _encode_cs_baby_merge_response, de: _decode_cs_baby_merge_response };
    var cs_baby_outbound_request = (function () {
        function cs_baby_outbound_request() {
        }
        return cs_baby_outbound_request;
    }());
    Sproto.cs_baby_outbound_request = cs_baby_outbound_request;
    __reflect(cs_baby_outbound_request.prototype, "Sproto.cs_baby_outbound_request");
    function _decode_cs_baby_outbound_request(d) {
        var o = new cs_baby_outbound_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.first = d.ri();
                    break;
                case 1:
                    o.second = d.ri();
                    break;
                case 2:
                    o.third = d.ri();
                    break;
                case 3:
                    o.four = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_outbound_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.first != undefined) {
            se.wi(self.first, 0);
        }
        if (self.second != undefined) {
            se.wi(self.second, 1);
        }
        if (self.third != undefined) {
            se.wi(self.third, 2);
        }
        if (self.four != undefined) {
            se.wi(self.four, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_outbound_request"] = { en: _encode_cs_baby_outbound_request, de: _decode_cs_baby_outbound_request };
    var cs_baby_refreshskill_request = (function () {
        function cs_baby_refreshskill_request() {
        }
        return cs_baby_refreshskill_request;
    }());
    Sproto.cs_baby_refreshskill_request = cs_baby_refreshskill_request;
    __reflect(cs_baby_refreshskill_request.prototype, "Sproto.cs_baby_refreshskill_request");
    function _decode_cs_baby_refreshskill_request(d) {
        var o = new cs_baby_refreshskill_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 1:
                    o.id = d.ri();
                    break;
                case 2:
                    o.locklist = d.ria();
                    break;
                case 3:
                    o.type = d.ri();
                    break;
                case 4:
                    o.autoBuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_refreshskill_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        if (self.locklist != undefined) {
            se.wia(self.locklist, 2);
        }
        if (self.type != undefined) {
            se.wi(self.type, 3);
        }
        if (self.autoBuy != undefined) {
            se.wi(self.autoBuy, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_refreshskill_request"] = { en: _encode_cs_baby_refreshskill_request, de: _decode_cs_baby_refreshskill_request };
    var cs_baby_refreshskill_response = (function () {
        function cs_baby_refreshskill_response() {
        }
        return cs_baby_refreshskill_response;
    }());
    Sproto.cs_baby_refreshskill_response = cs_baby_refreshskill_response;
    __reflect(cs_baby_refreshskill_response.prototype, "Sproto.cs_baby_refreshskill_response");
    function _decode_cs_baby_refreshskill_response(d) {
        var o = new cs_baby_refreshskill_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.xilian = d.ri();
                    break;
                case 2:
                    o.xilianSkills = d.ria();
                    break;
                case 3:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_refreshskill_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.xilian != undefined) {
            se.wi(self.xilian, 1);
        }
        if (self.xilianSkills != undefined) {
            se.wia(self.xilianSkills, 2);
        }
        if (self.id != undefined) {
            se.wi(self.id, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_refreshskill_response"] = { en: _encode_cs_baby_refreshskill_response, de: _decode_cs_baby_refreshskill_response };
    var cs_baby_rename_request = (function () {
        function cs_baby_rename_request() {
        }
        return cs_baby_rename_request;
    }());
    Sproto.cs_baby_rename_request = cs_baby_rename_request;
    __reflect(cs_baby_rename_request.prototype, "Sproto.cs_baby_rename_request");
    function _decode_cs_baby_rename_request(d) {
        var o = new cs_baby_rename_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_rename_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_rename_request"] = { en: _encode_cs_baby_rename_request, de: _decode_cs_baby_rename_request };
    var cs_baby_rename_response = (function () {
        function cs_baby_rename_response() {
        }
        return cs_baby_rename_response;
    }());
    Sproto.cs_baby_rename_response = cs_baby_rename_response;
    __reflect(cs_baby_rename_response.prototype, "Sproto.cs_baby_rename_response");
    function _decode_cs_baby_rename_response(d) {
        var o = new cs_baby_rename_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                case 2:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_rename_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        if (self.id != undefined) {
            se.wi(self.id, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_rename_response"] = { en: _encode_cs_baby_rename_response, de: _decode_cs_baby_rename_response };
    var cs_baby_setskillin_request = (function () {
        function cs_baby_setskillin_request() {
        }
        return cs_baby_setskillin_request;
    }());
    Sproto.cs_baby_setskillin_request = cs_baby_setskillin_request;
    __reflect(cs_baby_setskillin_request.prototype, "Sproto.cs_baby_setskillin_request");
    function _decode_cs_baby_setskillin_request(d) {
        var o = new cs_baby_setskillin_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_setskillin_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_setskillin_request"] = { en: _encode_cs_baby_setskillin_request, de: _decode_cs_baby_setskillin_request };
    var cs_baby_setskillin_response = (function () {
        function cs_baby_setskillin_response() {
        }
        return cs_baby_setskillin_response;
    }());
    Sproto.cs_baby_setskillin_response = cs_baby_setskillin_response;
    __reflect(cs_baby_setskillin_response.prototype, "Sproto.cs_baby_setskillin_response");
    function _decode_cs_baby_setskillin_response(d) {
        var o = new cs_baby_setskillin_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.buffs = d.ria();
                    break;
                case 2:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_setskillin_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.buffs != undefined) {
            se.wia(self.buffs, 1);
        }
        if (self.id != undefined) {
            se.wi(self.id, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_setskillin_response"] = { en: _encode_cs_baby_setskillin_response, de: _decode_cs_baby_setskillin_response };
    var cs_baby_start_get_request = (function () {
        function cs_baby_start_get_request() {
        }
        return cs_baby_start_get_request;
    }());
    Sproto.cs_baby_start_get_request = cs_baby_start_get_request;
    __reflect(cs_baby_start_get_request.prototype, "Sproto.cs_baby_start_get_request");
    function _decode_cs_baby_start_get_request(d) {
        var o = new cs_baby_start_get_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.num = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_get_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.num != undefined) {
            se.wi(self.num, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_get_request"] = { en: _encode_cs_baby_start_get_request, de: _decode_cs_baby_start_get_request };
    var cs_baby_start_get_response = (function () {
        function cs_baby_start_get_response() {
        }
        return cs_baby_start_get_response;
    }());
    Sproto.cs_baby_start_get_response = cs_baby_start_get_response;
    __reflect(cs_baby_start_get_response.prototype, "Sproto.cs_baby_start_get_response");
    function _decode_cs_baby_start_get_response(d) {
        var o = new cs_baby_start_get_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.num = d.ri();
                    break;
                case 2:
                    o.cost = d.ri();
                    break;
                case 3:
                    o.star = d.ri();
                    break;
                case 4:
                    o.data = d.roa("baby_start_data");
                    break;
                case 5:
                    o.msgData = d.roa("baby_star_msg");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_get_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 6);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.num != undefined) {
            se.wi(self.num, 1);
        }
        if (self.cost != undefined) {
            se.wi(self.cost, 2);
        }
        if (self.star != undefined) {
            se.wi(self.star, 3);
        }
        if (self.data != undefined) {
            se.woa("baby_start_data", self.data, 4);
        }
        if (self.msgData != undefined) {
            se.woa("baby_star_msg", self.msgData, 5);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_get_response"] = { en: _encode_cs_baby_start_get_response, de: _decode_cs_baby_start_get_response };
    var cs_baby_start_light_request = (function () {
        function cs_baby_start_light_request() {
        }
        return cs_baby_start_light_request;
    }());
    Sproto.cs_baby_start_light_request = cs_baby_start_light_request;
    __reflect(cs_baby_start_light_request.prototype, "Sproto.cs_baby_start_light_request");
    function _decode_cs_baby_start_light_request(d) {
        var o = new cs_baby_start_light_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_light_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_light_request"] = { en: _encode_cs_baby_start_light_request, de: _decode_cs_baby_start_light_request };
    var cs_baby_start_light_response = (function () {
        function cs_baby_start_light_response() {
        }
        return cs_baby_start_light_response;
    }());
    Sproto.cs_baby_start_light_response = cs_baby_start_light_response;
    __reflect(cs_baby_start_light_response.prototype, "Sproto.cs_baby_start_light_response");
    function _decode_cs_baby_start_light_response(d) {
        var o = new cs_baby_start_light_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_light_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_light_response"] = { en: _encode_cs_baby_start_light_response, de: _decode_cs_baby_start_light_response };
    var cs_baby_start_smelt_request = (function () {
        function cs_baby_start_smelt_request() {
        }
        return cs_baby_start_smelt_request;
    }());
    Sproto.cs_baby_start_smelt_request = cs_baby_start_smelt_request;
    __reflect(cs_baby_start_smelt_request.prototype, "Sproto.cs_baby_start_smelt_request");
    function _decode_cs_baby_start_smelt_request(d) {
        var o = new cs_baby_start_smelt_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 1:
                    o.idList = d.roa("baby_start_smelt");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_smelt_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.idList != undefined) {
            se.woa("baby_start_smelt", self.idList, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_smelt_request"] = { en: _encode_cs_baby_start_smelt_request, de: _decode_cs_baby_start_smelt_request };
    var cs_baby_start_smelt_response = (function () {
        function cs_baby_start_smelt_response() {
        }
        return cs_baby_start_smelt_response;
    }());
    Sproto.cs_baby_start_smelt_response = cs_baby_start_smelt_response;
    __reflect(cs_baby_start_smelt_response.prototype, "Sproto.cs_baby_start_smelt_response");
    function _decode_cs_baby_start_smelt_response(d) {
        var o = new cs_baby_start_smelt_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_smelt_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_smelt_response"] = { en: _encode_cs_baby_start_smelt_response, de: _decode_cs_baby_start_smelt_response };
    var cs_baby_start_up_lv_request = (function () {
        function cs_baby_start_up_lv_request() {
        }
        return cs_baby_start_up_lv_request;
    }());
    Sproto.cs_baby_start_up_lv_request = cs_baby_start_up_lv_request;
    __reflect(cs_baby_start_up_lv_request.prototype, "Sproto.cs_baby_start_up_lv_request");
    function _decode_cs_baby_start_up_lv_request(d) {
        var o = new cs_baby_start_up_lv_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.babyid = d.ri();
                    break;
                case 1:
                    o.pos = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_up_lv_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.babyid != undefined) {
            se.wi(self.babyid, 0);
        }
        if (self.pos != undefined) {
            se.wi(self.pos, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_up_lv_request"] = { en: _encode_cs_baby_start_up_lv_request, de: _decode_cs_baby_start_up_lv_request };
    var cs_baby_start_up_lv_response = (function () {
        function cs_baby_start_up_lv_response() {
        }
        return cs_baby_start_up_lv_response;
    }());
    Sproto.cs_baby_start_up_lv_response = cs_baby_start_up_lv_response;
    __reflect(cs_baby_start_up_lv_response.prototype, "Sproto.cs_baby_start_up_lv_response");
    function _decode_cs_baby_start_up_lv_response(d) {
        var o = new cs_baby_start_up_lv_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.pos = d.ri();
                    break;
                case 2:
                    o.no = d.ri();
                    break;
                case 3:
                    o.babyid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_up_lv_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.pos != undefined) {
            se.wi(self.pos, 1);
        }
        if (self.no != undefined) {
            se.wi(self.no, 2);
        }
        if (self.babyid != undefined) {
            se.wi(self.babyid, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_up_lv_response"] = { en: _encode_cs_baby_start_up_lv_response, de: _decode_cs_baby_start_up_lv_response };
    var cs_baby_start_use_request = (function () {
        function cs_baby_start_use_request() {
        }
        return cs_baby_start_use_request;
    }());
    Sproto.cs_baby_start_use_request = cs_baby_start_use_request;
    __reflect(cs_baby_start_use_request.prototype, "Sproto.cs_baby_start_use_request");
    function _decode_cs_baby_start_use_request(d) {
        var o = new cs_baby_start_use_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.babyid = d.ri();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                case 2:
                    o.pos = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_use_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.babyid != undefined) {
            se.wi(self.babyid, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        if (self.pos != undefined) {
            se.wi(self.pos, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_use_request"] = { en: _encode_cs_baby_start_use_request, de: _decode_cs_baby_start_use_request };
    var cs_baby_start_use_response = (function () {
        function cs_baby_start_use_response() {
        }
        return cs_baby_start_use_response;
    }());
    Sproto.cs_baby_start_use_response = cs_baby_start_use_response;
    __reflect(cs_baby_start_use_response.prototype, "Sproto.cs_baby_start_use_response");
    function _decode_cs_baby_start_use_response(d) {
        var o = new cs_baby_start_use_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.pos = d.ri();
                    break;
                case 2:
                    o.no = d.ri();
                    break;
                case 3:
                    o.babyid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_start_use_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.pos != undefined) {
            se.wi(self.pos, 1);
        }
        if (self.no != undefined) {
            se.wi(self.no, 2);
        }
        if (self.babyid != undefined) {
            se.wi(self.babyid, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_start_use_response"] = { en: _encode_cs_baby_start_use_response, de: _decode_cs_baby_start_use_response };
    var cs_baby_up_hun_request = (function () {
        function cs_baby_up_hun_request() {
        }
        return cs_baby_up_hun_request;
    }());
    Sproto.cs_baby_up_hun_request = cs_baby_up_hun_request;
    __reflect(cs_baby_up_hun_request.prototype, "Sproto.cs_baby_up_hun_request");
    function _decode_cs_baby_up_hun_request(d) {
        var o = new cs_baby_up_hun_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.hunid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_up_hun_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.hunid != undefined) {
            se.wi(self.hunid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_up_hun_request"] = { en: _encode_cs_baby_up_hun_request, de: _decode_cs_baby_up_hun_request };
    var cs_baby_up_hun_response = (function () {
        function cs_baby_up_hun_response() {
        }
        return cs_baby_up_hun_response;
    }());
    Sproto.cs_baby_up_hun_response = cs_baby_up_hun_response;
    __reflect(cs_baby_up_hun_response.prototype, "Sproto.cs_baby_up_hun_response");
    function _decode_cs_baby_up_hun_response(d) {
        var o = new cs_baby_up_hun_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_up_hun_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_up_hun_response"] = { en: _encode_cs_baby_up_hun_response, de: _decode_cs_baby_up_hun_response };
    var cs_baby_up_ling_request = (function () {
        function cs_baby_up_ling_request() {
        }
        return cs_baby_up_ling_request;
    }());
    Sproto.cs_baby_up_ling_request = cs_baby_up_ling_request;
    __reflect(cs_baby_up_ling_request.prototype, "Sproto.cs_baby_up_ling_request");
    function _decode_cs_baby_up_ling_request(d) {
        var o = new cs_baby_up_ling_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.lingid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_up_ling_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.lingid != undefined) {
            se.wi(self.lingid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_up_ling_request"] = { en: _encode_cs_baby_up_ling_request, de: _decode_cs_baby_up_ling_request };
    var cs_baby_up_ling_response = (function () {
        function cs_baby_up_ling_response() {
        }
        return cs_baby_up_ling_response;
    }());
    Sproto.cs_baby_up_ling_response = cs_baby_up_ling_response;
    __reflect(cs_baby_up_ling_response.prototype, "Sproto.cs_baby_up_ling_response");
    function _decode_cs_baby_up_ling_response(d) {
        var o = new cs_baby_up_ling_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baby_up_ling_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baby_up_ling_response"] = { en: _encode_cs_baby_up_ling_response, de: _decode_cs_baby_up_ling_response };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=baby_c2s.js.map