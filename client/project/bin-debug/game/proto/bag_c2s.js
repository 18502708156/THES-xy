// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_bag_add_grid_request = (function () {
        function cs_bag_add_grid_request() {
        }
        return cs_bag_add_grid_request;
    }());
    Sproto.cs_bag_add_grid_request = cs_bag_add_grid_request;
    __reflect(cs_bag_add_grid_request.prototype, "Sproto.cs_bag_add_grid_request");
    function _decode_cs_bag_add_grid_request(d) {
        var o = new cs_bag_add_grid_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.bagNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_bag_add_grid_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.bagNum != undefined) {
            se.wi(self.bagNum, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_bag_add_grid_request"] = { en: _encode_cs_bag_add_grid_request, de: _decode_cs_bag_add_grid_request };
    var cs_bag_get_goods_by_store_request = (function () {
        function cs_bag_get_goods_by_store_request() {
        }
        return cs_bag_get_goods_by_store_request;
    }());
    Sproto.cs_bag_get_goods_by_store_request = cs_bag_get_goods_by_store_request;
    __reflect(cs_bag_get_goods_by_store_request.prototype, "Sproto.cs_bag_get_goods_by_store_request");
    function _decode_cs_bag_get_goods_by_store_request(d) {
        var o = new cs_bag_get_goods_by_store_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.uuid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_bag_get_goods_by_store_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.uuid != undefined) {
            se.wi(self.uuid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_bag_get_goods_by_store_request"] = { en: _encode_cs_bag_get_goods_by_store_request, de: _decode_cs_bag_get_goods_by_store_request };
    var cs_bag_smelt_request = (function () {
        function cs_bag_smelt_request() {
        }
        return cs_bag_smelt_request;
    }());
    Sproto.cs_bag_smelt_request = cs_bag_smelt_request;
    __reflect(cs_bag_smelt_request.prototype, "Sproto.cs_bag_smelt_request");
    function _decode_cs_bag_smelt_request(d) {
        var o = new cs_bag_smelt_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.itemHandle = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_bag_smelt_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.itemHandle != undefined) {
            se.wia(self.itemHandle, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_bag_smelt_request"] = { en: _encode_cs_bag_smelt_request, de: _decode_cs_bag_smelt_request };
    var cs_bag_use_item_request = (function () {
        function cs_bag_use_item_request() {
        }
        return cs_bag_use_item_request;
    }());
    Sproto.cs_bag_use_item_request = cs_bag_use_item_request;
    __reflect(cs_bag_use_item_request.prototype, "Sproto.cs_bag_use_item_request");
    function _decode_cs_bag_use_item_request(d) {
        var o = new cs_bag_use_item_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_bag_use_item_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_bag_use_item_request"] = { en: _encode_cs_bag_use_item_request, de: _decode_cs_bag_use_item_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=bag_c2s.js.map