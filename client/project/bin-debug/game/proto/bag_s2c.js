// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var item_count_base = (function () {
        function item_count_base() {
        }
        return item_count_base;
    }());
    Sproto.item_count_base = item_count_base;
    __reflect(item_count_base.prototype, "Sproto.item_count_base");
    function _decode_item_count_base(d) {
        var o = new item_count_base;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_item_count_base(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["item_count_base"] = { en: _encode_item_count_base, de: _decode_item_count_base };
    var sc_bag_deal_add_item_request = (function () {
        function sc_bag_deal_add_item_request() {
        }
        return sc_bag_deal_add_item_request;
    }());
    Sproto.sc_bag_deal_add_item_request = sc_bag_deal_add_item_request;
    __reflect(sc_bag_deal_add_item_request.prototype, "Sproto.sc_bag_deal_add_item_request");
    function _decode_sc_bag_deal_add_item_request(d) {
        var o = new sc_bag_deal_add_item_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.data = d.ro("item_data");
                    break;
                case 2:
                    o.showTip = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_deal_add_item_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.data != undefined) {
            se.wo("item_data", self.data, 1);
        }
        if (self.showTip != undefined) {
            se.wi(self.showTip, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_deal_add_item_request"] = { en: _encode_sc_bag_deal_add_item_request, de: _decode_sc_bag_deal_add_item_request };
    var sc_bag_deal_delete_item_request = (function () {
        function sc_bag_deal_delete_item_request() {
        }
        return sc_bag_deal_delete_item_request;
    }());
    Sproto.sc_bag_deal_delete_item_request = sc_bag_deal_delete_item_request;
    __reflect(sc_bag_deal_delete_item_request.prototype, "Sproto.sc_bag_deal_delete_item_request");
    function _decode_sc_bag_deal_delete_item_request(d) {
        var o = new sc_bag_deal_delete_item_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.handle = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_deal_delete_item_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.handle != undefined) {
            se.wi(self.handle, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_deal_delete_item_request"] = { en: _encode_sc_bag_deal_delete_item_request, de: _decode_sc_bag_deal_delete_item_request };
    var sc_bag_deal_smelt_result_request = (function () {
        function sc_bag_deal_smelt_result_request() {
        }
        return sc_bag_deal_smelt_result_request;
    }());
    Sproto.sc_bag_deal_smelt_result_request = sc_bag_deal_smelt_result_request;
    __reflect(sc_bag_deal_smelt_result_request.prototype, "Sproto.sc_bag_deal_smelt_result_request");
    function _decode_sc_bag_deal_smelt_result_request(d) {
        var o = new sc_bag_deal_smelt_result_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.state = d.ri();
                    break;
                case 1:
                    o.goldCount = d.ri();
                    break;
                case 2:
                    o.len = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_deal_smelt_result_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.state != undefined) {
            se.wi(self.state, 0);
        }
        if (self.goldCount != undefined) {
            se.wi(self.goldCount, 1);
        }
        if (self.len != undefined) {
            se.wi(self.len, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_deal_smelt_result_request"] = { en: _encode_sc_bag_deal_smelt_result_request, de: _decode_sc_bag_deal_smelt_result_request };
    var sc_bag_deal_valumn_add_request = (function () {
        function sc_bag_deal_valumn_add_request() {
        }
        return sc_bag_deal_valumn_add_request;
    }());
    Sproto.sc_bag_deal_valumn_add_request = sc_bag_deal_valumn_add_request;
    __reflect(sc_bag_deal_valumn_add_request.prototype, "Sproto.sc_bag_deal_valumn_add_request");
    function _decode_sc_bag_deal_valumn_add_request(d) {
        var o = new sc_bag_deal_valumn_add_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.bagNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_deal_valumn_add_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.bagNum != undefined) {
            se.wi(self.bagNum, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_deal_valumn_add_request"] = { en: _encode_sc_bag_deal_valumn_add_request, de: _decode_sc_bag_deal_valumn_add_request };
    var sc_bag_get_treasure_equip_request = (function () {
        function sc_bag_get_treasure_equip_request() {
        }
        return sc_bag_get_treasure_equip_request;
    }());
    Sproto.sc_bag_get_treasure_equip_request = sc_bag_get_treasure_equip_request;
    __reflect(sc_bag_get_treasure_equip_request.prototype, "Sproto.sc_bag_get_treasure_equip_request");
    function _decode_sc_bag_get_treasure_equip_request(d) {
        var o = new sc_bag_get_treasure_equip_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.handle = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_get_treasure_equip_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.handle != undefined) {
            se.wia(self.handle, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_get_treasure_equip_request"] = { en: _encode_sc_bag_get_treasure_equip_request, de: _decode_sc_bag_get_treasure_equip_request };
    var sc_bag_init_data_request = (function () {
        function sc_bag_init_data_request() {
        }
        return sc_bag_init_data_request;
    }());
    Sproto.sc_bag_init_data_request = sc_bag_init_data_request;
    __reflect(sc_bag_init_data_request.prototype, "Sproto.sc_bag_init_data_request");
    function _decode_sc_bag_init_data_request(d) {
        var o = new sc_bag_init_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.code = d.ri();
                    break;
                case 1:
                    o.type = d.ri();
                    break;
                case 2:
                    o.datas = d.roa("item_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_init_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.code != undefined) {
            se.wi(self.code, 0);
        }
        if (self.type != undefined) {
            se.wi(self.type, 1);
        }
        if (self.datas != undefined) {
            se.woa("item_data", self.datas, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_init_data_request"] = { en: _encode_sc_bag_init_data_request, de: _decode_sc_bag_init_data_request };
    var sc_bag_update_item_data_request = (function () {
        function sc_bag_update_item_data_request() {
        }
        return sc_bag_update_item_data_request;
    }());
    Sproto.sc_bag_update_item_data_request = sc_bag_update_item_data_request;
    __reflect(sc_bag_update_item_data_request.prototype, "Sproto.sc_bag_update_item_data_request");
    function _decode_sc_bag_update_item_data_request(d) {
        var o = new sc_bag_update_item_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.handle = d.ri();
                    break;
                case 2:
                    o.num = d.ri();
                    break;
                case 3:
                    o.showTip = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_update_item_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.handle != undefined) {
            se.wi(self.handle, 1);
        }
        if (self.num != undefined) {
            se.wi(self.num, 2);
        }
        if (self.showTip != undefined) {
            se.wi(self.showTip, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_update_item_data_request"] = { en: _encode_sc_bag_update_item_data_request, de: _decode_sc_bag_update_item_data_request };
    var sc_bag_user_item_back_request = (function () {
        function sc_bag_user_item_back_request() {
        }
        return sc_bag_user_item_back_request;
    }());
    Sproto.sc_bag_user_item_back_request = sc_bag_user_item_back_request;
    __reflect(sc_bag_user_item_back_request.prototype, "Sproto.sc_bag_user_item_back_request");
    function _decode_sc_bag_user_item_back_request(d) {
        var o = new sc_bag_user_item_back_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.tipIndex = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_bag_user_item_back_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.tipIndex != undefined) {
            se.wi(self.tipIndex, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_bag_user_item_back_request"] = { en: _encode_sc_bag_user_item_back_request, de: _decode_sc_bag_user_item_back_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=bag_s2c.js.map