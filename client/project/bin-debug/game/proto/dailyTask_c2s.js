// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_dailyTask_activity_find_request = (function () {
        function cs_dailyTask_activity_find_request() {
        }
        return cs_dailyTask_activity_find_request;
    }());
    Sproto.cs_dailyTask_activity_find_request = cs_dailyTask_activity_find_request;
    __reflect(cs_dailyTask_activity_find_request.prototype, "Sproto.cs_dailyTask_activity_find_request");
    function _decode_cs_dailyTask_activity_find_request(d) {
        var o = new cs_dailyTask_activity_find_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.activityNo = d.ri();
                    break;
                case 1:
                    o.cashtype = d.ri();
                    break;
                case 2:
                    o.findType = d.ri();
                    break;
                case 3:
                    o.num = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_activity_find_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.activityNo != undefined) {
            se.wi(self.activityNo, 0);
        }
        if (self.cashtype != undefined) {
            se.wi(self.cashtype, 1);
        }
        if (self.findType != undefined) {
            se.wi(self.findType, 2);
        }
        if (self.num != undefined) {
            se.wi(self.num, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_activity_find_request"] = { en: _encode_cs_dailyTask_activity_find_request, de: _decode_cs_dailyTask_activity_find_request };
    var cs_dailyTask_activity_find_response = (function () {
        function cs_dailyTask_activity_find_response() {
        }
        return cs_dailyTask_activity_find_response;
    }());
    Sproto.cs_dailyTask_activity_find_response = cs_dailyTask_activity_find_response;
    __reflect(cs_dailyTask_activity_find_response.prototype, "Sproto.cs_dailyTask_activity_find_response");
    function _decode_cs_dailyTask_activity_find_response(d) {
        var o = new cs_dailyTask_activity_find_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.exp = d.ri();
                    break;
                case 2:
                    o.activityNo = d.ri();
                    break;
                case 3:
                    o.num = d.ri();
                    break;
                case 4:
                    o.findType = d.ri();
                    break;
                case 5:
                    o.findExpNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_activity_find_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 6);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.exp != undefined) {
            se.wi(self.exp, 1);
        }
        if (self.activityNo != undefined) {
            se.wi(self.activityNo, 2);
        }
        if (self.num != undefined) {
            se.wi(self.num, 3);
        }
        if (self.findType != undefined) {
            se.wi(self.findType, 4);
        }
        if (self.findExpNum != undefined) {
            se.wi(self.findExpNum, 5);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_activity_find_response"] = { en: _encode_cs_dailyTask_activity_find_response, de: _decode_cs_dailyTask_activity_find_response };
    var cs_dailyTask_activity_find_all_exp_request = (function () {
        function cs_dailyTask_activity_find_all_exp_request() {
        }
        return cs_dailyTask_activity_find_all_exp_request;
    }());
    Sproto.cs_dailyTask_activity_find_all_exp_request = cs_dailyTask_activity_find_all_exp_request;
    __reflect(cs_dailyTask_activity_find_all_exp_request.prototype, "Sproto.cs_dailyTask_activity_find_all_exp_request");
    function _decode_cs_dailyTask_activity_find_all_exp_request(d) {
        var o = new cs_dailyTask_activity_find_all_exp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_activity_find_all_exp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_activity_find_all_exp_request"] = { en: _encode_cs_dailyTask_activity_find_all_exp_request, de: _decode_cs_dailyTask_activity_find_all_exp_request };
    var cs_dailyTask_activity_find_all_exp_response = (function () {
        function cs_dailyTask_activity_find_all_exp_response() {
        }
        return cs_dailyTask_activity_find_all_exp_response;
    }());
    Sproto.cs_dailyTask_activity_find_all_exp_response = cs_dailyTask_activity_find_all_exp_response;
    __reflect(cs_dailyTask_activity_find_all_exp_response.prototype, "Sproto.cs_dailyTask_activity_find_all_exp_response");
    function _decode_cs_dailyTask_activity_find_all_exp_response(d) {
        var o = new cs_dailyTask_activity_find_all_exp_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.findExpNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_activity_find_all_exp_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.findExpNum != undefined) {
            se.wi(self.findExpNum, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_activity_find_all_exp_response"] = { en: _encode_cs_dailyTask_activity_find_all_exp_response, de: _decode_cs_dailyTask_activity_find_all_exp_response };
    var cs_dailyTask_activity_reward_request = (function () {
        function cs_dailyTask_activity_reward_request() {
        }
        return cs_dailyTask_activity_reward_request;
    }());
    Sproto.cs_dailyTask_activity_reward_request = cs_dailyTask_activity_reward_request;
    __reflect(cs_dailyTask_activity_reward_request.prototype, "Sproto.cs_dailyTask_activity_reward_request");
    function _decode_cs_dailyTask_activity_reward_request(d) {
        var o = new cs_dailyTask_activity_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rewardNo = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_activity_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rewardNo != undefined) {
            se.wi(self.rewardNo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_activity_reward_request"] = { en: _encode_cs_dailyTask_activity_reward_request, de: _decode_cs_dailyTask_activity_reward_request };
    var cs_dailyTask_activity_reward_response = (function () {
        function cs_dailyTask_activity_reward_response() {
        }
        return cs_dailyTask_activity_reward_response;
    }());
    Sproto.cs_dailyTask_activity_reward_response = cs_dailyTask_activity_reward_response;
    __reflect(cs_dailyTask_activity_reward_response.prototype, "Sproto.cs_dailyTask_activity_reward_response");
    function _decode_cs_dailyTask_activity_reward_response(d) {
        var o = new cs_dailyTask_activity_reward_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.activityReward = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_activity_reward_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.activityReward != undefined) {
            se.wi(self.activityReward, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_activity_reward_response"] = { en: _encode_cs_dailyTask_activity_reward_response, de: _decode_cs_dailyTask_activity_reward_response };
    var cs_dailyTask_otherActivity_complete_request = (function () {
        function cs_dailyTask_otherActivity_complete_request() {
        }
        return cs_dailyTask_otherActivity_complete_request;
    }());
    Sproto.cs_dailyTask_otherActivity_complete_request = cs_dailyTask_otherActivity_complete_request;
    __reflect(cs_dailyTask_otherActivity_complete_request.prototype, "Sproto.cs_dailyTask_otherActivity_complete_request");
    function _decode_cs_dailyTask_otherActivity_complete_request(d) {
        var o = new cs_dailyTask_otherActivity_complete_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherActivity = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_otherActivity_complete_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.otherActivity != undefined) {
            se.wi(self.otherActivity, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_otherActivity_complete_request"] = { en: _encode_cs_dailyTask_otherActivity_complete_request, de: _decode_cs_dailyTask_otherActivity_complete_request };
    var cs_dailyTask_otherActivity_monster_request = (function () {
        function cs_dailyTask_otherActivity_monster_request() {
        }
        return cs_dailyTask_otherActivity_monster_request;
    }());
    Sproto.cs_dailyTask_otherActivity_monster_request = cs_dailyTask_otherActivity_monster_request;
    __reflect(cs_dailyTask_otherActivity_monster_request.prototype, "Sproto.cs_dailyTask_otherActivity_monster_request");
    function _decode_cs_dailyTask_otherActivity_monster_request(d) {
        var o = new cs_dailyTask_otherActivity_monster_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_otherActivity_monster_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_otherActivity_monster_request"] = { en: _encode_cs_dailyTask_otherActivity_monster_request, de: _decode_cs_dailyTask_otherActivity_monster_request };
    var cs_dailyTask_otherActivity_reward_request = (function () {
        function cs_dailyTask_otherActivity_reward_request() {
        }
        return cs_dailyTask_otherActivity_reward_request;
    }());
    Sproto.cs_dailyTask_otherActivity_reward_request = cs_dailyTask_otherActivity_reward_request;
    __reflect(cs_dailyTask_otherActivity_reward_request.prototype, "Sproto.cs_dailyTask_otherActivity_reward_request");
    function _decode_cs_dailyTask_otherActivity_reward_request(d) {
        var o = new cs_dailyTask_otherActivity_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherActivity = d.ri();
                    break;
                case 1:
                    o.reward = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_otherActivity_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.otherActivity != undefined) {
            se.wi(self.otherActivity, 0);
        }
        if (self.reward != undefined) {
            se.wi(self.reward, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_otherActivity_reward_request"] = { en: _encode_cs_dailyTask_otherActivity_reward_request, de: _decode_cs_dailyTask_otherActivity_reward_request };
    var cs_dailyTask_up_level_request = (function () {
        function cs_dailyTask_up_level_request() {
        }
        return cs_dailyTask_up_level_request;
    }());
    Sproto.cs_dailyTask_up_level_request = cs_dailyTask_up_level_request;
    __reflect(cs_dailyTask_up_level_request.prototype, "Sproto.cs_dailyTask_up_level_request");
    function _decode_cs_dailyTask_up_level_request(d) {
        var o = new cs_dailyTask_up_level_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_up_level_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_up_level_request"] = { en: _encode_cs_dailyTask_up_level_request, de: _decode_cs_dailyTask_up_level_request };
    var cs_dailyTask_up_level_response = (function () {
        function cs_dailyTask_up_level_response() {
        }
        return cs_dailyTask_up_level_response;
    }());
    Sproto.cs_dailyTask_up_level_response = cs_dailyTask_up_level_response;
    __reflect(cs_dailyTask_up_level_response.prototype, "Sproto.cs_dailyTask_up_level_response");
    function _decode_cs_dailyTask_up_level_response(d) {
        var o = new cs_dailyTask_up_level_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.lv = d.ri();
                    break;
                case 2:
                    o.exp = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_up_level_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.lv != undefined) {
            se.wi(self.lv, 1);
        }
        if (self.exp != undefined) {
            se.wi(self.exp, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_up_level_response"] = { en: _encode_cs_dailyTask_up_level_response, de: _decode_cs_dailyTask_up_level_response };
    var cs_dailyTask_up_monster_request = (function () {
        function cs_dailyTask_up_monster_request() {
        }
        return cs_dailyTask_up_monster_request;
    }());
    Sproto.cs_dailyTask_up_monster_request = cs_dailyTask_up_monster_request;
    __reflect(cs_dailyTask_up_monster_request.prototype, "Sproto.cs_dailyTask_up_monster_request");
    function _decode_cs_dailyTask_up_monster_request(d) {
        var o = new cs_dailyTask_up_monster_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_dailyTask_up_monster_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_dailyTask_up_monster_request"] = { en: _encode_cs_dailyTask_up_monster_request, de: _decode_cs_dailyTask_up_monster_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=dailyTask_c2s.js.map