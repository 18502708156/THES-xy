// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_accu_login_get_request = (function () {
        function cs_accu_login_get_request() {
        }
        return cs_accu_login_get_request;
    }());
    Sproto.cs_accu_login_get_request = cs_accu_login_get_request;
    __reflect(cs_accu_login_get_request.prototype, "Sproto.cs_accu_login_get_request");
    function _decode_cs_accu_login_get_request(d) {
        var o = new cs_accu_login_get_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.index = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_accu_login_get_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.index != undefined) {
            se.wi(self.index, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_accu_login_get_request"] = { en: _encode_cs_accu_login_get_request, de: _decode_cs_accu_login_get_request };
    var cs_baserecord_info_request = (function () {
        function cs_baserecord_info_request() {
        }
        return cs_baserecord_info_request;
    }());
    Sproto.cs_baserecord_info_request = cs_baserecord_info_request;
    __reflect(cs_baserecord_info_request.prototype, "Sproto.cs_baserecord_info_request");
    function _decode_cs_baserecord_info_request(d) {
        var o = new cs_baserecord_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_baserecord_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_baserecord_info_request"] = { en: _encode_cs_baserecord_info_request, de: _decode_cs_baserecord_info_request };
    var cs_change_player_name_request = (function () {
        function cs_change_player_name_request() {
        }
        return cs_change_player_name_request;
    }());
    Sproto.cs_change_player_name_request = cs_change_player_name_request;
    __reflect(cs_change_player_name_request.prototype, "Sproto.cs_change_player_name_request");
    function _decode_cs_change_player_name_request(d) {
        var o = new cs_change_player_name_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.name = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_change_player_name_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.name != undefined) {
            se.ws(self.name, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_change_player_name_request"] = { en: _encode_cs_change_player_name_request, de: _decode_cs_change_player_name_request };
    var cs_create_new_sub_role_request = (function () {
        function cs_create_new_sub_role_request() {
        }
        return cs_create_new_sub_role_request;
    }());
    Sproto.cs_create_new_sub_role_request = cs_create_new_sub_role_request;
    __reflect(cs_create_new_sub_role_request.prototype, "Sproto.cs_create_new_sub_role_request");
    function _decode_cs_create_new_sub_role_request(d) {
        var o = new cs_create_new_sub_role_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.job = d.ri();
                    break;
                case 1:
                    o.sex = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_create_new_sub_role_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.job != undefined) {
            se.wi(self.job, 0);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_create_new_sub_role_request"] = { en: _encode_cs_create_new_sub_role_request, de: _decode_cs_create_new_sub_role_request };
    var cs_cross_team_reward_count_request = (function () {
        function cs_cross_team_reward_count_request() {
        }
        return cs_cross_team_reward_count_request;
    }());
    Sproto.cs_cross_team_reward_count_request = cs_cross_team_reward_count_request;
    __reflect(cs_cross_team_reward_count_request.prototype, "Sproto.cs_cross_team_reward_count_request");
    function _decode_cs_cross_team_reward_count_request(d) {
        var o = new cs_cross_team_reward_count_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_cross_team_reward_count_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_cross_team_reward_count_request"] = { en: _encode_cs_cross_team_reward_count_request, de: _decode_cs_cross_team_reward_count_request };
    var cs_get_gongnengyugao_reward_request = (function () {
        function cs_get_gongnengyugao_reward_request() {
        }
        return cs_get_gongnengyugao_reward_request;
    }());
    Sproto.cs_get_gongnengyugao_reward_request = cs_get_gongnengyugao_reward_request;
    __reflect(cs_get_gongnengyugao_reward_request.prototype, "Sproto.cs_get_gongnengyugao_reward_request");
    function _decode_cs_get_gongnengyugao_reward_request(d) {
        var o = new cs_get_gongnengyugao_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.index = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_gongnengyugao_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.index != undefined) {
            se.wi(self.index, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_gongnengyugao_reward_request"] = { en: _encode_cs_get_gongnengyugao_reward_request, de: _decode_cs_get_gongnengyugao_reward_request };
    var cs_get_gongnengyugao_reward_response = (function () {
        function cs_get_gongnengyugao_reward_response() {
        }
        return cs_get_gongnengyugao_reward_response;
    }());
    Sproto.cs_get_gongnengyugao_reward_response = cs_get_gongnengyugao_reward_response;
    __reflect(cs_get_gongnengyugao_reward_response.prototype, "Sproto.cs_get_gongnengyugao_reward_response");
    function _decode_cs_get_gongnengyugao_reward_response(d) {
        var o = new cs_get_gongnengyugao_reward_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.index = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_gongnengyugao_reward_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.index != undefined) {
            se.wi(self.index, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_gongnengyugao_reward_response"] = { en: _encode_cs_get_gongnengyugao_reward_response, de: _decode_cs_get_gongnengyugao_reward_response };
    var cs_get_kefu_qq_response = (function () {
        function cs_get_kefu_qq_response() {
        }
        return cs_get_kefu_qq_response;
    }());
    Sproto.cs_get_kefu_qq_response = cs_get_kefu_qq_response;
    __reflect(cs_get_kefu_qq_response.prototype, "Sproto.cs_get_kefu_qq_response");
    function _decode_cs_get_kefu_qq_response(d) {
        var o = new cs_get_kefu_qq_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.qq = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_kefu_qq_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.qq != undefined) {
            se.ws(self.qq, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_kefu_qq_response"] = { en: _encode_cs_get_kefu_qq_response, de: _decode_cs_get_kefu_qq_response };
    var cs_get_other_actor_equip_request = (function () {
        function cs_get_other_actor_equip_request() {
        }
        return cs_get_other_actor_equip_request;
    }());
    Sproto.cs_get_other_actor_equip_request = cs_get_other_actor_equip_request;
    __reflect(cs_get_other_actor_equip_request.prototype, "Sproto.cs_get_other_actor_equip_request");
    function _decode_cs_get_other_actor_equip_request(d) {
        var o = new cs_get_other_actor_equip_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                case 1:
                    o.slot = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_other_actor_equip_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        if (self.slot != undefined) {
            se.wi(self.slot, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_other_actor_equip_request"] = { en: _encode_cs_get_other_actor_equip_request, de: _decode_cs_get_other_actor_equip_request };
    var cs_get_other_actor_info_request = (function () {
        function cs_get_other_actor_info_request() {
        }
        return cs_get_other_actor_info_request;
    }());
    Sproto.cs_get_other_actor_info_request = cs_get_other_actor_info_request;
    __reflect(cs_get_other_actor_info_request.prototype, "Sproto.cs_get_other_actor_info_request");
    function _decode_cs_get_other_actor_info_request(d) {
        var o = new cs_get_other_actor_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_other_actor_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_other_actor_info_request"] = { en: _encode_cs_get_other_actor_info_request, de: _decode_cs_get_other_actor_info_request };
    var cs_get_other_actor_item_request = (function () {
        function cs_get_other_actor_item_request() {
        }
        return cs_get_other_actor_item_request;
    }());
    Sproto.cs_get_other_actor_item_request = cs_get_other_actor_item_request;
    __reflect(cs_get_other_actor_item_request.prototype, "Sproto.cs_get_other_actor_item_request");
    function _decode_cs_get_other_actor_item_request(d) {
        var o = new cs_get_other_actor_item_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                case 1:
                    o.itemhandle = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_other_actor_item_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        if (self.itemhandle != undefined) {
            se.wi(self.itemhandle, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_other_actor_item_request"] = { en: _encode_cs_get_other_actor_item_request, de: _decode_cs_get_other_actor_item_request };
    var cs_get_other_actor_pet_request = (function () {
        function cs_get_other_actor_pet_request() {
        }
        return cs_get_other_actor_pet_request;
    }());
    Sproto.cs_get_other_actor_pet_request = cs_get_other_actor_pet_request;
    __reflect(cs_get_other_actor_pet_request.prototype, "Sproto.cs_get_other_actor_pet_request");
    function _decode_cs_get_other_actor_pet_request(d) {
        var o = new cs_get_other_actor_pet_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                case 1:
                    o.petid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_other_actor_pet_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        if (self.petid != undefined) {
            se.wi(self.petid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_other_actor_pet_request"] = { en: _encode_cs_get_other_actor_pet_request, de: _decode_cs_get_other_actor_pet_request };
    var cs_get_other_actor_spellsRes_request = (function () {
        function cs_get_other_actor_spellsRes_request() {
        }
        return cs_get_other_actor_spellsRes_request;
    }());
    Sproto.cs_get_other_actor_spellsRes_request = cs_get_other_actor_spellsRes_request;
    __reflect(cs_get_other_actor_spellsRes_request.prototype, "Sproto.cs_get_other_actor_spellsRes_request");
    function _decode_cs_get_other_actor_spellsRes_request(d) {
        var o = new cs_get_other_actor_spellsRes_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                case 1:
                    o.pos = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_other_actor_spellsRes_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        if (self.pos != undefined) {
            se.wi(self.pos, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_other_actor_spellsRes_request"] = { en: _encode_cs_get_other_actor_spellsRes_request, de: _decode_cs_get_other_actor_spellsRes_request };
    var cs_get_other_actor_xianlv_request = (function () {
        function cs_get_other_actor_xianlv_request() {
        }
        return cs_get_other_actor_xianlv_request;
    }());
    Sproto.cs_get_other_actor_xianlv_request = cs_get_other_actor_xianlv_request;
    __reflect(cs_get_other_actor_xianlv_request.prototype, "Sproto.cs_get_other_actor_xianlv_request");
    function _decode_cs_get_other_actor_xianlv_request(d) {
        var o = new cs_get_other_actor_xianlv_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_other_actor_xianlv_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_other_actor_xianlv_request"] = { en: _encode_cs_get_other_actor_xianlv_request, de: _decode_cs_get_other_actor_xianlv_request };
    var cs_get_server_time_request = (function () {
        function cs_get_server_time_request() {
        }
        return cs_get_server_time_request;
    }());
    Sproto.cs_get_server_time_request = cs_get_server_time_request;
    __reflect(cs_get_server_time_request.prototype, "Sproto.cs_get_server_time_request");
    function _decode_cs_get_server_time_request(d) {
        var o = new cs_get_server_time_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_get_server_time_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_get_server_time_request"] = { en: _encode_cs_get_server_time_request, de: _decode_cs_get_server_time_request };
    var cs_rank_worship_request = (function () {
        function cs_rank_worship_request() {
        }
        return cs_rank_worship_request;
    }());
    Sproto.cs_rank_worship_request = cs_rank_worship_request;
    __reflect(cs_rank_worship_request.prototype, "Sproto.cs_rank_worship_request");
    function _decode_cs_rank_worship_request(d) {
        var o = new cs_rank_worship_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_rank_worship_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_rank_worship_request"] = { en: _encode_cs_rank_worship_request, de: _decode_cs_rank_worship_request };
    var cs_send_client_point_request = (function () {
        function cs_send_client_point_request() {
        }
        return cs_send_client_point_request;
    }());
    Sproto.cs_send_client_point_request = cs_send_client_point_request;
    __reflect(cs_send_client_point_request.prototype, "Sproto.cs_send_client_point_request");
    function _decode_cs_send_client_point_request(d) {
        var o = new cs_send_client_point_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.point = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_send_client_point_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.point != undefined) {
            se.wi(self.point, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_send_client_point_request"] = { en: _encode_cs_send_client_point_request, de: _decode_cs_send_client_point_request };
    var cs_send_heart_beat_request = (function () {
        function cs_send_heart_beat_request() {
        }
        return cs_send_heart_beat_request;
    }());
    Sproto.cs_send_heart_beat_request = cs_send_heart_beat_request;
    __reflect(cs_send_heart_beat_request.prototype, "Sproto.cs_send_heart_beat_request");
    function _decode_cs_send_heart_beat_request(d) {
        var o = new cs_send_heart_beat_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_send_heart_beat_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_send_heart_beat_request"] = { en: _encode_cs_send_heart_beat_request, de: _decode_cs_send_heart_beat_request };
    var cs_send_kefu_msg_request = (function () {
        function cs_send_kefu_msg_request() {
        }
        return cs_send_kefu_msg_request;
    }());
    Sproto.cs_send_kefu_msg_request = cs_send_kefu_msg_request;
    __reflect(cs_send_kefu_msg_request.prototype, "Sproto.cs_send_kefu_msg_request");
    function _decode_cs_send_kefu_msg_request(d) {
        var o = new cs_send_kefu_msg_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.msg = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_send_kefu_msg_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.msg != undefined) {
            se.ws(self.msg, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_send_kefu_msg_request"] = { en: _encode_cs_send_kefu_msg_request, de: _decode_cs_send_kefu_msg_request };
    var cs_sene_gm_command_request = (function () {
        function cs_sene_gm_command_request() {
        }
        return cs_sene_gm_command_request;
    }());
    Sproto.cs_sene_gm_command_request = cs_sene_gm_command_request;
    __reflect(cs_sene_gm_command_request.prototype, "Sproto.cs_sene_gm_command_request");
    function _decode_cs_sene_gm_command_request(d) {
        var o = new cs_sene_gm_command_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.cmd = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_sene_gm_command_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.cmd != undefined) {
            se.ws(self.cmd, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_sene_gm_command_request"] = { en: _encode_cs_sene_gm_command_request, de: _decode_cs_sene_gm_command_request };
    var cs_set_clientvalue_request = (function () {
        function cs_set_clientvalue_request() {
        }
        return cs_set_clientvalue_request;
    }());
    Sproto.cs_set_clientvalue_request = cs_set_clientvalue_request;
    __reflect(cs_set_clientvalue_request.prototype, "Sproto.cs_set_clientvalue_request");
    function _decode_cs_set_clientvalue_request(d) {
        var o = new cs_set_clientvalue_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.value = d.ri();
                    break;
                case 1:
                    o.list = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_set_clientvalue_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.value != undefined) {
            se.wi(self.value, 0);
        }
        if (self.list != undefined) {
            se.wia(self.list, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_set_clientvalue_request"] = { en: _encode_cs_set_clientvalue_request, de: _decode_cs_set_clientvalue_request };
    var cs_show_rank_player_request = (function () {
        function cs_show_rank_player_request() {
        }
        return cs_show_rank_player_request;
    }());
    Sproto.cs_show_rank_player_request = cs_show_rank_player_request;
    __reflect(cs_show_rank_player_request.prototype, "Sproto.cs_show_rank_player_request");
    function _decode_cs_show_rank_player_request(d) {
        var o = new cs_show_rank_player_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.otherid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_show_rank_player_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.otherid != undefined) {
            se.wi(self.otherid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_show_rank_player_request"] = { en: _encode_cs_show_rank_player_request, de: _decode_cs_show_rank_player_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=default_c2s.js.map