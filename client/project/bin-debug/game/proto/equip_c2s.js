// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_equip_forge_request = (function () {
        function cs_equip_forge_request() {
        }
        return cs_equip_forge_request;
    }());
    Sproto.cs_equip_forge_request = cs_equip_forge_request;
    __reflect(cs_equip_forge_request.prototype, "Sproto.cs_equip_forge_request");
    function _decode_cs_equip_forge_request(d) {
        var o = new cs_equip_forge_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.forgeType = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_forge_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.forgeType != undefined) {
            se.wi(self.forgeType, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_forge_request"] = { en: _encode_cs_equip_forge_request, de: _decode_cs_equip_forge_request };
    var cs_equip_red_generate_request = (function () {
        function cs_equip_red_generate_request() {
        }
        return cs_equip_red_generate_request;
    }());
    Sproto.cs_equip_red_generate_request = cs_equip_red_generate_request;
    __reflect(cs_equip_red_generate_request.prototype, "Sproto.cs_equip_red_generate_request");
    function _decode_cs_equip_red_generate_request(d) {
        var o = new cs_equip_red_generate_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.slot = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_red_generate_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.slot != undefined) {
            se.wi(self.slot, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_red_generate_request"] = { en: _encode_cs_equip_red_generate_request, de: _decode_cs_equip_red_generate_request };
    var cs_equip_red_inject_request = (function () {
        function cs_equip_red_inject_request() {
        }
        return cs_equip_red_inject_request;
    }());
    Sproto.cs_equip_red_inject_request = cs_equip_red_inject_request;
    __reflect(cs_equip_red_inject_request.prototype, "Sproto.cs_equip_red_inject_request");
    function _decode_cs_equip_red_inject_request(d) {
        var o = new cs_equip_red_inject_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.slot = d.ri();
                    break;
                case 1:
                    o.mode = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_red_inject_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.slot != undefined) {
            se.wi(self.slot, 0);
        }
        if (self.mode != undefined) {
            se.wi(self.mode, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_red_inject_request"] = { en: _encode_cs_equip_red_inject_request, de: _decode_cs_equip_red_inject_request };
    var cs_equip_red_inject_response = (function () {
        function cs_equip_red_inject_response() {
        }
        return cs_equip_red_inject_response;
    }());
    Sproto.cs_equip_red_inject_response = cs_equip_red_inject_response;
    __reflect(cs_equip_red_inject_response.prototype, "Sproto.cs_equip_red_inject_response");
    function _decode_cs_equip_red_inject_response(d) {
        var o = new cs_equip_red_inject_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_red_inject_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_red_inject_response"] = { en: _encode_cs_equip_red_inject_response, de: _decode_cs_equip_red_inject_response };
    var cs_equip_red_upgrade_request = (function () {
        function cs_equip_red_upgrade_request() {
        }
        return cs_equip_red_upgrade_request;
    }());
    Sproto.cs_equip_red_upgrade_request = cs_equip_red_upgrade_request;
    __reflect(cs_equip_red_upgrade_request.prototype, "Sproto.cs_equip_red_upgrade_request");
    function _decode_cs_equip_red_upgrade_request(d) {
        var o = new cs_equip_red_upgrade_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.slot = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_red_upgrade_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.slot != undefined) {
            se.wi(self.slot, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_red_upgrade_request"] = { en: _encode_cs_equip_red_upgrade_request, de: _decode_cs_equip_red_upgrade_request };
    var cs_equip_upgrade_request = (function () {
        function cs_equip_upgrade_request() {
        }
        return cs_equip_upgrade_request;
    }());
    Sproto.cs_equip_upgrade_request = cs_equip_upgrade_request;
    __reflect(cs_equip_upgrade_request.prototype, "Sproto.cs_equip_upgrade_request");
    function _decode_cs_equip_upgrade_request(d) {
        var o = new cs_equip_upgrade_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.pos = d.ri();
                    break;
                case 1:
                    o.isgodequip = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_upgrade_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.pos != undefined) {
            se.wi(self.pos, 0);
        }
        if (self.isgodequip != undefined) {
            se.wb(self.isgodequip, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_upgrade_request"] = { en: _encode_cs_equip_upgrade_request, de: _decode_cs_equip_upgrade_request };
    var cs_equip_wear_request = (function () {
        function cs_equip_wear_request() {
        }
        return cs_equip_wear_request;
    }());
    Sproto.cs_equip_wear_request = cs_equip_wear_request;
    __reflect(cs_equip_wear_request.prototype, "Sproto.cs_equip_wear_request");
    function _decode_cs_equip_wear_request(d) {
        var o = new cs_equip_wear_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.itemHandle = d.ri();
                    break;
                case 1:
                    o.pos = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_equip_wear_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.itemHandle != undefined) {
            se.wi(self.itemHandle, 0);
        }
        if (self.pos != undefined) {
            se.wi(self.pos, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_equip_wear_request"] = { en: _encode_cs_equip_wear_request, de: _decode_cs_equip_wear_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=equip_c2s.js.map