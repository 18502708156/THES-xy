// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var sc_equip_forge_request = (function () {
        function sc_equip_forge_request() {
        }
        return sc_equip_forge_request;
    }());
    Sproto.sc_equip_forge_request = sc_equip_forge_request;
    __reflect(sc_equip_forge_request.prototype, "Sproto.sc_equip_forge_request");
    function _decode_sc_equip_forge_request(d) {
        var o = new sc_equip_forge_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.forgeType = d.ri();
                    break;
                case 1:
                    o.forgeLevel = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_equip_forge_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.forgeType != undefined) {
            se.wi(self.forgeType, 0);
        }
        if (self.forgeLevel != undefined) {
            se.wia(self.forgeLevel, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_equip_forge_request"] = { en: _encode_sc_equip_forge_request, de: _decode_sc_equip_forge_request };
    var sc_equip_update_data_request = (function () {
        function sc_equip_update_data_request() {
        }
        return sc_equip_update_data_request;
    }());
    Sproto.sc_equip_update_data_request = sc_equip_update_data_request;
    __reflect(sc_equip_update_data_request.prototype, "Sproto.sc_equip_update_data_request");
    function _decode_sc_equip_update_data_request(d) {
        var o = new sc_equip_update_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.roleID = d.ri();
                    break;
                case 1:
                    o.equipPos = d.ri();
                    break;
                case 2:
                    o.data = d.ro("item_data");
                    break;
                case 3:
                    o.reddata = d.ro("equip_red_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_equip_update_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.roleID != undefined) {
            se.wi(self.roleID, 0);
        }
        if (self.equipPos != undefined) {
            se.wi(self.equipPos, 1);
        }
        if (self.data != undefined) {
            se.wo("item_data", self.data, 2);
        }
        if (self.reddata != undefined) {
            se.wo("equip_red_data", self.reddata, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_equip_update_data_request"] = { en: _encode_sc_equip_update_data_request, de: _decode_sc_equip_update_data_request };
    var sc_equip_update_suitlv_request = (function () {
        function sc_equip_update_suitlv_request() {
        }
        return sc_equip_update_suitlv_request;
    }());
    Sproto.sc_equip_update_suitlv_request = sc_equip_update_suitlv_request;
    __reflect(sc_equip_update_suitlv_request.prototype, "Sproto.sc_equip_update_suitlv_request");
    function _decode_sc_equip_update_suitlv_request(d) {
        var o = new sc_equip_update_suitlv_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.suitlv = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_equip_update_suitlv_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.suitlv != undefined) {
            se.wi(self.suitlv, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_equip_update_suitlv_request"] = { en: _encode_sc_equip_update_suitlv_request, de: _decode_sc_equip_update_suitlv_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=equip_s2c.js.map