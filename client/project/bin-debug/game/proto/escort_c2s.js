// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_escort_avenge_request = (function () {
        function cs_escort_avenge_request() {
        }
        return cs_escort_avenge_request;
    }());
    Sproto.cs_escort_avenge_request = cs_escort_avenge_request;
    __reflect(cs_escort_avenge_request.prototype, "Sproto.cs_escort_avenge_request");
    function _decode_cs_escort_avenge_request(d) {
        var o = new cs_escort_avenge_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.recordId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_avenge_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.recordId != undefined) {
            se.wi(self.recordId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_avenge_request"] = { en: _encode_cs_escort_avenge_request, de: _decode_cs_escort_avenge_request };
    var cs_escort_catch_info_request = (function () {
        function cs_escort_catch_info_request() {
        }
        return cs_escort_catch_info_request;
    }());
    Sproto.cs_escort_catch_info_request = cs_escort_catch_info_request;
    __reflect(cs_escort_catch_info_request.prototype, "Sproto.cs_escort_catch_info_request");
    function _decode_cs_escort_catch_info_request(d) {
        var o = new cs_escort_catch_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_catch_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.playerId != undefined) {
            se.wi(self.playerId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_catch_info_request"] = { en: _encode_cs_escort_catch_info_request, de: _decode_cs_escort_catch_info_request };
    var cs_escort_catch_info_response = (function () {
        function cs_escort_catch_info_response() {
        }
        return cs_escort_catch_info_response;
    }());
    Sproto.cs_escort_catch_info_response = cs_escort_catch_info_response;
    __reflect(cs_escort_catch_info_response.prototype, "Sproto.cs_escort_catch_info_response");
    function _decode_cs_escort_catch_info_response(d) {
        var o = new cs_escort_catch_info_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.escortInfo = d.ro("escort_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_catch_info_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.escortInfo != undefined) {
            se.wo("escort_info", self.escortInfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_catch_info_response"] = { en: _encode_cs_escort_catch_info_response, de: _decode_cs_escort_catch_info_response };
    var cs_escort_enter_request = (function () {
        function cs_escort_enter_request() {
        }
        return cs_escort_enter_request;
    }());
    Sproto.cs_escort_enter_request = cs_escort_enter_request;
    __reflect(cs_escort_enter_request.prototype, "Sproto.cs_escort_enter_request");
    function _decode_cs_escort_enter_request(d) {
        var o = new cs_escort_enter_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_enter_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_enter_request"] = { en: _encode_cs_escort_enter_request, de: _decode_cs_escort_enter_request };
    var cs_escort_get_reward_request = (function () {
        function cs_escort_get_reward_request() {
        }
        return cs_escort_get_reward_request;
    }());
    Sproto.cs_escort_get_reward_request = cs_escort_get_reward_request;
    __reflect(cs_escort_get_reward_request.prototype, "Sproto.cs_escort_get_reward_request");
    function _decode_cs_escort_get_reward_request(d) {
        var o = new cs_escort_get_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_get_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_get_reward_request"] = { en: _encode_cs_escort_get_reward_request, de: _decode_cs_escort_get_reward_request };
    var cs_escort_perform_request = (function () {
        function cs_escort_perform_request() {
        }
        return cs_escort_perform_request;
    }());
    Sproto.cs_escort_perform_request = cs_escort_perform_request;
    __reflect(cs_escort_perform_request.prototype, "Sproto.cs_escort_perform_request");
    function _decode_cs_escort_perform_request(d) {
        var o = new cs_escort_perform_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_perform_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_perform_request"] = { en: _encode_cs_escort_perform_request, de: _decode_cs_escort_perform_request };
    var cs_escort_quick_complete_request = (function () {
        function cs_escort_quick_complete_request() {
        }
        return cs_escort_quick_complete_request;
    }());
    Sproto.cs_escort_quick_complete_request = cs_escort_quick_complete_request;
    __reflect(cs_escort_quick_complete_request.prototype, "Sproto.cs_escort_quick_complete_request");
    function _decode_cs_escort_quick_complete_request(d) {
        var o = new cs_escort_quick_complete_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_quick_complete_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_quick_complete_request"] = { en: _encode_cs_escort_quick_complete_request, de: _decode_cs_escort_quick_complete_request };
    var cs_escort_refresh_quality_request = (function () {
        function cs_escort_refresh_quality_request() {
        }
        return cs_escort_refresh_quality_request;
    }());
    Sproto.cs_escort_refresh_quality_request = cs_escort_refresh_quality_request;
    __reflect(cs_escort_refresh_quality_request.prototype, "Sproto.cs_escort_refresh_quality_request");
    function _decode_cs_escort_refresh_quality_request(d) {
        var o = new cs_escort_refresh_quality_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_refresh_quality_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_refresh_quality_request"] = { en: _encode_cs_escort_refresh_quality_request, de: _decode_cs_escort_refresh_quality_request };
    var cs_escort_rob_list_request = (function () {
        function cs_escort_rob_list_request() {
        }
        return cs_escort_rob_list_request;
    }());
    Sproto.cs_escort_rob_list_request = cs_escort_rob_list_request;
    __reflect(cs_escort_rob_list_request.prototype, "Sproto.cs_escort_rob_list_request");
    function _decode_cs_escort_rob_list_request(d) {
        var o = new cs_escort_rob_list_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_rob_list_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_rob_list_request"] = { en: _encode_cs_escort_rob_list_request, de: _decode_cs_escort_rob_list_request };
    var cs_escort_rob_list_response = (function () {
        function cs_escort_rob_list_response() {
        }
        return cs_escort_rob_list_response;
    }());
    Sproto.cs_escort_rob_list_response = cs_escort_rob_list_response;
    __reflect(cs_escort_rob_list_response.prototype, "Sproto.cs_escort_rob_list_response");
    function _decode_cs_escort_rob_list_response(d) {
        var o = new cs_escort_rob_list_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.escortList = d.roa("escort_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_rob_list_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.escortList != undefined) {
            se.woa("escort_info", self.escortList, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_rob_list_response"] = { en: _encode_cs_escort_rob_list_response, de: _decode_cs_escort_rob_list_response };
    var cs_escort_rob_perform_request = (function () {
        function cs_escort_rob_perform_request() {
        }
        return cs_escort_rob_perform_request;
    }());
    Sproto.cs_escort_rob_perform_request = cs_escort_rob_perform_request;
    __reflect(cs_escort_rob_perform_request.prototype, "Sproto.cs_escort_rob_perform_request");
    function _decode_cs_escort_rob_perform_request(d) {
        var o = new cs_escort_rob_perform_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_escort_rob_perform_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.playerId != undefined) {
            se.wi(self.playerId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_escort_rob_perform_request"] = { en: _encode_cs_escort_rob_perform_request, de: _decode_cs_escort_rob_perform_request };
    var escort_info = (function () {
        function escort_info() {
        }
        return escort_info;
    }());
    Sproto.escort_info = escort_info;
    __reflect(escort_info.prototype, "Sproto.escort_info");
    function _decode_escort_info(d) {
        var o = new escort_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.quality = d.ri();
                    break;
                case 1:
                    o.power = d.ri();
                    break;
                case 2:
                    o.playerName = d.rs();
                    break;
                case 3:
                    o.playerid = d.ri();
                    break;
                case 4:
                    o.catchCount = d.ri();
                    break;
                case 5:
                    o.finishTime = d.ri();
                    break;
                case 6:
                    o.guildName = d.rs();
                    break;
                case 7:
                    o.robMark = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_escort_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 8);
        if (self.quality != undefined) {
            se.wi(self.quality, 0);
        }
        if (self.power != undefined) {
            se.wi(self.power, 1);
        }
        if (self.playerName != undefined) {
            se.ws(self.playerName, 2);
        }
        if (self.playerid != undefined) {
            se.wi(self.playerid, 3);
        }
        if (self.catchCount != undefined) {
            se.wi(self.catchCount, 4);
        }
        if (self.finishTime != undefined) {
            se.wi(self.finishTime, 5);
        }
        if (self.guildName != undefined) {
            se.ws(self.guildName, 6);
        }
        if (self.robMark != undefined) {
            se.wb(self.robMark, 7);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["escort_info"] = { en: _encode_escort_info, de: _decode_escort_info };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=escort_c2s.js.map