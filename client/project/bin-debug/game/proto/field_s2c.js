// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var field_boss_info = (function () {
        function field_boss_info() {
        }
        return field_boss_info;
    }());
    Sproto.field_boss_info = field_boss_info;
    __reflect(field_boss_info.prototype, "Sproto.field_boss_info");
    function _decode_field_boss_info(d) {
        var o = new field_boss_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.hp = d.ri();
                    break;
                case 2:
                    o.status = d.ri();
                    break;
                case 3:
                    o.ownerId = d.ri();
                    break;
                case 4:
                    o.ownerName = d.rs();
                    break;
                case 5:
                    o.ownerSex = d.ri();
                    break;
                case 6:
                    o.ownerJob = d.ri();
                    break;
                case 7:
                    o.time = d.ri();
                    break;
                case 8:
                    o.ischallenge = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_field_boss_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 9);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.hp != undefined) {
            se.wi(self.hp, 1);
        }
        if (self.status != undefined) {
            se.wi(self.status, 2);
        }
        if (self.ownerId != undefined) {
            se.wi(self.ownerId, 3);
        }
        if (self.ownerName != undefined) {
            se.ws(self.ownerName, 4);
        }
        if (self.ownerSex != undefined) {
            se.wi(self.ownerSex, 5);
        }
        if (self.ownerJob != undefined) {
            se.wi(self.ownerJob, 6);
        }
        if (self.time != undefined) {
            se.wi(self.time, 7);
        }
        if (self.ischallenge != undefined) {
            se.wb(self.ischallenge, 8);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["field_boss_info"] = { en: _encode_field_boss_info, de: _decode_field_boss_info };
    var sc_field_boss_base_list_request = (function () {
        function sc_field_boss_base_list_request() {
        }
        return sc_field_boss_base_list_request;
    }());
    Sproto.sc_field_boss_base_list_request = sc_field_boss_base_list_request;
    __reflect(sc_field_boss_base_list_request.prototype, "Sproto.sc_field_boss_base_list_request");
    function _decode_sc_field_boss_base_list_request(d) {
        var o = new sc_field_boss_base_list_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.bossInfos = d.roa("field_boss_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_field_boss_base_list_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.bossInfos != undefined) {
            se.woa("field_boss_info", self.bossInfos, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_field_boss_base_list_request"] = { en: _encode_sc_field_boss_base_list_request, de: _decode_sc_field_boss_base_list_request };
    var sc_field_boss_update_one_request = (function () {
        function sc_field_boss_update_one_request() {
        }
        return sc_field_boss_update_one_request;
    }());
    Sproto.sc_field_boss_update_one_request = sc_field_boss_update_one_request;
    __reflect(sc_field_boss_update_one_request.prototype, "Sproto.sc_field_boss_update_one_request");
    function _decode_sc_field_boss_update_one_request(d) {
        var o = new sc_field_boss_update_one_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.bossInfo = d.ro("field_boss_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_field_boss_update_one_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.bossInfo != undefined) {
            se.wo("field_boss_info", self.bossInfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_field_boss_update_one_request"] = { en: _encode_sc_field_boss_update_one_request, de: _decode_sc_field_boss_update_one_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=field_s2c.js.map