// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_formation_activation_request = (function () {
        function cs_formation_activation_request() {
        }
        return cs_formation_activation_request;
    }());
    Sproto.cs_formation_activation_request = cs_formation_activation_request;
    __reflect(cs_formation_activation_request.prototype, "Sproto.cs_formation_activation_request");
    function _decode_cs_formation_activation_request(d) {
        var o = new cs_formation_activation_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_activation_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_activation_request"] = { en: _encode_cs_formation_activation_request, de: _decode_cs_formation_activation_request };
    var cs_formation_activation_response = (function () {
        function cs_formation_activation_response() {
        }
        return cs_formation_activation_response;
    }());
    Sproto.cs_formation_activation_response = cs_formation_activation_response;
    __reflect(cs_formation_activation_response.prototype, "Sproto.cs_formation_activation_response");
    function _decode_cs_formation_activation_response(d) {
        var o = new cs_formation_activation_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.skillNo = d.ri();
                    break;
                case 2:
                    o.lv = d.ri();
                    break;
                case 3:
                    o.upNum = d.ri();
                    break;
                case 4:
                    o.soulLv = d.ri();
                    break;
                case 5:
                    o.soulUpNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_activation_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 6);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.skillNo != undefined) {
            se.wi(self.skillNo, 1);
        }
        if (self.lv != undefined) {
            se.wi(self.lv, 2);
        }
        if (self.upNum != undefined) {
            se.wi(self.upNum, 3);
        }
        if (self.soulLv != undefined) {
            se.wi(self.soulLv, 4);
        }
        if (self.soulUpNum != undefined) {
            se.wi(self.soulUpNum, 5);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_activation_response"] = { en: _encode_cs_formation_activation_response, de: _decode_cs_formation_activation_response };
    var cs_formation_add_exp_request = (function () {
        function cs_formation_add_exp_request() {
        }
        return cs_formation_add_exp_request;
    }());
    Sproto.cs_formation_add_exp_request = cs_formation_add_exp_request;
    __reflect(cs_formation_add_exp_request.prototype, "Sproto.cs_formation_add_exp_request");
    function _decode_cs_formation_add_exp_request(d) {
        var o = new cs_formation_add_exp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.autoBuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_add_exp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.autoBuy != undefined) {
            se.wi(self.autoBuy, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_add_exp_request"] = { en: _encode_cs_formation_add_exp_request, de: _decode_cs_formation_add_exp_request };
    var cs_formation_add_exp_response = (function () {
        function cs_formation_add_exp_response() {
        }
        return cs_formation_add_exp_response;
    }());
    Sproto.cs_formation_add_exp_response = cs_formation_add_exp_response;
    __reflect(cs_formation_add_exp_response.prototype, "Sproto.cs_formation_add_exp_response");
    function _decode_cs_formation_add_exp_response(d) {
        var o = new cs_formation_add_exp_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.no = d.ri();
                    break;
                case 2:
                    o.lv = d.ri();
                    break;
                case 3:
                    o.upNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_add_exp_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.no != undefined) {
            se.wi(self.no, 1);
        }
        if (self.lv != undefined) {
            se.wi(self.lv, 2);
        }
        if (self.upNum != undefined) {
            se.wi(self.upNum, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_add_exp_response"] = { en: _encode_cs_formation_add_exp_response, de: _decode_cs_formation_add_exp_response };
    var cs_formation_drug_request = (function () {
        function cs_formation_drug_request() {
        }
        return cs_formation_drug_request;
    }());
    Sproto.cs_formation_drug_request = cs_formation_drug_request;
    __reflect(cs_formation_drug_request.prototype, "Sproto.cs_formation_drug_request");
    function _decode_cs_formation_drug_request(d) {
        var o = new cs_formation_drug_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.useNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_drug_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.useNum != undefined) {
            se.wi(self.useNum, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_drug_request"] = { en: _encode_cs_formation_drug_request, de: _decode_cs_formation_drug_request };
    var cs_formation_drug_response = (function () {
        function cs_formation_drug_response() {
        }
        return cs_formation_drug_response;
    }());
    Sproto.cs_formation_drug_response = cs_formation_drug_response;
    __reflect(cs_formation_drug_response.prototype, "Sproto.cs_formation_drug_response");
    function _decode_cs_formation_drug_response(d) {
        var o = new cs_formation_drug_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.drugNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_drug_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.drugNum != undefined) {
            se.wi(self.drugNum, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_drug_response"] = { en: _encode_cs_formation_drug_response, de: _decode_cs_formation_drug_response };
    var cs_formation_skill_up_request = (function () {
        function cs_formation_skill_up_request() {
        }
        return cs_formation_skill_up_request;
    }());
    Sproto.cs_formation_skill_up_request = cs_formation_skill_up_request;
    __reflect(cs_formation_skill_up_request.prototype, "Sproto.cs_formation_skill_up_request");
    function _decode_cs_formation_skill_up_request(d) {
        var o = new cs_formation_skill_up_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_skill_up_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_skill_up_request"] = { en: _encode_cs_formation_skill_up_request, de: _decode_cs_formation_skill_up_request };
    var cs_formation_skill_up_response = (function () {
        function cs_formation_skill_up_response() {
        }
        return cs_formation_skill_up_response;
    }());
    Sproto.cs_formation_skill_up_response = cs_formation_skill_up_response;
    __reflect(cs_formation_skill_up_response.prototype, "Sproto.cs_formation_skill_up_response");
    function _decode_cs_formation_skill_up_response(d) {
        var o = new cs_formation_skill_up_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.skillNo = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_skill_up_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.skillNo != undefined) {
            se.wi(self.skillNo, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_skill_up_response"] = { en: _encode_cs_formation_skill_up_response, de: _decode_cs_formation_skill_up_response };
    var cs_formation_soul_add_exp_request = (function () {
        function cs_formation_soul_add_exp_request() {
        }
        return cs_formation_soul_add_exp_request;
    }());
    Sproto.cs_formation_soul_add_exp_request = cs_formation_soul_add_exp_request;
    __reflect(cs_formation_soul_add_exp_request.prototype, "Sproto.cs_formation_soul_add_exp_request");
    function _decode_cs_formation_soul_add_exp_request(d) {
        var o = new cs_formation_soul_add_exp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.autoBuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_soul_add_exp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.autoBuy != undefined) {
            se.wi(self.autoBuy, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_soul_add_exp_request"] = { en: _encode_cs_formation_soul_add_exp_request, de: _decode_cs_formation_soul_add_exp_request };
    var cs_formation_soul_add_exp_response = (function () {
        function cs_formation_soul_add_exp_response() {
        }
        return cs_formation_soul_add_exp_response;
    }());
    Sproto.cs_formation_soul_add_exp_response = cs_formation_soul_add_exp_response;
    __reflect(cs_formation_soul_add_exp_response.prototype, "Sproto.cs_formation_soul_add_exp_response");
    function _decode_cs_formation_soul_add_exp_response(d) {
        var o = new cs_formation_soul_add_exp_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.no = d.ri();
                    break;
                case 2:
                    o.soulLv = d.ri();
                    break;
                case 3:
                    o.soulUpNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_soul_add_exp_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.no != undefined) {
            se.wi(self.no, 1);
        }
        if (self.soulLv != undefined) {
            se.wi(self.soulLv, 2);
        }
        if (self.soulUpNum != undefined) {
            se.wi(self.soulUpNum, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_soul_add_exp_response"] = { en: _encode_cs_formation_soul_add_exp_response, de: _decode_cs_formation_soul_add_exp_response };
    var cs_formation_use_request = (function () {
        function cs_formation_use_request() {
        }
        return cs_formation_use_request;
    }());
    Sproto.cs_formation_use_request = cs_formation_use_request;
    __reflect(cs_formation_use_request.prototype, "Sproto.cs_formation_use_request");
    function _decode_cs_formation_use_request(d) {
        var o = new cs_formation_use_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_use_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_use_request"] = { en: _encode_cs_formation_use_request, de: _decode_cs_formation_use_request };
    var cs_formation_use_response = (function () {
        function cs_formation_use_response() {
        }
        return cs_formation_use_response;
    }());
    Sproto.cs_formation_use_response = cs_formation_use_response;
    __reflect(cs_formation_use_response.prototype, "Sproto.cs_formation_use_response");
    function _decode_cs_formation_use_response(d) {
        var o = new cs_formation_use_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.use = d.ri();
                    break;
                case 2:
                    o.disuse = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_formation_use_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.use != undefined) {
            se.wi(self.use, 1);
        }
        if (self.disuse != undefined) {
            se.wi(self.disuse, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_formation_use_response"] = { en: _encode_cs_formation_use_response, de: _decode_cs_formation_use_response };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=formation_c2s.js.map