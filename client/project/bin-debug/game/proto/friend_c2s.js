// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_friend_add_blacklist_request = (function () {
        function cs_friend_add_blacklist_request() {
        }
        return cs_friend_add_blacklist_request;
    }());
    Sproto.cs_friend_add_blacklist_request = cs_friend_add_blacklist_request;
    __reflect(cs_friend_add_blacklist_request.prototype, "Sproto.cs_friend_add_blacklist_request");
    function _decode_cs_friend_add_blacklist_request(d) {
        var o = new cs_friend_add_blacklist_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_add_blacklist_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_add_blacklist_request"] = { en: _encode_cs_friend_add_blacklist_request, de: _decode_cs_friend_add_blacklist_request };
    var cs_friend_add_follow_request = (function () {
        function cs_friend_add_follow_request() {
        }
        return cs_friend_add_follow_request;
    }());
    Sproto.cs_friend_add_follow_request = cs_friend_add_follow_request;
    __reflect(cs_friend_add_follow_request.prototype, "Sproto.cs_friend_add_follow_request");
    function _decode_cs_friend_add_follow_request(d) {
        var o = new cs_friend_add_follow_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_add_follow_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_add_follow_request"] = { en: _encode_cs_friend_add_follow_request, de: _decode_cs_friend_add_follow_request };
    var cs_friend_add_follow_response = (function () {
        function cs_friend_add_follow_response() {
        }
        return cs_friend_add_follow_response;
    }());
    Sproto.cs_friend_add_follow_response = cs_friend_add_follow_response;
    __reflect(cs_friend_add_follow_response.prototype, "Sproto.cs_friend_add_follow_response");
    function _decode_cs_friend_add_follow_response(d) {
        var o = new cs_friend_add_follow_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_add_follow_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_add_follow_response"] = { en: _encode_cs_friend_add_follow_response, de: _decode_cs_friend_add_follow_response };
    var cs_friend_del_blacklist_request = (function () {
        function cs_friend_del_blacklist_request() {
        }
        return cs_friend_del_blacklist_request;
    }());
    Sproto.cs_friend_del_blacklist_request = cs_friend_del_blacklist_request;
    __reflect(cs_friend_del_blacklist_request.prototype, "Sproto.cs_friend_del_blacklist_request");
    function _decode_cs_friend_del_blacklist_request(d) {
        var o = new cs_friend_del_blacklist_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_del_blacklist_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_del_blacklist_request"] = { en: _encode_cs_friend_del_blacklist_request, de: _decode_cs_friend_del_blacklist_request };
    var cs_friend_del_follow_request = (function () {
        function cs_friend_del_follow_request() {
        }
        return cs_friend_del_follow_request;
    }());
    Sproto.cs_friend_del_follow_request = cs_friend_del_follow_request;
    __reflect(cs_friend_del_follow_request.prototype, "Sproto.cs_friend_del_follow_request");
    function _decode_cs_friend_del_follow_request(d) {
        var o = new cs_friend_del_follow_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_del_follow_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_del_follow_request"] = { en: _encode_cs_friend_del_follow_request, de: _decode_cs_friend_del_follow_request };
    var cs_friend_follow_nominate_request = (function () {
        function cs_friend_follow_nominate_request() {
        }
        return cs_friend_follow_nominate_request;
    }());
    Sproto.cs_friend_follow_nominate_request = cs_friend_follow_nominate_request;
    __reflect(cs_friend_follow_nominate_request.prototype, "Sproto.cs_friend_follow_nominate_request");
    function _decode_cs_friend_follow_nominate_request(d) {
        var o = new cs_friend_follow_nominate_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_follow_nominate_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_follow_nominate_request"] = { en: _encode_cs_friend_follow_nominate_request, de: _decode_cs_friend_follow_nominate_request };
    var cs_friend_gift_friendcoin_request = (function () {
        function cs_friend_gift_friendcoin_request() {
        }
        return cs_friend_gift_friendcoin_request;
    }());
    Sproto.cs_friend_gift_friendcoin_request = cs_friend_gift_friendcoin_request;
    __reflect(cs_friend_gift_friendcoin_request.prototype, "Sproto.cs_friend_gift_friendcoin_request");
    function _decode_cs_friend_gift_friendcoin_request(d) {
        var o = new cs_friend_gift_friendcoin_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_gift_friendcoin_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_gift_friendcoin_request"] = { en: _encode_cs_friend_gift_friendcoin_request, de: _decode_cs_friend_gift_friendcoin_request };
    var cs_friend_receive_friendcoin_request = (function () {
        function cs_friend_receive_friendcoin_request() {
        }
        return cs_friend_receive_friendcoin_request;
    }());
    Sproto.cs_friend_receive_friendcoin_request = cs_friend_receive_friendcoin_request;
    __reflect(cs_friend_receive_friendcoin_request.prototype, "Sproto.cs_friend_receive_friendcoin_request");
    function _decode_cs_friend_receive_friendcoin_request(d) {
        var o = new cs_friend_receive_friendcoin_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_friend_receive_friendcoin_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_friend_receive_friendcoin_request"] = { en: _encode_cs_friend_receive_friendcoin_request, de: _decode_cs_friend_receive_friendcoin_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=friend_c2s.js.map