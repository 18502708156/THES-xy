// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var fuben_data = (function () {
        function fuben_data() {
        }
        return fuben_data;
    }());
    Sproto.fuben_data = fuben_data;
    __reflect(fuben_data.prototype, "Sproto.fuben_data");
    function _decode_fuben_data(d) {
        var o = new fuben_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.fubenNo = d.ri();
                    break;
                case 1:
                    o.clearanceNum = d.ri();
                    break;
                case 2:
                    o.todayNum = d.ri();
                    break;
                case 3:
                    o.buyNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_fuben_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.fubenNo != undefined) {
            se.wi(self.fubenNo, 0);
        }
        if (self.clearanceNum != undefined) {
            se.wi(self.clearanceNum, 1);
        }
        if (self.todayNum != undefined) {
            se.wi(self.todayNum, 2);
        }
        if (self.buyNum != undefined) {
            se.wi(self.buyNum, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["fuben_data"] = { en: _encode_fuben_data, de: _decode_fuben_data };
    var sc_fuben_heavenFb_info_request = (function () {
        function sc_fuben_heavenFb_info_request() {
        }
        return sc_fuben_heavenFb_info_request;
    }());
    Sproto.sc_fuben_heavenFb_info_request = sc_fuben_heavenFb_info_request;
    __reflect(sc_fuben_heavenFb_info_request.prototype, "Sproto.sc_fuben_heavenFb_info_request");
    function _decode_sc_fuben_heavenFb_info_request(d) {
        var o = new sc_fuben_heavenFb_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.layer = d.ri();
                    break;
                case 1:
                    o.todayLayer = d.ri();
                    break;
                case 2:
                    o.rewardNo = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_fuben_heavenFb_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.layer != undefined) {
            se.wi(self.layer, 0);
        }
        if (self.todayLayer != undefined) {
            se.wi(self.todayLayer, 1);
        }
        if (self.rewardNo != undefined) {
            se.wia(self.rewardNo, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_fuben_heavenFb_info_request"] = { en: _encode_sc_fuben_heavenFb_info_request, de: _decode_sc_fuben_heavenFb_info_request };
    var sc_fuben_heavenFb_reward_request = (function () {
        function sc_fuben_heavenFb_reward_request() {
        }
        return sc_fuben_heavenFb_reward_request;
    }());
    Sproto.sc_fuben_heavenFb_reward_request = sc_fuben_heavenFb_reward_request;
    __reflect(sc_fuben_heavenFb_reward_request.prototype, "Sproto.sc_fuben_heavenFb_reward_request");
    function _decode_sc_fuben_heavenFb_reward_request(d) {
        var o = new sc_fuben_heavenFb_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rewardNo = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_fuben_heavenFb_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rewardNo != undefined) {
            se.wia(self.rewardNo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_fuben_heavenFb_reward_request"] = { en: _encode_sc_fuben_heavenFb_reward_request, de: _decode_sc_fuben_heavenFb_reward_request };
    var sc_fuben_material_info_request = (function () {
        function sc_fuben_material_info_request() {
        }
        return sc_fuben_material_info_request;
    }());
    Sproto.sc_fuben_material_info_request = sc_fuben_material_info_request;
    __reflect(sc_fuben_material_info_request.prototype, "Sproto.sc_fuben_material_info_request");
    function _decode_sc_fuben_material_info_request(d) {
        var o = new sc_fuben_material_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.fuben_data = d.roa("fuben_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_fuben_material_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.fuben_data != undefined) {
            se.woa("fuben_data", self.fuben_data, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_fuben_material_info_request"] = { en: _encode_sc_fuben_material_info_request, de: _decode_sc_fuben_material_info_request };
    var sc_fuben_treasuremap_info_request = (function () {
        function sc_fuben_treasuremap_info_request() {
        }
        return sc_fuben_treasuremap_info_request;
    }());
    Sproto.sc_fuben_treasuremap_info_request = sc_fuben_treasuremap_info_request;
    __reflect(sc_fuben_treasuremap_info_request.prototype, "Sproto.sc_fuben_treasuremap_info_request");
    function _decode_sc_fuben_treasuremap_info_request(d) {
        var o = new sc_fuben_treasuremap_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.data = d.roa("treasuremapn_data");
                    break;
                case 1:
                    o.starReward = d.roa("star_reward_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_fuben_treasuremap_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.data != undefined) {
            se.woa("treasuremapn_data", self.data, 0);
        }
        if (self.starReward != undefined) {
            se.woa("star_reward_data", self.starReward, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_fuben_treasuremap_info_request"] = { en: _encode_sc_fuben_treasuremap_info_request, de: _decode_sc_fuben_treasuremap_info_request };
    var sc_fuben_treasuremap_star_reward_request = (function () {
        function sc_fuben_treasuremap_star_reward_request() {
        }
        return sc_fuben_treasuremap_star_reward_request;
    }());
    Sproto.sc_fuben_treasuremap_star_reward_request = sc_fuben_treasuremap_star_reward_request;
    __reflect(sc_fuben_treasuremap_star_reward_request.prototype, "Sproto.sc_fuben_treasuremap_star_reward_request");
    function _decode_sc_fuben_treasuremap_star_reward_request(d) {
        var o = new sc_fuben_treasuremap_star_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.starReward = d.roa("star_reward_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_fuben_treasuremap_star_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.starReward != undefined) {
            se.woa("star_reward_data", self.starReward, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_fuben_treasuremap_star_reward_request"] = { en: _encode_sc_fuben_treasuremap_star_reward_request, de: _decode_sc_fuben_treasuremap_star_reward_request };
    var sc_fuben_wildgeeseFb_info_request = (function () {
        function sc_fuben_wildgeeseFb_info_request() {
        }
        return sc_fuben_wildgeeseFb_info_request;
    }());
    Sproto.sc_fuben_wildgeeseFb_info_request = sc_fuben_wildgeeseFb_info_request;
    __reflect(sc_fuben_wildgeeseFb_info_request.prototype, "Sproto.sc_fuben_wildgeeseFb_info_request");
    function _decode_sc_fuben_wildgeeseFb_info_request(d) {
        var o = new sc_fuben_wildgeeseFb_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.hard = d.ri();
                    break;
                case 1:
                    o.layer = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_fuben_wildgeeseFb_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.hard != undefined) {
            se.wi(self.hard, 0);
        }
        if (self.layer != undefined) {
            se.wi(self.layer, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_fuben_wildgeeseFb_info_request"] = { en: _encode_sc_fuben_wildgeeseFb_info_request, de: _decode_sc_fuben_wildgeeseFb_info_request };
    var star_reward_data = (function () {
        function star_reward_data() {
        }
        return star_reward_data;
    }());
    Sproto.star_reward_data = star_reward_data;
    __reflect(star_reward_data.prototype, "Sproto.star_reward_data");
    function _decode_star_reward_data(d) {
        var o = new star_reward_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.reward = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_star_reward_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.reward != undefined) {
            se.wi(self.reward, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["star_reward_data"] = { en: _encode_star_reward_data, de: _decode_star_reward_data };
    var treasuremapn_data = (function () {
        function treasuremapn_data() {
        }
        return treasuremapn_data;
    }());
    Sproto.treasuremapn_data = treasuremapn_data;
    __reflect(treasuremapn_data.prototype, "Sproto.treasuremapn_data");
    function _decode_treasuremapn_data(d) {
        var o = new treasuremapn_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.fubenNo = d.ri();
                    break;
                case 1:
                    o.todayNum = d.ri();
                    break;
                case 2:
                    o.star = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_treasuremapn_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.fubenNo != undefined) {
            se.wi(self.fubenNo, 0);
        }
        if (self.todayNum != undefined) {
            se.wi(self.todayNum, 1);
        }
        if (self.star != undefined) {
            se.wi(self.star, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["treasuremapn_data"] = { en: _encode_treasuremapn_data, de: _decode_treasuremapn_data };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=fuben_s2c.js.map