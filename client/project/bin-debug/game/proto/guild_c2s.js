// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_guild_apply_list_request = (function () {
        function cs_guild_apply_list_request() {
        }
        return cs_guild_apply_list_request;
    }());
    Sproto.cs_guild_apply_list_request = cs_guild_apply_list_request;
    __reflect(cs_guild_apply_list_request.prototype, "Sproto.cs_guild_apply_list_request");
    function _decode_cs_guild_apply_list_request(d) {
        var o = new cs_guild_apply_list_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_apply_list_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_apply_list_request"] = { en: _encode_cs_guild_apply_list_request, de: _decode_cs_guild_apply_list_request };
    var cs_guild_boss_info_request = (function () {
        function cs_guild_boss_info_request() {
        }
        return cs_guild_boss_info_request;
    }());
    Sproto.cs_guild_boss_info_request = cs_guild_boss_info_request;
    __reflect(cs_guild_boss_info_request.prototype, "Sproto.cs_guild_boss_info_request");
    function _decode_cs_guild_boss_info_request(d) {
        var o = new cs_guild_boss_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_boss_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_boss_info_request"] = { en: _encode_cs_guild_boss_info_request, de: _decode_cs_guild_boss_info_request };
    var cs_guild_boss_pk_request = (function () {
        function cs_guild_boss_pk_request() {
        }
        return cs_guild_boss_pk_request;
    }());
    Sproto.cs_guild_boss_pk_request = cs_guild_boss_pk_request;
    __reflect(cs_guild_boss_pk_request.prototype, "Sproto.cs_guild_boss_pk_request");
    function _decode_cs_guild_boss_pk_request(d) {
        var o = new cs_guild_boss_pk_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_boss_pk_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_boss_pk_request"] = { en: _encode_cs_guild_boss_pk_request, de: _decode_cs_guild_boss_pk_request };
    var cs_guild_boss_reward_request = (function () {
        function cs_guild_boss_reward_request() {
        }
        return cs_guild_boss_reward_request;
    }());
    Sproto.cs_guild_boss_reward_request = cs_guild_boss_reward_request;
    __reflect(cs_guild_boss_reward_request.prototype, "Sproto.cs_guild_boss_reward_request");
    function _decode_cs_guild_boss_reward_request(d) {
        var o = new cs_guild_boss_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_boss_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_boss_reward_request"] = { en: _encode_cs_guild_boss_reward_request, de: _decode_cs_guild_boss_reward_request };
    var cs_guild_change_notice_request = (function () {
        function cs_guild_change_notice_request() {
        }
        return cs_guild_change_notice_request;
    }());
    Sproto.cs_guild_change_notice_request = cs_guild_change_notice_request;
    __reflect(cs_guild_change_notice_request.prototype, "Sproto.cs_guild_change_notice_request");
    function _decode_cs_guild_change_notice_request(d) {
        var o = new cs_guild_change_notice_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.text = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_change_notice_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.text != undefined) {
            se.ws(self.text, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_change_notice_request"] = { en: _encode_cs_guild_change_notice_request, de: _decode_cs_guild_change_notice_request };
    var cs_guild_change_office_request = (function () {
        function cs_guild_change_office_request() {
        }
        return cs_guild_change_office_request;
    }());
    Sproto.cs_guild_change_office_request = cs_guild_change_office_request;
    __reflect(cs_guild_change_office_request.prototype, "Sproto.cs_guild_change_office_request");
    function _decode_cs_guild_change_office_request(d) {
        var o = new cs_guild_change_office_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                case 1:
                    o.office = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_change_office_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        if (self.office != undefined) {
            se.wi(self.office, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_change_office_request"] = { en: _encode_cs_guild_change_office_request, de: _decode_cs_guild_change_office_request };
    var cs_guild_create_request = (function () {
        function cs_guild_create_request() {
        }
        return cs_guild_create_request;
    }());
    Sproto.cs_guild_create_request = cs_guild_create_request;
    __reflect(cs_guild_create_request.prototype, "Sproto.cs_guild_create_request");
    function _decode_cs_guild_create_request(d) {
        var o = new cs_guild_create_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_create_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_create_request"] = { en: _encode_cs_guild_create_request, de: _decode_cs_guild_create_request };
    var cs_guild_donate_request = (function () {
        function cs_guild_donate_request() {
        }
        return cs_guild_donate_request;
    }());
    Sproto.cs_guild_donate_request = cs_guild_donate_request;
    __reflect(cs_guild_donate_request.prototype, "Sproto.cs_guild_donate_request");
    function _decode_cs_guild_donate_request(d) {
        var o = new cs_guild_donate_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_donate_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_donate_request"] = { en: _encode_cs_guild_donate_request, de: _decode_cs_guild_donate_request };
    var cs_guild_dungeon_info_request = (function () {
        function cs_guild_dungeon_info_request() {
        }
        return cs_guild_dungeon_info_request;
    }());
    Sproto.cs_guild_dungeon_info_request = cs_guild_dungeon_info_request;
    __reflect(cs_guild_dungeon_info_request.prototype, "Sproto.cs_guild_dungeon_info_request");
    function _decode_cs_guild_dungeon_info_request(d) {
        var o = new cs_guild_dungeon_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_dungeon_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_dungeon_info_request"] = { en: _encode_cs_guild_dungeon_info_request, de: _decode_cs_guild_dungeon_info_request };
    var cs_guild_dungeon_info_response = (function () {
        function cs_guild_dungeon_info_response() {
        }
        return cs_guild_dungeon_info_response;
    }());
    Sproto.cs_guild_dungeon_info_response = cs_guild_dungeon_info_response;
    __reflect(cs_guild_dungeon_info_response.prototype, "Sproto.cs_guild_dungeon_info_response");
    function _decode_cs_guild_dungeon_info_response(d) {
        var o = new cs_guild_dungeon_info_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.profitCount = d.ri();
                    break;
                case 1:
                    o.assistCount = d.ri();
                    break;
                case 2:
                    o.firstReach = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_dungeon_info_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.profitCount != undefined) {
            se.wi(self.profitCount, 0);
        }
        if (self.assistCount != undefined) {
            se.wi(self.assistCount, 1);
        }
        if (self.firstReach != undefined) {
            se.wia(self.firstReach, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_dungeon_info_response"] = { en: _encode_cs_guild_dungeon_info_response, de: _decode_cs_guild_dungeon_info_response };
    var cs_guild_join_request = (function () {
        function cs_guild_join_request() {
        }
        return cs_guild_join_request;
    }());
    Sproto.cs_guild_join_request = cs_guild_join_request;
    __reflect(cs_guild_join_request.prototype, "Sproto.cs_guild_join_request");
    function _decode_cs_guild_join_request(d) {
        var o = new cs_guild_join_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_join_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_join_request"] = { en: _encode_cs_guild_join_request, de: _decode_cs_guild_join_request };
    var cs_guild_kick_request = (function () {
        function cs_guild_kick_request() {
        }
        return cs_guild_kick_request;
    }());
    Sproto.cs_guild_kick_request = cs_guild_kick_request;
    __reflect(cs_guild_kick_request.prototype, "Sproto.cs_guild_kick_request");
    function _decode_cs_guild_kick_request(d) {
        var o = new cs_guild_kick_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_kick_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_kick_request"] = { en: _encode_cs_guild_kick_request, de: _decode_cs_guild_kick_request };
    var cs_guild_map_exchange_info_request = (function () {
        function cs_guild_map_exchange_info_request() {
        }
        return cs_guild_map_exchange_info_request;
    }());
    Sproto.cs_guild_map_exchange_info_request = cs_guild_map_exchange_info_request;
    __reflect(cs_guild_map_exchange_info_request.prototype, "Sproto.cs_guild_map_exchange_info_request");
    function _decode_cs_guild_map_exchange_info_request(d) {
        var o = new cs_guild_map_exchange_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_exchange_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_exchange_info_request"] = { en: _encode_cs_guild_map_exchange_info_request, de: _decode_cs_guild_map_exchange_info_request };
    var cs_guild_map_exchange_info_response = (function () {
        function cs_guild_map_exchange_info_response() {
        }
        return cs_guild_map_exchange_info_response;
    }());
    Sproto.cs_guild_map_exchange_info_response = cs_guild_map_exchange_info_response;
    __reflect(cs_guild_map_exchange_info_response.prototype, "Sproto.cs_guild_map_exchange_info_response");
    function _decode_cs_guild_map_exchange_info_response(d) {
        var o = new cs_guild_map_exchange_info_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.exchangeInfo = d.ro("exchange_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_exchange_info_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.exchangeInfo != undefined) {
            se.wo("exchange_info", self.exchangeInfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_exchange_info_response"] = { en: _encode_cs_guild_map_exchange_info_response, de: _decode_cs_guild_map_exchange_info_response };
    var cs_guild_map_exchange_pay_request = (function () {
        function cs_guild_map_exchange_pay_request() {
        }
        return cs_guild_map_exchange_pay_request;
    }());
    Sproto.cs_guild_map_exchange_pay_request = cs_guild_map_exchange_pay_request;
    __reflect(cs_guild_map_exchange_pay_request.prototype, "Sproto.cs_guild_map_exchange_pay_request");
    function _decode_cs_guild_map_exchange_pay_request(d) {
        var o = new cs_guild_map_exchange_pay_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_exchange_pay_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_exchange_pay_request"] = { en: _encode_cs_guild_map_exchange_pay_request, de: _decode_cs_guild_map_exchange_pay_request };
    var cs_guild_map_exchange_pay_response = (function () {
        function cs_guild_map_exchange_pay_response() {
        }
        return cs_guild_map_exchange_pay_response;
    }());
    Sproto.cs_guild_map_exchange_pay_response = cs_guild_map_exchange_pay_response;
    __reflect(cs_guild_map_exchange_pay_response.prototype, "Sproto.cs_guild_map_exchange_pay_response");
    function _decode_cs_guild_map_exchange_pay_response(d) {
        var o = new cs_guild_map_exchange_pay_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.exchangeInfo = d.ro("exchange_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_exchange_pay_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.exchangeInfo != undefined) {
            se.wo("exchange_info", self.exchangeInfo, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_exchange_pay_response"] = { en: _encode_cs_guild_map_exchange_pay_response, de: _decode_cs_guild_map_exchange_pay_response };
    var cs_guild_map_exchange_refresh_request = (function () {
        function cs_guild_map_exchange_refresh_request() {
        }
        return cs_guild_map_exchange_refresh_request;
    }());
    Sproto.cs_guild_map_exchange_refresh_request = cs_guild_map_exchange_refresh_request;
    __reflect(cs_guild_map_exchange_refresh_request.prototype, "Sproto.cs_guild_map_exchange_refresh_request");
    function _decode_cs_guild_map_exchange_refresh_request(d) {
        var o = new cs_guild_map_exchange_refresh_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_exchange_refresh_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_exchange_refresh_request"] = { en: _encode_cs_guild_map_exchange_refresh_request, de: _decode_cs_guild_map_exchange_refresh_request };
    var cs_guild_map_exchange_refresh_response = (function () {
        function cs_guild_map_exchange_refresh_response() {
        }
        return cs_guild_map_exchange_refresh_response;
    }());
    Sproto.cs_guild_map_exchange_refresh_response = cs_guild_map_exchange_refresh_response;
    __reflect(cs_guild_map_exchange_refresh_response.prototype, "Sproto.cs_guild_map_exchange_refresh_response");
    function _decode_cs_guild_map_exchange_refresh_response(d) {
        var o = new cs_guild_map_exchange_refresh_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.exchangeInfo = d.ro("exchange_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_exchange_refresh_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.exchangeInfo != undefined) {
            se.wo("exchange_info", self.exchangeInfo, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_exchange_refresh_response"] = { en: _encode_cs_guild_map_exchange_refresh_response, de: _decode_cs_guild_map_exchange_refresh_response };
    var cs_guild_map_reward_request = (function () {
        function cs_guild_map_reward_request() {
        }
        return cs_guild_map_reward_request;
    }());
    Sproto.cs_guild_map_reward_request = cs_guild_map_reward_request;
    __reflect(cs_guild_map_reward_request.prototype, "Sproto.cs_guild_map_reward_request");
    function _decode_cs_guild_map_reward_request(d) {
        var o = new cs_guild_map_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_reward_request"] = { en: _encode_cs_guild_map_reward_request, de: _decode_cs_guild_map_reward_request };
    var cs_guild_map_reward_response = (function () {
        function cs_guild_map_reward_response() {
        }
        return cs_guild_map_reward_response;
    }());
    Sproto.cs_guild_map_reward_response = cs_guild_map_reward_response;
    __reflect(cs_guild_map_reward_response.prototype, "Sproto.cs_guild_map_reward_response");
    function _decode_cs_guild_map_reward_response(d) {
        var o = new cs_guild_map_reward_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_reward_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_reward_response"] = { en: _encode_cs_guild_map_reward_response, de: _decode_cs_guild_map_reward_response };
    var cs_guild_map_task_complete_request = (function () {
        function cs_guild_map_task_complete_request() {
        }
        return cs_guild_map_task_complete_request;
    }());
    Sproto.cs_guild_map_task_complete_request = cs_guild_map_task_complete_request;
    __reflect(cs_guild_map_task_complete_request.prototype, "Sproto.cs_guild_map_task_complete_request");
    function _decode_cs_guild_map_task_complete_request(d) {
        var o = new cs_guild_map_task_complete_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_complete_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_complete_request"] = { en: _encode_cs_guild_map_task_complete_request, de: _decode_cs_guild_map_task_complete_request };
    var cs_guild_map_task_info_request = (function () {
        function cs_guild_map_task_info_request() {
        }
        return cs_guild_map_task_info_request;
    }());
    Sproto.cs_guild_map_task_info_request = cs_guild_map_task_info_request;
    __reflect(cs_guild_map_task_info_request.prototype, "Sproto.cs_guild_map_task_info_request");
    function _decode_cs_guild_map_task_info_request(d) {
        var o = new cs_guild_map_task_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_info_request"] = { en: _encode_cs_guild_map_task_info_request, de: _decode_cs_guild_map_task_info_request };
    var cs_guild_map_task_info_response = (function () {
        function cs_guild_map_task_info_response() {
        }
        return cs_guild_map_task_info_response;
    }());
    Sproto.cs_guild_map_task_info_response = cs_guild_map_task_info_response;
    __reflect(cs_guild_map_task_info_response.prototype, "Sproto.cs_guild_map_task_info_response");
    function _decode_cs_guild_map_task_info_response(d) {
        var o = new cs_guild_map_task_info_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskInfo = d.roa("task_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_info_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskInfo != undefined) {
            se.woa("task_info", self.taskInfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_info_response"] = { en: _encode_cs_guild_map_task_info_response, de: _decode_cs_guild_map_task_info_response };
    var cs_guild_map_task_quick_request = (function () {
        function cs_guild_map_task_quick_request() {
        }
        return cs_guild_map_task_quick_request;
    }());
    Sproto.cs_guild_map_task_quick_request = cs_guild_map_task_quick_request;
    __reflect(cs_guild_map_task_quick_request.prototype, "Sproto.cs_guild_map_task_quick_request");
    function _decode_cs_guild_map_task_quick_request(d) {
        var o = new cs_guild_map_task_quick_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_quick_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_quick_request"] = { en: _encode_cs_guild_map_task_quick_request, de: _decode_cs_guild_map_task_quick_request };
    var cs_guild_map_task_quick_response = (function () {
        function cs_guild_map_task_quick_response() {
        }
        return cs_guild_map_task_quick_response;
    }());
    Sproto.cs_guild_map_task_quick_response = cs_guild_map_task_quick_response;
    __reflect(cs_guild_map_task_quick_response.prototype, "Sproto.cs_guild_map_task_quick_response");
    function _decode_cs_guild_map_task_quick_response(d) {
        var o = new cs_guild_map_task_quick_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.taskInfo = d.ro("task_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_quick_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.taskInfo != undefined) {
            se.wo("task_info", self.taskInfo, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_quick_response"] = { en: _encode_cs_guild_map_task_quick_response, de: _decode_cs_guild_map_task_quick_response };
    var cs_guild_map_task_reset_request = (function () {
        function cs_guild_map_task_reset_request() {
        }
        return cs_guild_map_task_reset_request;
    }());
    Sproto.cs_guild_map_task_reset_request = cs_guild_map_task_reset_request;
    __reflect(cs_guild_map_task_reset_request.prototype, "Sproto.cs_guild_map_task_reset_request");
    function _decode_cs_guild_map_task_reset_request(d) {
        var o = new cs_guild_map_task_reset_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_reset_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_reset_request"] = { en: _encode_cs_guild_map_task_reset_request, de: _decode_cs_guild_map_task_reset_request };
    var cs_guild_map_task_reset_response = (function () {
        function cs_guild_map_task_reset_response() {
        }
        return cs_guild_map_task_reset_response;
    }());
    Sproto.cs_guild_map_task_reset_response = cs_guild_map_task_reset_response;
    __reflect(cs_guild_map_task_reset_response.prototype, "Sproto.cs_guild_map_task_reset_response");
    function _decode_cs_guild_map_task_reset_response(d) {
        var o = new cs_guild_map_task_reset_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.taskInfo = d.ro("task_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_map_task_reset_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.taskInfo != undefined) {
            se.wo("task_info", self.taskInfo, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_map_task_reset_response"] = { en: _encode_cs_guild_map_task_reset_response, de: _decode_cs_guild_map_task_reset_response };
    var cs_guild_member_recruit_request = (function () {
        function cs_guild_member_recruit_request() {
        }
        return cs_guild_member_recruit_request;
    }());
    Sproto.cs_guild_member_recruit_request = cs_guild_member_recruit_request;
    __reflect(cs_guild_member_recruit_request.prototype, "Sproto.cs_guild_member_recruit_request");
    function _decode_cs_guild_member_recruit_request(d) {
        var o = new cs_guild_member_recruit_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_member_recruit_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_member_recruit_request"] = { en: _encode_cs_guild_member_recruit_request, de: _decode_cs_guild_member_recruit_request };
    var cs_guild_peach_eat_request = (function () {
        function cs_guild_peach_eat_request() {
        }
        return cs_guild_peach_eat_request;
    }());
    Sproto.cs_guild_peach_eat_request = cs_guild_peach_eat_request;
    __reflect(cs_guild_peach_eat_request.prototype, "Sproto.cs_guild_peach_eat_request");
    function _decode_cs_guild_peach_eat_request(d) {
        var o = new cs_guild_peach_eat_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_peach_eat_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_peach_eat_request"] = { en: _encode_cs_guild_peach_eat_request, de: _decode_cs_guild_peach_eat_request };
    var cs_guild_peach_info_request = (function () {
        function cs_guild_peach_info_request() {
        }
        return cs_guild_peach_info_request;
    }());
    Sproto.cs_guild_peach_info_request = cs_guild_peach_info_request;
    __reflect(cs_guild_peach_info_request.prototype, "Sproto.cs_guild_peach_info_request");
    function _decode_cs_guild_peach_info_request(d) {
        var o = new cs_guild_peach_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_peach_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_peach_info_request"] = { en: _encode_cs_guild_peach_info_request, de: _decode_cs_guild_peach_info_request };
    var cs_guild_peach_reward_request = (function () {
        function cs_guild_peach_reward_request() {
        }
        return cs_guild_peach_reward_request;
    }());
    Sproto.cs_guild_peach_reward_request = cs_guild_peach_reward_request;
    __reflect(cs_guild_peach_reward_request.prototype, "Sproto.cs_guild_peach_reward_request");
    function _decode_cs_guild_peach_reward_request(d) {
        var o = new cs_guild_peach_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_peach_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_peach_reward_request"] = { en: _encode_cs_guild_peach_reward_request, de: _decode_cs_guild_peach_reward_request };
    var cs_guild_protector_everyday_reward_request = (function () {
        function cs_guild_protector_everyday_reward_request() {
        }
        return cs_guild_protector_everyday_reward_request;
    }());
    Sproto.cs_guild_protector_everyday_reward_request = cs_guild_protector_everyday_reward_request;
    __reflect(cs_guild_protector_everyday_reward_request.prototype, "Sproto.cs_guild_protector_everyday_reward_request");
    function _decode_cs_guild_protector_everyday_reward_request(d) {
        var o = new cs_guild_protector_everyday_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rewardId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_protector_everyday_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rewardId != undefined) {
            se.wi(self.rewardId, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_protector_everyday_reward_request"] = { en: _encode_cs_guild_protector_everyday_reward_request, de: _decode_cs_guild_protector_everyday_reward_request };
    var cs_guild_protector_info_request = (function () {
        function cs_guild_protector_info_request() {
        }
        return cs_guild_protector_info_request;
    }());
    Sproto.cs_guild_protector_info_request = cs_guild_protector_info_request;
    __reflect(cs_guild_protector_info_request.prototype, "Sproto.cs_guild_protector_info_request");
    function _decode_cs_guild_protector_info_request(d) {
        var o = new cs_guild_protector_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_protector_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_protector_info_request"] = { en: _encode_cs_guild_protector_info_request, de: _decode_cs_guild_protector_info_request };
    var cs_guild_protector_uplevel_request = (function () {
        function cs_guild_protector_uplevel_request() {
        }
        return cs_guild_protector_uplevel_request;
    }());
    Sproto.cs_guild_protector_uplevel_request = cs_guild_protector_uplevel_request;
    __reflect(cs_guild_protector_uplevel_request.prototype, "Sproto.cs_guild_protector_uplevel_request");
    function _decode_cs_guild_protector_uplevel_request(d) {
        var o = new cs_guild_protector_uplevel_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_protector_uplevel_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_protector_uplevel_request"] = { en: _encode_cs_guild_protector_uplevel_request, de: _decode_cs_guild_protector_uplevel_request };
    var cs_guild_rename_request = (function () {
        function cs_guild_rename_request() {
        }
        return cs_guild_rename_request;
    }());
    Sproto.cs_guild_rename_request = cs_guild_rename_request;
    __reflect(cs_guild_rename_request.prototype, "Sproto.cs_guild_rename_request");
    function _decode_cs_guild_rename_request(d) {
        var o = new cs_guild_rename_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.guildName = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_rename_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.guildName != undefined) {
            se.ws(self.guildName, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_rename_request"] = { en: _encode_cs_guild_rename_request, de: _decode_cs_guild_rename_request };
    var cs_guild_sendchat_request = (function () {
        function cs_guild_sendchat_request() {
        }
        return cs_guild_sendchat_request;
    }());
    Sproto.cs_guild_sendchat_request = cs_guild_sendchat_request;
    __reflect(cs_guild_sendchat_request.prototype, "Sproto.cs_guild_sendchat_request");
    function _decode_cs_guild_sendchat_request(d) {
        var o = new cs_guild_sendchat_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.str = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_sendchat_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.str != undefined) {
            se.ws(self.str, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_sendchat_request"] = { en: _encode_cs_guild_sendchat_request, de: _decode_cs_guild_sendchat_request };
    var cs_guild_sendshare_request = (function () {
        function cs_guild_sendshare_request() {
        }
        return cs_guild_sendshare_request;
    }());
    Sproto.cs_guild_sendshare_request = cs_guild_sendshare_request;
    __reflect(cs_guild_sendshare_request.prototype, "Sproto.cs_guild_sendshare_request");
    function _decode_cs_guild_sendshare_request(d) {
        var o = new cs_guild_sendshare_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.shareId = d.ri();
                    break;
                case 1:
                    o.params = d.roa("client_chat_param");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_sendshare_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.shareId != undefined) {
            se.wi(self.shareId, 0);
        }
        if (self.params != undefined) {
            se.woa("client_chat_param", self.params, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_sendshare_request"] = { en: _encode_cs_guild_sendshare_request, de: _decode_cs_guild_sendshare_request };
    var cs_guild_setapply_request = (function () {
        function cs_guild_setapply_request() {
        }
        return cs_guild_setapply_request;
    }());
    Sproto.cs_guild_setapply_request = cs_guild_setapply_request;
    __reflect(cs_guild_setapply_request.prototype, "Sproto.cs_guild_setapply_request");
    function _decode_cs_guild_setapply_request(d) {
        var o = new cs_guild_setapply_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                case 1:
                    o.result = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_setapply_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        if (self.result != undefined) {
            se.wi(self.result, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_setapply_request"] = { en: _encode_cs_guild_setapply_request, de: _decode_cs_guild_setapply_request };
    var cs_guild_setautoadd_request = (function () {
        function cs_guild_setautoadd_request() {
        }
        return cs_guild_setautoadd_request;
    }());
    Sproto.cs_guild_setautoadd_request = cs_guild_setautoadd_request;
    __reflect(cs_guild_setautoadd_request.prototype, "Sproto.cs_guild_setautoadd_request");
    function _decode_cs_guild_setautoadd_request(d) {
        var o = new cs_guild_setautoadd_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.auto = d.ri();
                    break;
                case 1:
                    o.power = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_setautoadd_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.auto != undefined) {
            se.wi(self.auto, 0);
        }
        if (self.power != undefined) {
            se.wi(self.power, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_setautoadd_request"] = { en: _encode_cs_guild_setautoadd_request, de: _decode_cs_guild_setautoadd_request };
    var cs_guild_skill_info_request = (function () {
        function cs_guild_skill_info_request() {
        }
        return cs_guild_skill_info_request;
    }());
    Sproto.cs_guild_skill_info_request = cs_guild_skill_info_request;
    __reflect(cs_guild_skill_info_request.prototype, "Sproto.cs_guild_skill_info_request");
    function _decode_cs_guild_skill_info_request(d) {
        var o = new cs_guild_skill_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_skill_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_skill_info_request"] = { en: _encode_cs_guild_skill_info_request, de: _decode_cs_guild_skill_info_request };
    var cs_guild_skill_learn_request = (function () {
        function cs_guild_skill_learn_request() {
        }
        return cs_guild_skill_learn_request;
    }());
    Sproto.cs_guild_skill_learn_request = cs_guild_skill_learn_request;
    __reflect(cs_guild_skill_learn_request.prototype, "Sproto.cs_guild_skill_learn_request");
    function _decode_cs_guild_skill_learn_request(d) {
        var o = new cs_guild_skill_learn_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_guild_skill_learn_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_guild_skill_learn_request"] = { en: _encode_cs_guild_skill_learn_request, de: _decode_cs_guild_skill_learn_request };
    var exchange_info = (function () {
        function exchange_info() {
        }
        return exchange_info;
    }());
    Sproto.exchange_info = exchange_info;
    __reflect(exchange_info.prototype, "Sproto.exchange_info");
    function _decode_exchange_info(d) {
        var o = new exchange_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.refreshTime = d.ri();
                    break;
                case 1:
                    o.refreshCount = d.ri();
                    break;
                case 2:
                    o.exchangeList = d.ria();
                    break;
                case 3:
                    o.guildBag = d.roa("guild_bag");
                    break;
                case 4:
                    o.exchangeMark = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_exchange_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.refreshTime != undefined) {
            se.wi(self.refreshTime, 0);
        }
        if (self.refreshCount != undefined) {
            se.wi(self.refreshCount, 1);
        }
        if (self.exchangeList != undefined) {
            se.wia(self.exchangeList, 2);
        }
        if (self.guildBag != undefined) {
            se.woa("guild_bag", self.guildBag, 3);
        }
        if (self.exchangeMark != undefined) {
            se.wi(self.exchangeMark, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["exchange_info"] = { en: _encode_exchange_info, de: _decode_exchange_info };
    var guild_bag = (function () {
        function guild_bag() {
        }
        return guild_bag;
    }());
    Sproto.guild_bag = guild_bag;
    __reflect(guild_bag.prototype, "Sproto.guild_bag");
    function _decode_guild_bag(d) {
        var o = new guild_bag;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_bag(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_bag"] = { en: _encode_guild_bag, de: _decode_guild_bag };
    var task_info = (function () {
        function task_info() {
        }
        return task_info;
    }());
    Sproto.task_info = task_info;
    __reflect(task_info.prototype, "Sproto.task_info");
    function _decode_task_info(d) {
        var o = new task_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                case 2:
                    o.recount = d.ri();
                    break;
                case 3:
                    o.rewardStatus = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_task_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        if (self.recount != undefined) {
            se.wi(self.recount, 2);
        }
        if (self.rewardStatus != undefined) {
            se.wb(self.rewardStatus, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["task_info"] = { en: _encode_task_info, de: _decode_task_info };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=guild_c2s.js.map