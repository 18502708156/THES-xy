// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var guild_apply = (function () {
        function guild_apply() {
        }
        return guild_apply;
    }());
    Sproto.guild_apply = guild_apply;
    __reflect(guild_apply.prototype, "Sproto.guild_apply");
    function _decode_guild_apply(d) {
        var o = new guild_apply;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                case 1:
                    o.vip = d.ri();
                    break;
                case 2:
                    o.job = d.ri();
                    break;
                case 3:
                    o.sex = d.ri();
                    break;
                case 4:
                    o.power = d.ri();
                    break;
                case 5:
                    o.playername = d.rs();
                    break;
                case 6:
                    o.level = d.ri();
                    break;
                case 7:
                    o.logouttime = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_apply(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 8);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        if (self.vip != undefined) {
            se.wi(self.vip, 1);
        }
        if (self.job != undefined) {
            se.wi(self.job, 2);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 3);
        }
        if (self.power != undefined) {
            se.wi(self.power, 4);
        }
        if (self.playername != undefined) {
            se.ws(self.playername, 5);
        }
        if (self.level != undefined) {
            se.wi(self.level, 6);
        }
        if (self.logouttime != undefined) {
            se.wi(self.logouttime, 7);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_apply"] = { en: _encode_guild_apply, de: _decode_guild_apply };
    var guild_chat = (function () {
        function guild_chat() {
        }
        return guild_chat;
    }());
    Sproto.guild_chat = guild_chat;
    __reflect(guild_chat.prototype, "Sproto.guild_chat");
    function _decode_guild_chat(d) {
        var o = new guild_chat;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.content = d.rs();
                    break;
                case 2:
                    o.playerid = d.ri();
                    break;
                case 3:
                    o.name = d.rs();
                    break;
                case 4:
                    o.job = d.ri();
                    break;
                case 5:
                    o.sex = d.ri();
                    break;
                case 6:
                    o.vip = d.ri();
                    break;
                case 7:
                    o.office = d.ri();
                    break;
                case 8:
                    o.time = d.ri();
                    break;
                case 9:
                    o.share = d.ro("share_date");
                    break;
                case 10:
                    o.headframe = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_chat(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 11);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.content != undefined) {
            se.ws(self.content, 1);
        }
        if (self.playerid != undefined) {
            se.wi(self.playerid, 2);
        }
        if (self.name != undefined) {
            se.ws(self.name, 3);
        }
        if (self.job != undefined) {
            se.wi(self.job, 4);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 5);
        }
        if (self.vip != undefined) {
            se.wi(self.vip, 6);
        }
        if (self.office != undefined) {
            se.wi(self.office, 7);
        }
        if (self.time != undefined) {
            se.wi(self.time, 8);
        }
        if (self.share != undefined) {
            se.wo("share_date", self.share, 9);
        }
        if (self.headframe != undefined) {
            se.wi(self.headframe, 10);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_chat"] = { en: _encode_guild_chat, de: _decode_guild_chat };
    var guild_history = (function () {
        function guild_history() {
        }
        return guild_history;
    }());
    Sproto.guild_history = guild_history;
    __reflect(guild_history.prototype, "Sproto.guild_history");
    function _decode_guild_history(d) {
        var o = new guild_history;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.time = d.ri();
                    break;
                case 1:
                    o.type = d.ri();
                    break;
                case 2:
                    o.param1 = d.ri();
                    break;
                case 3:
                    o.param2 = d.ri();
                    break;
                case 4:
                    o.param3 = d.ri();
                    break;
                case 5:
                    o.name1 = d.rs();
                    break;
                case 6:
                    o.name2 = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_history(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 7);
        if (self.time != undefined) {
            se.wi(self.time, 0);
        }
        if (self.type != undefined) {
            se.wi(self.type, 1);
        }
        if (self.param1 != undefined) {
            se.wi(self.param1, 2);
        }
        if (self.param2 != undefined) {
            se.wi(self.param2, 3);
        }
        if (self.param3 != undefined) {
            se.wi(self.param3, 4);
        }
        if (self.name1 != undefined) {
            se.ws(self.name1, 5);
        }
        if (self.name2 != undefined) {
            se.ws(self.name2, 6);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_history"] = { en: _encode_guild_history, de: _decode_guild_history };
    var guild_map_shows = (function () {
        function guild_map_shows() {
        }
        return guild_map_shows;
    }());
    Sproto.guild_map_shows = guild_map_shows;
    __reflect(guild_map_shows.prototype, "Sproto.guild_map_shows");
    function _decode_guild_map_shows(d) {
        var o = new guild_map_shows;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.shows = d.ria();
                    break;
                case 1:
                    o.job = d.ri();
                    break;
                case 2:
                    o.sex = d.ri();
                    break;
                case 3:
                    o.id = d.ri();
                    break;
                case 4:
                    o.name = d.rs();
                    break;
                case 5:
                    o.serverid = d.ri();
                    break;
                case 6:
                    o.guildid = d.ri();
                    break;
                case 7:
                    o.guildname = d.rs();
                    break;
                case 8:
                    o.level = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_map_shows(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 9);
        if (self.shows != undefined) {
            se.wia(self.shows, 0);
        }
        if (self.job != undefined) {
            se.wi(self.job, 1);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 2);
        }
        if (self.id != undefined) {
            se.wi(self.id, 3);
        }
        if (self.name != undefined) {
            se.ws(self.name, 4);
        }
        if (self.serverid != undefined) {
            se.wi(self.serverid, 5);
        }
        if (self.guildid != undefined) {
            se.wi(self.guildid, 6);
        }
        if (self.guildname != undefined) {
            se.ws(self.guildname, 7);
        }
        if (self.level != undefined) {
            se.wi(self.level, 8);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_map_shows"] = { en: _encode_guild_map_shows, de: _decode_guild_map_shows };
    var guild_record = (function () {
        function guild_record() {
        }
        return guild_record;
    }());
    Sproto.guild_record = guild_record;
    __reflect(guild_record.prototype, "Sproto.guild_record");
    function _decode_guild_record(d) {
        var o = new guild_record;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.historyRecord = d.ro("guild_history");
                    break;
                case 2:
                    o.chatRecord = d.ro("guild_chat");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_record(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.historyRecord != undefined) {
            se.wo("guild_history", self.historyRecord, 1);
        }
        if (self.chatRecord != undefined) {
            se.wo("guild_chat", self.chatRecord, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_record"] = { en: _encode_guild_record, de: _decode_guild_record };
    var guild_summary = (function () {
        function guild_summary() {
        }
        return guild_summary;
    }());
    Sproto.guild_summary = guild_summary;
    __reflect(guild_summary.prototype, "Sproto.guild_summary");
    function _decode_guild_summary(d) {
        var o = new guild_summary;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.level = d.ri();
                    break;
                case 2:
                    o.playercount = d.ri();
                    break;
                case 3:
                    o.name = d.rs();
                    break;
                case 4:
                    o.leaderinfo = d.ro("member_info");
                    break;
                case 5:
                    o.needPower = d.ri();
                    break;
                case 6:
                    o.totalpower = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guild_summary(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 7);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.level != undefined) {
            se.wi(self.level, 1);
        }
        if (self.playercount != undefined) {
            se.wi(self.playercount, 2);
        }
        if (self.name != undefined) {
            se.ws(self.name, 3);
        }
        if (self.leaderinfo != undefined) {
            se.wo("member_info", self.leaderinfo, 4);
        }
        if (self.needPower != undefined) {
            se.wi(self.needPower, 5);
        }
        if (self.totalpower != undefined) {
            se.wi(self.totalpower, 6);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guild_summary"] = { en: _encode_guild_summary, de: _decode_guild_summary };
    var member_info = (function () {
        function member_info() {
        }
        return member_info;
    }());
    Sproto.member_info = member_info;
    __reflect(member_info.prototype, "Sproto.member_info");
    function _decode_member_info(d) {
        var o = new member_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                case 1:
                    o.playername = d.rs();
                    break;
                case 2:
                    o.office = d.ri();
                    break;
                case 3:
                    o.job = d.ri();
                    break;
                case 4:
                    o.sex = d.ri();
                    break;
                case 5:
                    o.vip = d.ri();
                    break;
                case 8:
                    o.contribute = d.ri();
                    break;
                case 9:
                    o.todayContri = d.ri();
                    break;
                case 10:
                    o.curcontribute = d.ri();
                    break;
                case 11:
                    o.power = d.ri();
                    break;
                case 12:
                    o.logouttime = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_member_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 12);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        if (self.playername != undefined) {
            se.ws(self.playername, 1);
        }
        if (self.office != undefined) {
            se.wi(self.office, 2);
        }
        if (self.job != undefined) {
            se.wi(self.job, 3);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 4);
        }
        if (self.vip != undefined) {
            se.wi(self.vip, 5);
        }
        if (self.contribute != undefined) {
            se.wi(self.contribute, 8);
        }
        if (self.todayContri != undefined) {
            se.wi(self.todayContri, 9);
        }
        if (self.curcontribute != undefined) {
            se.wi(self.curcontribute, 10);
        }
        if (self.power != undefined) {
            se.wi(self.power, 11);
        }
        if (self.logouttime != undefined) {
            se.wi(self.logouttime, 12);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["member_info"] = { en: _encode_member_info, de: _decode_member_info };
    var other_guild_info = (function () {
        function other_guild_info() {
        }
        return other_guild_info;
    }());
    Sproto.other_guild_info = other_guild_info;
    __reflect(other_guild_info.prototype, "Sproto.other_guild_info");
    function _decode_other_guild_info(d) {
        var o = new other_guild_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.level = d.ri();
                    break;
                case 1:
                    o.fund = d.ri();
                    break;
                case 2:
                    o.notice = d.rs();
                    break;
                case 3:
                    o.autoJoin = d.ri();
                    break;
                case 4:
                    o.needPower = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_other_guild_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.level != undefined) {
            se.wi(self.level, 0);
        }
        if (self.fund != undefined) {
            se.wi(self.fund, 1);
        }
        if (self.notice != undefined) {
            se.ws(self.notice, 2);
        }
        if (self.autoJoin != undefined) {
            se.wi(self.autoJoin, 3);
        }
        if (self.needPower != undefined) {
            se.wi(self.needPower, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["other_guild_info"] = { en: _encode_other_guild_info, de: _decode_other_guild_info };
    var peach_record = (function () {
        function peach_record() {
        }
        return peach_record;
    }());
    Sproto.peach_record = peach_record;
    __reflect(peach_record.prototype, "Sproto.peach_record");
    function _decode_peach_record(d) {
        var o = new peach_record;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.time = d.ri();
                    break;
                case 1:
                    o.peachId = d.ri();
                    break;
                case 2:
                    o.playerName = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_peach_record(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.time != undefined) {
            se.wi(self.time, 0);
        }
        if (self.peachId != undefined) {
            se.wi(self.peachId, 1);
        }
        if (self.playerName != undefined) {
            se.ws(self.playerName, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["peach_record"] = { en: _encode_peach_record, de: _decode_peach_record };
    var protector_task_info = (function () {
        function protector_task_info() {
        }
        return protector_task_info;
    }());
    Sproto.protector_task_info = protector_task_info;
    __reflect(protector_task_info.prototype, "Sproto.protector_task_info");
    function _decode_protector_task_info(d) {
        var o = new protector_task_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskId = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_protector_task_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.taskId != undefined) {
            se.wi(self.taskId, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["protector_task_info"] = { en: _encode_protector_task_info, de: _decode_protector_task_info };
    var sc_guild_apply_request = (function () {
        function sc_guild_apply_request() {
        }
        return sc_guild_apply_request;
    }());
    Sproto.sc_guild_apply_request = sc_guild_apply_request;
    __reflect(sc_guild_apply_request.prototype, "Sproto.sc_guild_apply_request");
    function _decode_sc_guild_apply_request(d) {
        var o = new sc_guild_apply_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.applyinfo = d.roa("guild_apply");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_apply_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.applyinfo != undefined) {
            se.woa("guild_apply", self.applyinfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_apply_request"] = { en: _encode_sc_guild_apply_request, de: _decode_sc_guild_apply_request };
    var sc_guild_apply_list_request = (function () {
        function sc_guild_apply_list_request() {
        }
        return sc_guild_apply_list_request;
    }());
    Sproto.sc_guild_apply_list_request = sc_guild_apply_list_request;
    __reflect(sc_guild_apply_list_request.prototype, "Sproto.sc_guild_apply_list_request");
    function _decode_sc_guild_apply_list_request(d) {
        var o = new sc_guild_apply_list_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.guilds = d.roa("guild_summary");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_apply_list_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.guilds != undefined) {
            se.woa("guild_summary", self.guilds, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_apply_list_request"] = { en: _encode_sc_guild_apply_list_request, de: _decode_sc_guild_apply_list_request };
    var sc_guild_autoadd_ret_request = (function () {
        function sc_guild_autoadd_ret_request() {
        }
        return sc_guild_autoadd_ret_request;
    }());
    Sproto.sc_guild_autoadd_ret_request = sc_guild_autoadd_ret_request;
    __reflect(sc_guild_autoadd_ret_request.prototype, "Sproto.sc_guild_autoadd_ret_request");
    function _decode_sc_guild_autoadd_ret_request(d) {
        var o = new sc_guild_autoadd_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.autoJoin = d.ri();
                    break;
                case 1:
                    o.needPower = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_autoadd_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.autoJoin != undefined) {
            se.wi(self.autoJoin, 0);
        }
        if (self.needPower != undefined) {
            se.wi(self.needPower, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_autoadd_ret_request"] = { en: _encode_sc_guild_autoadd_ret_request, de: _decode_sc_guild_autoadd_ret_request };
    var sc_guild_boss_info_request = (function () {
        function sc_guild_boss_info_request() {
        }
        return sc_guild_boss_info_request;
    }());
    Sproto.sc_guild_boss_info_request = sc_guild_boss_info_request;
    __reflect(sc_guild_boss_info_request.prototype, "Sproto.sc_guild_boss_info_request");
    function _decode_sc_guild_boss_info_request(d) {
        var o = new sc_guild_boss_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.event = d.ri();
                    break;
                case 1:
                    o.status = d.ri();
                    break;
                case 2:
                    o.countdown = d.ri();
                    break;
                case 3:
                    o.maxhp = d.ri();
                    break;
                case 4:
                    o.hp = d.ri();
                    break;
                case 5:
                    o.canreward = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_boss_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 6);
        if (self.event != undefined) {
            se.wi(self.event, 0);
        }
        if (self.status != undefined) {
            se.wi(self.status, 1);
        }
        if (self.countdown != undefined) {
            se.wi(self.countdown, 2);
        }
        if (self.maxhp != undefined) {
            se.wi(self.maxhp, 3);
        }
        if (self.hp != undefined) {
            se.wi(self.hp, 4);
        }
        if (self.canreward != undefined) {
            se.wb(self.canreward, 5);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_boss_info_request"] = { en: _encode_sc_guild_boss_info_request, de: _decode_sc_guild_boss_info_request };
    var sc_guild_change_notice_ret_request = (function () {
        function sc_guild_change_notice_ret_request() {
        }
        return sc_guild_change_notice_ret_request;
    }());
    Sproto.sc_guild_change_notice_ret_request = sc_guild_change_notice_ret_request;
    __reflect(sc_guild_change_notice_ret_request.prototype, "Sproto.sc_guild_change_notice_ret_request");
    function _decode_sc_guild_change_notice_ret_request(d) {
        var o = new sc_guild_change_notice_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.result = d.ri();
                    break;
                case 1:
                    o.text = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_change_notice_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.result != undefined) {
            se.wi(self.result, 0);
        }
        if (self.text != undefined) {
            se.ws(self.text, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_change_notice_ret_request"] = { en: _encode_sc_guild_change_notice_ret_request, de: _decode_sc_guild_change_notice_ret_request };
    var sc_guild_change_office_ret_request = (function () {
        function sc_guild_change_office_ret_request() {
        }
        return sc_guild_change_office_ret_request;
    }());
    Sproto.sc_guild_change_office_ret_request = sc_guild_change_office_ret_request;
    __reflect(sc_guild_change_office_ret_request.prototype, "Sproto.sc_guild_change_office_ret_request");
    function _decode_sc_guild_change_office_ret_request(d) {
        var o = new sc_guild_change_office_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                case 1:
                    o.office = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_change_office_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        if (self.office != undefined) {
            se.wi(self.office, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_change_office_ret_request"] = { en: _encode_sc_guild_change_office_ret_request, de: _decode_sc_guild_change_office_ret_request };
    var sc_guild_create_ret_request = (function () {
        function sc_guild_create_ret_request() {
        }
        return sc_guild_create_ret_request;
    }());
    Sproto.sc_guild_create_ret_request = sc_guild_create_ret_request;
    __reflect(sc_guild_create_ret_request.prototype, "Sproto.sc_guild_create_ret_request");
    function _decode_sc_guild_create_ret_request(d) {
        var o = new sc_guild_create_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.result = d.ri();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_create_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.result != undefined) {
            se.wi(self.result, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_create_ret_request"] = { en: _encode_sc_guild_create_ret_request, de: _decode_sc_guild_create_ret_request };
    var sc_guild_donate_info_request = (function () {
        function sc_guild_donate_info_request() {
        }
        return sc_guild_donate_info_request;
    }());
    Sproto.sc_guild_donate_info_request = sc_guild_donate_info_request;
    __reflect(sc_guild_donate_info_request.prototype, "Sproto.sc_guild_donate_info_request");
    function _decode_sc_guild_donate_info_request(d) {
        var o = new sc_guild_donate_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.totalNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_donate_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.totalNum != undefined) {
            se.wi(self.totalNum, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_donate_info_request"] = { en: _encode_sc_guild_donate_info_request, de: _decode_sc_guild_donate_info_request };
    var sc_guild_donate_ret_request = (function () {
        function sc_guild_donate_ret_request() {
        }
        return sc_guild_donate_ret_request;
    }());
    Sproto.sc_guild_donate_ret_request = sc_guild_donate_ret_request;
    __reflect(sc_guild_donate_ret_request.prototype, "Sproto.sc_guild_donate_ret_request");
    function _decode_sc_guild_donate_ret_request(d) {
        var o = new sc_guild_donate_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.result = d.rb();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                case 2:
                    o.totalNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_donate_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.result != undefined) {
            se.wb(self.result, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        if (self.totalNum != undefined) {
            se.wi(self.totalNum, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_donate_ret_request"] = { en: _encode_sc_guild_donate_ret_request, de: _decode_sc_guild_donate_ret_request };
    var sc_guild_fund_request = (function () {
        function sc_guild_fund_request() {
        }
        return sc_guild_fund_request;
    }());
    Sproto.sc_guild_fund_request = sc_guild_fund_request;
    __reflect(sc_guild_fund_request.prototype, "Sproto.sc_guild_fund_request");
    function _decode_sc_guild_fund_request(d) {
        var o = new sc_guild_fund_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.fund = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_fund_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.fund != undefined) {
            se.wi(self.fund, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_fund_request"] = { en: _encode_sc_guild_fund_request, de: _decode_sc_guild_fund_request };
    var sc_guild_info_request = (function () {
        function sc_guild_info_request() {
        }
        return sc_guild_info_request;
    }());
    Sproto.sc_guild_info_request = sc_guild_info_request;
    __reflect(sc_guild_info_request.prototype, "Sproto.sc_guild_info_request");
    function _decode_sc_guild_info_request(d) {
        var o = new sc_guild_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                case 2:
                    o.variable = d.ro("other_guild_info");
                    break;
                case 3:
                    o.summary = d.ro("guild_summary");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        if (self.variable != undefined) {
            se.wo("other_guild_info", self.variable, 2);
        }
        if (self.summary != undefined) {
            se.wo("guild_summary", self.summary, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_info_request"] = { en: _encode_sc_guild_info_request, de: _decode_sc_guild_info_request };
    var sc_guild_kick_ret_request = (function () {
        function sc_guild_kick_ret_request() {
        }
        return sc_guild_kick_ret_request;
    }());
    Sproto.sc_guild_kick_ret_request = sc_guild_kick_ret_request;
    __reflect(sc_guild_kick_ret_request.prototype, "Sproto.sc_guild_kick_ret_request");
    function _decode_sc_guild_kick_ret_request(d) {
        var o = new sc_guild_kick_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.playerid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_kick_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.playerid != undefined) {
            se.wi(self.playerid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_kick_ret_request"] = { en: _encode_sc_guild_kick_ret_request, de: _decode_sc_guild_kick_ret_request };
    var sc_guild_list_request = (function () {
        function sc_guild_list_request() {
        }
        return sc_guild_list_request;
    }());
    Sproto.sc_guild_list_request = sc_guild_list_request;
    __reflect(sc_guild_list_request.prototype, "Sproto.sc_guild_list_request");
    function _decode_sc_guild_list_request(d) {
        var o = new sc_guild_list_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.guilds = d.roa("guild_summary");
                    break;
                case 1:
                    o.receiveCount = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_list_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.guilds != undefined) {
            se.woa("guild_summary", self.guilds, 0);
        }
        if (self.receiveCount != undefined) {
            se.wi(self.receiveCount, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_list_request"] = { en: _encode_sc_guild_list_request, de: _decode_sc_guild_list_request };
    var sc_guild_map_one_update_request = (function () {
        function sc_guild_map_one_update_request() {
        }
        return sc_guild_map_one_update_request;
    }());
    Sproto.sc_guild_map_one_update_request = sc_guild_map_one_update_request;
    __reflect(sc_guild_map_one_update_request.prototype, "Sproto.sc_guild_map_one_update_request");
    function _decode_sc_guild_map_one_update_request(d) {
        var o = new sc_guild_map_one_update_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.count = d.ri();
                    break;
                case 2:
                    o.recount = d.ri();
                    break;
                case 3:
                    o.rewardStatus = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_map_one_update_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.count != undefined) {
            se.wi(self.count, 1);
        }
        if (self.recount != undefined) {
            se.wi(self.recount, 2);
        }
        if (self.rewardStatus != undefined) {
            se.wb(self.rewardStatus, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_map_one_update_request"] = { en: _encode_sc_guild_map_one_update_request, de: _decode_sc_guild_map_one_update_request };
    var sc_guild_map_reward_request = (function () {
        function sc_guild_map_reward_request() {
        }
        return sc_guild_map_reward_request;
    }());
    Sproto.sc_guild_map_reward_request = sc_guild_map_reward_request;
    __reflect(sc_guild_map_reward_request.prototype, "Sproto.sc_guild_map_reward_request");
    function _decode_sc_guild_map_reward_request(d) {
        var o = new sc_guild_map_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.reward = d.roa("reward_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_map_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.reward != undefined) {
            se.woa("reward_data", self.reward, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_map_reward_request"] = { en: _encode_sc_guild_map_reward_request, de: _decode_sc_guild_map_reward_request };
    var sc_guild_members_request = (function () {
        function sc_guild_members_request() {
        }
        return sc_guild_members_request;
    }());
    Sproto.sc_guild_members_request = sc_guild_members_request;
    __reflect(sc_guild_members_request.prototype, "Sproto.sc_guild_members_request");
    function _decode_sc_guild_members_request(d) {
        var o = new sc_guild_members_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.members = d.roa("member_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_members_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.members != undefined) {
            se.woa("member_info", self.members, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_members_request"] = { en: _encode_sc_guild_members_request, de: _decode_sc_guild_members_request };
    var sc_guild_notice_apply_request = (function () {
        function sc_guild_notice_apply_request() {
        }
        return sc_guild_notice_apply_request;
    }());
    Sproto.sc_guild_notice_apply_request = sc_guild_notice_apply_request;
    __reflect(sc_guild_notice_apply_request.prototype, "Sproto.sc_guild_notice_apply_request");
    function _decode_sc_guild_notice_apply_request(d) {
        var o = new sc_guild_notice_apply_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.result = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_notice_apply_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.result != undefined) {
            se.wi(self.result, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_notice_apply_request"] = { en: _encode_sc_guild_notice_apply_request, de: _decode_sc_guild_notice_apply_request };
    var sc_guild_peach_info_request = (function () {
        function sc_guild_peach_info_request() {
        }
        return sc_guild_peach_info_request;
    }());
    Sproto.sc_guild_peach_info_request = sc_guild_peach_info_request;
    __reflect(sc_guild_peach_info_request.prototype, "Sproto.sc_guild_peach_info_request");
    function _decode_sc_guild_peach_info_request(d) {
        var o = new sc_guild_peach_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rewardMark = d.ri();
                    break;
                case 2:
                    o.eatStatus = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_peach_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.rewardMark != undefined) {
            se.wi(self.rewardMark, 0);
        }
        if (self.eatStatus != undefined) {
            se.wb(self.eatStatus, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_peach_info_request"] = { en: _encode_sc_guild_peach_info_request, de: _decode_sc_guild_peach_info_request };
    var sc_guild_peach_record_request = (function () {
        function sc_guild_peach_record_request() {
        }
        return sc_guild_peach_record_request;
    }());
    Sproto.sc_guild_peach_record_request = sc_guild_peach_record_request;
    __reflect(sc_guild_peach_record_request.prototype, "Sproto.sc_guild_peach_record_request");
    function _decode_sc_guild_peach_record_request(d) {
        var o = new sc_guild_peach_record_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.peachExp = d.ri();
                    break;
                case 1:
                    o.eatRecord = d.roa("peach_record");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_peach_record_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.peachExp != undefined) {
            se.wi(self.peachExp, 0);
        }
        if (self.eatRecord != undefined) {
            se.woa("peach_record", self.eatRecord, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_peach_record_request"] = { en: _encode_sc_guild_peach_record_request, de: _decode_sc_guild_peach_record_request };
    var sc_guild_peach_record_add_request = (function () {
        function sc_guild_peach_record_add_request() {
        }
        return sc_guild_peach_record_add_request;
    }());
    Sproto.sc_guild_peach_record_add_request = sc_guild_peach_record_add_request;
    __reflect(sc_guild_peach_record_add_request.prototype, "Sproto.sc_guild_peach_record_add_request");
    function _decode_sc_guild_peach_record_add_request(d) {
        var o = new sc_guild_peach_record_add_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.peachExp = d.ri();
                    break;
                case 1:
                    o.eatRecord = d.ro("peach_record");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_peach_record_add_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.peachExp != undefined) {
            se.wi(self.peachExp, 0);
        }
        if (self.eatRecord != undefined) {
            se.wo("peach_record", self.eatRecord, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_peach_record_add_request"] = { en: _encode_sc_guild_peach_record_add_request, de: _decode_sc_guild_peach_record_add_request };
    var sc_guild_playerinfo_request = (function () {
        function sc_guild_playerinfo_request() {
        }
        return sc_guild_playerinfo_request;
    }());
    Sproto.sc_guild_playerinfo_request = sc_guild_playerinfo_request;
    __reflect(sc_guild_playerinfo_request.prototype, "Sproto.sc_guild_playerinfo_request");
    function _decode_sc_guild_playerinfo_request(d) {
        var o = new sc_guild_playerinfo_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.contribute = d.ri();
                    break;
                case 1:
                    o.curcontribute = d.ri();
                    break;
                case 2:
                    o.office = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_playerinfo_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.contribute != undefined) {
            se.wi(self.contribute, 0);
        }
        if (self.curcontribute != undefined) {
            se.wi(self.curcontribute, 1);
        }
        if (self.office != undefined) {
            se.wi(self.office, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_playerinfo_request"] = { en: _encode_sc_guild_playerinfo_request, de: _decode_sc_guild_playerinfo_request };
    var sc_guild_protector_info_request = (function () {
        function sc_guild_protector_info_request() {
        }
        return sc_guild_protector_info_request;
    }());
    Sproto.sc_guild_protector_info_request = sc_guild_protector_info_request;
    __reflect(sc_guild_protector_info_request.prototype, "Sproto.sc_guild_protector_info_request");
    function _decode_sc_guild_protector_info_request(d) {
        var o = new sc_guild_protector_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.todayActive = d.ri();
                    break;
                case 1:
                    o.totalActive = d.ri();
                    break;
                case 2:
                    o.protectorLv = d.ri();
                    break;
                case 3:
                    o.rewardMark = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_protector_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.todayActive != undefined) {
            se.wi(self.todayActive, 0);
        }
        if (self.totalActive != undefined) {
            se.wi(self.totalActive, 1);
        }
        if (self.protectorLv != undefined) {
            se.wi(self.protectorLv, 2);
        }
        if (self.rewardMark != undefined) {
            se.wi(self.rewardMark, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_protector_info_request"] = { en: _encode_sc_guild_protector_info_request, de: _decode_sc_guild_protector_info_request };
    var sc_guild_protector_task_info_request = (function () {
        function sc_guild_protector_task_info_request() {
        }
        return sc_guild_protector_task_info_request;
    }());
    Sproto.sc_guild_protector_task_info_request = sc_guild_protector_task_info_request;
    __reflect(sc_guild_protector_task_info_request.prototype, "Sproto.sc_guild_protector_task_info_request");
    function _decode_sc_guild_protector_task_info_request(d) {
        var o = new sc_guild_protector_task_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.taskinfos = d.roa("protector_task_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_protector_task_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.taskinfos != undefined) {
            se.woa("protector_task_info", self.taskinfos, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_protector_task_info_request"] = { en: _encode_sc_guild_protector_task_info_request, de: _decode_sc_guild_protector_task_info_request };
    var sc_guild_record_add_request = (function () {
        function sc_guild_record_add_request() {
        }
        return sc_guild_record_add_request;
    }());
    Sproto.sc_guild_record_add_request = sc_guild_record_add_request;
    __reflect(sc_guild_record_add_request.prototype, "Sproto.sc_guild_record_add_request");
    function _decode_sc_guild_record_add_request(d) {
        var o = new sc_guild_record_add_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.record = d.ro("guild_record");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_record_add_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.record != undefined) {
            se.wo("guild_record", self.record, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_record_add_request"] = { en: _encode_sc_guild_record_add_request, de: _decode_sc_guild_record_add_request };
    var sc_guild_record_data_request = (function () {
        function sc_guild_record_data_request() {
        }
        return sc_guild_record_data_request;
    }());
    Sproto.sc_guild_record_data_request = sc_guild_record_data_request;
    __reflect(sc_guild_record_data_request.prototype, "Sproto.sc_guild_record_data_request");
    function _decode_sc_guild_record_data_request(d) {
        var o = new sc_guild_record_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.records = d.roa("guild_record");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_record_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.records != undefined) {
            se.woa("guild_record", self.records, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_record_data_request"] = { en: _encode_sc_guild_record_data_request, de: _decode_sc_guild_record_data_request };
    var sc_guild_rename_request = (function () {
        function sc_guild_rename_request() {
        }
        return sc_guild_rename_request;
    }());
    Sproto.sc_guild_rename_request = sc_guild_rename_request;
    __reflect(sc_guild_rename_request.prototype, "Sproto.sc_guild_rename_request");
    function _decode_sc_guild_rename_request(d) {
        var o = new sc_guild_rename_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_rename_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.count != undefined) {
            se.wi(self.count, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_rename_request"] = { en: _encode_sc_guild_rename_request, de: _decode_sc_guild_rename_request };
    var sc_guild_rename_ret_request = (function () {
        function sc_guild_rename_ret_request() {
        }
        return sc_guild_rename_ret_request;
    }());
    Sproto.sc_guild_rename_ret_request = sc_guild_rename_ret_request;
    __reflect(sc_guild_rename_ret_request.prototype, "Sproto.sc_guild_rename_ret_request");
    function _decode_sc_guild_rename_ret_request(d) {
        var o = new sc_guild_rename_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.newGuildName = d.rs();
                    break;
                case 1:
                    o.errorInfo = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_rename_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.newGuildName != undefined) {
            se.ws(self.newGuildName, 0);
        }
        if (self.errorInfo != undefined) {
            se.ws(self.errorInfo, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_rename_ret_request"] = { en: _encode_sc_guild_rename_ret_request, de: _decode_sc_guild_rename_ret_request };
    var sc_guild_robot_datas_request = (function () {
        function sc_guild_robot_datas_request() {
        }
        return sc_guild_robot_datas_request;
    }());
    Sproto.sc_guild_robot_datas_request = sc_guild_robot_datas_request;
    __reflect(sc_guild_robot_datas_request.prototype, "Sproto.sc_guild_robot_datas_request");
    function _decode_sc_guild_robot_datas_request(d) {
        var o = new sc_guild_robot_datas_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.robotlist = d.roa("guild_map_shows");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_robot_datas_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.robotlist != undefined) {
            se.woa("guild_map_shows", self.robotlist, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_robot_datas_request"] = { en: _encode_sc_guild_robot_datas_request, de: _decode_sc_guild_robot_datas_request };
    var sc_guild_skill_info_request = (function () {
        function sc_guild_skill_info_request() {
        }
        return sc_guild_skill_info_request;
    }());
    Sproto.sc_guild_skill_info_request = sc_guild_skill_info_request;
    __reflect(sc_guild_skill_info_request.prototype, "Sproto.sc_guild_skill_info_request");
    function _decode_sc_guild_skill_info_request(d) {
        var o = new sc_guild_skill_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.skillInfos = d.roa("skill_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_skill_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.skillInfos != undefined) {
            se.woa("skill_info", self.skillInfos, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_skill_info_request"] = { en: _encode_sc_guild_skill_info_request, de: _decode_sc_guild_skill_info_request };
    var sc_guild_skill_learn_ret_request = (function () {
        function sc_guild_skill_learn_ret_request() {
        }
        return sc_guild_skill_learn_ret_request;
    }());
    Sproto.sc_guild_skill_learn_ret_request = sc_guild_skill_learn_ret_request;
    __reflect(sc_guild_skill_learn_ret_request.prototype, "Sproto.sc_guild_skill_learn_ret_request");
    function _decode_sc_guild_skill_learn_ret_request(d) {
        var o = new sc_guild_skill_learn_ret_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.skillInfo = d.ro("skill_info");
                    break;
                case 1:
                    o.learnPos = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guild_skill_learn_ret_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.skillInfo != undefined) {
            se.wo("skill_info", self.skillInfo, 0);
        }
        if (self.learnPos != undefined) {
            se.wi(self.learnPos, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guild_skill_learn_ret_request"] = { en: _encode_sc_guild_skill_learn_ret_request, de: _decode_sc_guild_skill_learn_ret_request };
    var skill_info = (function () {
        function skill_info() {
        }
        return skill_info;
    }());
    Sproto.skill_info = skill_info;
    __reflect(skill_info.prototype, "Sproto.skill_info");
    function _decode_skill_info(d) {
        var o = new skill_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.posId = d.ri();
                    break;
                case 1:
                    o.level = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_skill_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.posId != undefined) {
            se.wi(self.posId, 0);
        }
        if (self.level != undefined) {
            se.wi(self.level, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["skill_info"] = { en: _encode_skill_info, de: _decode_skill_info };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=guild_s2c.js.map