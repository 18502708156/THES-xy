// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var guard_info = (function () {
        function guard_info() {
        }
        return guard_info;
    }());
    Sproto.guard_info = guard_info;
    __reflect(guard_info.prototype, "Sproto.guard_info");
    function _decode_guard_info(d) {
        var o = new guard_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.name = d.rs();
                    break;
                case 1:
                    o.level = d.ri();
                    break;
                case 2:
                    o.power = d.ri();
                    break;
                case 3:
                    o.hp = d.ri();
                    break;
                case 4:
                    o.job = d.ri();
                    break;
                case 5:
                    o.sex = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_guard_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 6);
        if (self.name != undefined) {
            se.ws(self.name, 0);
        }
        if (self.level != undefined) {
            se.wi(self.level, 1);
        }
        if (self.power != undefined) {
            se.wi(self.power, 2);
        }
        if (self.hp != undefined) {
            se.wi(self.hp, 3);
        }
        if (self.job != undefined) {
            se.wi(self.job, 4);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 5);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["guard_info"] = { en: _encode_guard_info, de: _decode_guard_info };
    var mine_info = (function () {
        function mine_info() {
        }
        return mine_info;
    }());
    Sproto.mine_info = mine_info;
    __reflect(mine_info.prototype, "Sproto.mine_info");
    function _decode_mine_info(d) {
        var o = new mine_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.status = d.ri();
                    break;
                case 1:
                    o.guard = d.roa("guard_info");
                    break;
                case 2:
                    o.mineId = d.ri();
                    break;
                case 3:
                    o.guildName = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_mine_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.status != undefined) {
            se.wi(self.status, 0);
        }
        if (self.guard != undefined) {
            se.woa("guard_info", self.guard, 1);
        }
        if (self.mineId != undefined) {
            se.wi(self.mineId, 2);
        }
        if (self.guildName != undefined) {
            se.ws(self.guildName, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["mine_info"] = { en: _encode_mine_info, de: _decode_mine_info };
    var sc_guildmine_mine_info_request = (function () {
        function sc_guildmine_mine_info_request() {
        }
        return sc_guildmine_mine_info_request;
    }());
    Sproto.sc_guildmine_mine_info_request = sc_guildmine_mine_info_request;
    __reflect(sc_guildmine_mine_info_request.prototype, "Sproto.sc_guildmine_mine_info_request");
    function _decode_sc_guildmine_mine_info_request(d) {
        var o = new sc_guildmine_mine_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.mineinfos = d.roa("mine_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guildmine_mine_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.mineinfos != undefined) {
            se.woa("mine_info", self.mineinfos, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guildmine_mine_info_request"] = { en: _encode_sc_guildmine_mine_info_request, de: _decode_sc_guildmine_mine_info_request };
    var sc_guildmine_mine_mystatus_request = (function () {
        function sc_guildmine_mine_mystatus_request() {
        }
        return sc_guildmine_mine_mystatus_request;
    }());
    Sproto.sc_guildmine_mine_mystatus_request = sc_guildmine_mine_mystatus_request;
    __reflect(sc_guildmine_mine_mystatus_request.prototype, "Sproto.sc_guildmine_mine_mystatus_request");
    function _decode_sc_guildmine_mine_mystatus_request(d) {
        var o = new sc_guildmine_mine_mystatus_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.status = d.ri();
                    break;
                case 1:
                    o.mineId = d.ri();
                    break;
                case 2:
                    o.gatherTime = d.ri();
                    break;
                case 3:
                    o.chainrate = d.ri();
                    break;
                case 4:
                    o.attackTime = d.ri();
                    break;
                case 5:
                    o.guildRank = d.ri();
                    break;
                case 6:
                    o.guildScore = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guildmine_mine_mystatus_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 7);
        if (self.status != undefined) {
            se.wi(self.status, 0);
        }
        if (self.mineId != undefined) {
            se.wi(self.mineId, 1);
        }
        if (self.gatherTime != undefined) {
            se.wi(self.gatherTime, 2);
        }
        if (self.chainrate != undefined) {
            se.wi(self.chainrate, 3);
        }
        if (self.attackTime != undefined) {
            se.wi(self.attackTime, 4);
        }
        if (self.guildRank != undefined) {
            se.wi(self.guildRank, 5);
        }
        if (self.guildScore != undefined) {
            se.wi(self.guildScore, 6);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guildmine_mine_mystatus_request"] = { en: _encode_sc_guildmine_mine_mystatus_request, de: _decode_sc_guildmine_mine_mystatus_request };
    var sc_guildmine_mine_one_info_request = (function () {
        function sc_guildmine_mine_one_info_request() {
        }
        return sc_guildmine_mine_one_info_request;
    }());
    Sproto.sc_guildmine_mine_one_info_request = sc_guildmine_mine_one_info_request;
    __reflect(sc_guildmine_mine_one_info_request.prototype, "Sproto.sc_guildmine_mine_one_info_request");
    function _decode_sc_guildmine_mine_one_info_request(d) {
        var o = new sc_guildmine_mine_one_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.mineinfo = d.ro("mine_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guildmine_mine_one_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.mineinfo != undefined) {
            se.wo("mine_info", self.mineinfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guildmine_mine_one_info_request"] = { en: _encode_sc_guildmine_mine_one_info_request, de: _decode_sc_guildmine_mine_one_info_request };
    var sc_guildmine_rob_info_request = (function () {
        function sc_guildmine_rob_info_request() {
        }
        return sc_guildmine_rob_info_request;
    }());
    Sproto.sc_guildmine_rob_info_request = sc_guildmine_rob_info_request;
    __reflect(sc_guildmine_rob_info_request.prototype, "Sproto.sc_guildmine_rob_info_request");
    function _decode_sc_guildmine_rob_info_request(d) {
        var o = new sc_guildmine_rob_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.name = d.rs();
                    break;
                case 1:
                    o.level = d.ri();
                    break;
                case 2:
                    o.serverId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guildmine_rob_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.name != undefined) {
            se.ws(self.name, 0);
        }
        if (self.level != undefined) {
            se.wi(self.level, 1);
        }
        if (self.serverId != undefined) {
            se.wi(self.serverId, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guildmine_rob_info_request"] = { en: _encode_sc_guildmine_rob_info_request, de: _decode_sc_guildmine_rob_info_request };
    var sc_guildmine_score_rank_day_request = (function () {
        function sc_guildmine_score_rank_day_request() {
        }
        return sc_guildmine_score_rank_day_request;
    }());
    Sproto.sc_guildmine_score_rank_day_request = sc_guildmine_score_rank_day_request;
    __reflect(sc_guildmine_score_rank_day_request.prototype, "Sproto.sc_guildmine_score_rank_day_request");
    function _decode_sc_guildmine_score_rank_day_request(d) {
        var o = new sc_guildmine_score_rank_day_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rankType = d.ri();
                    break;
                case 1:
                    o.rankdatas = d.roa("score_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_guildmine_score_rank_day_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.rankType != undefined) {
            se.wi(self.rankType, 0);
        }
        if (self.rankdatas != undefined) {
            se.woa("score_info", self.rankdatas, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_guildmine_score_rank_day_request"] = { en: _encode_sc_guildmine_score_rank_day_request, de: _decode_sc_guildmine_score_rank_day_request };
    var score_info = (function () {
        function score_info() {
        }
        return score_info;
    }());
    Sproto.score_info = score_info;
    __reflect(score_info.prototype, "Sproto.score_info");
    function _decode_score_info(d) {
        var o = new score_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.guildId = d.ri();
                    break;
                case 1:
                    o.guildName = d.rs();
                    break;
                case 2:
                    o.score = d.ri();
                    break;
                case 3:
                    o.rank = d.ri();
                    break;
                case 4:
                    o.serverId = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_score_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.guildId != undefined) {
            se.wi(self.guildId, 0);
        }
        if (self.guildName != undefined) {
            se.ws(self.guildName, 1);
        }
        if (self.score != undefined) {
            se.wi(self.score, 2);
        }
        if (self.rank != undefined) {
            se.wi(self.rank, 3);
        }
        if (self.serverId != undefined) {
            se.wi(self.serverId, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["score_info"] = { en: _encode_score_info, de: _decode_score_info };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=guildmine_s2c.js.map