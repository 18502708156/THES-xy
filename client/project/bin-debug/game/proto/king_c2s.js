// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_king_city_attack_request = (function () {
        function cs_king_city_attack_request() {
        }
        return cs_king_city_attack_request;
    }());
    Sproto.cs_king_city_attack_request = cs_king_city_attack_request;
    __reflect(cs_king_city_attack_request.prototype, "Sproto.cs_king_city_attack_request");
    function _decode_cs_king_city_attack_request(d) {
        var o = new cs_king_city_attack_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_city_attack_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_city_attack_request"] = { en: _encode_cs_king_city_attack_request, de: _decode_cs_king_city_attack_request };
    var cs_king_city_data_request = (function () {
        function cs_king_city_data_request() {
        }
        return cs_king_city_data_request;
    }());
    Sproto.cs_king_city_data_request = cs_king_city_data_request;
    __reflect(cs_king_city_data_request.prototype, "Sproto.cs_king_city_data_request");
    function _decode_cs_king_city_data_request(d) {
        var o = new cs_king_city_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_city_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_city_data_request"] = { en: _encode_cs_king_city_data_request, de: _decode_cs_king_city_data_request };
    var cs_king_city_guard_request = (function () {
        function cs_king_city_guard_request() {
        }
        return cs_king_city_guard_request;
    }());
    Sproto.cs_king_city_guard_request = cs_king_city_guard_request;
    __reflect(cs_king_city_guard_request.prototype, "Sproto.cs_king_city_guard_request");
    function _decode_cs_king_city_guard_request(d) {
        var o = new cs_king_city_guard_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_city_guard_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_city_guard_request"] = { en: _encode_cs_king_city_guard_request, de: _decode_cs_king_city_guard_request };
    var cs_king_get_point_reward_request = (function () {
        function cs_king_get_point_reward_request() {
        }
        return cs_king_get_point_reward_request;
    }());
    Sproto.cs_king_get_point_reward_request = cs_king_get_point_reward_request;
    __reflect(cs_king_get_point_reward_request.prototype, "Sproto.cs_king_get_point_reward_request");
    function _decode_cs_king_get_point_reward_request(d) {
        var o = new cs_king_get_point_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.pointtype = d.ri();
                    break;
                case 1:
                    o.index = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_get_point_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.pointtype != undefined) {
            se.wi(self.pointtype, 0);
        }
        if (self.index != undefined) {
            se.wi(self.index, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_get_point_reward_request"] = { en: _encode_cs_king_get_point_reward_request, de: _decode_cs_king_get_point_reward_request };
    var cs_king_join_request = (function () {
        function cs_king_join_request() {
        }
        return cs_king_join_request;
    }());
    Sproto.cs_king_join_request = cs_king_join_request;
    __reflect(cs_king_join_request.prototype, "Sproto.cs_king_join_request");
    function _decode_cs_king_join_request(d) {
        var o = new cs_king_join_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_join_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_join_request"] = { en: _encode_cs_king_join_request, de: _decode_cs_king_join_request };
    var cs_king_join_response = (function () {
        function cs_king_join_response() {
        }
        return cs_king_join_response;
    }());
    Sproto.cs_king_join_response = cs_king_join_response;
    __reflect(cs_king_join_response.prototype, "Sproto.cs_king_join_response");
    function _decode_cs_king_join_response(d) {
        var o = new cs_king_join_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_join_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_join_response"] = { en: _encode_cs_king_join_response, de: _decode_cs_king_join_response };
    var cs_king_leave_request = (function () {
        function cs_king_leave_request() {
        }
        return cs_king_leave_request;
    }());
    Sproto.cs_king_leave_request = cs_king_leave_request;
    __reflect(cs_king_leave_request.prototype, "Sproto.cs_king_leave_request");
    function _decode_cs_king_leave_request(d) {
        var o = new cs_king_leave_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_leave_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_leave_request"] = { en: _encode_cs_king_leave_request, de: _decode_cs_king_leave_request };
    var cs_king_my_guard_city_request = (function () {
        function cs_king_my_guard_city_request() {
        }
        return cs_king_my_guard_city_request;
    }());
    Sproto.cs_king_my_guard_city_request = cs_king_my_guard_city_request;
    __reflect(cs_king_my_guard_city_request.prototype, "Sproto.cs_king_my_guard_city_request");
    function _decode_cs_king_my_guard_city_request(d) {
        var o = new cs_king_my_guard_city_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_my_guard_city_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_my_guard_city_request"] = { en: _encode_cs_king_my_guard_city_request, de: _decode_cs_king_my_guard_city_request };
    var cs_king_pay_revive_request = (function () {
        function cs_king_pay_revive_request() {
        }
        return cs_king_pay_revive_request;
    }());
    Sproto.cs_king_pay_revive_request = cs_king_pay_revive_request;
    __reflect(cs_king_pay_revive_request.prototype, "Sproto.cs_king_pay_revive_request");
    function _decode_cs_king_pay_revive_request(d) {
        var o = new cs_king_pay_revive_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_pay_revive_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_pay_revive_request"] = { en: _encode_cs_king_pay_revive_request, de: _decode_cs_king_pay_revive_request };
    var cs_king_pk_request = (function () {
        function cs_king_pk_request() {
        }
        return cs_king_pk_request;
    }());
    Sproto.cs_king_pk_request = cs_king_pk_request;
    __reflect(cs_king_pk_request.prototype, "Sproto.cs_king_pk_request");
    function _decode_cs_king_pk_request(d) {
        var o = new cs_king_pk_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.targetid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_pk_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.targetid != undefined) {
            se.wi(self.targetid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_pk_request"] = { en: _encode_cs_king_pk_request, de: _decode_cs_king_pk_request };
    var cs_king_point_data_request = (function () {
        function cs_king_point_data_request() {
        }
        return cs_king_point_data_request;
    }());
    Sproto.cs_king_point_data_request = cs_king_point_data_request;
    __reflect(cs_king_point_data_request.prototype, "Sproto.cs_king_point_data_request");
    function _decode_cs_king_point_data_request(d) {
        var o = new cs_king_point_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_point_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_point_data_request"] = { en: _encode_cs_king_point_data_request, de: _decode_cs_king_point_data_request };
    var cs_king_team_recruit_request = (function () {
        function cs_king_team_recruit_request() {
        }
        return cs_king_team_recruit_request;
    }());
    Sproto.cs_king_team_recruit_request = cs_king_team_recruit_request;
    __reflect(cs_king_team_recruit_request.prototype, "Sproto.cs_king_team_recruit_request");
    function _decode_cs_king_team_recruit_request(d) {
        var o = new cs_king_team_recruit_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_team_recruit_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_team_recruit_request"] = { en: _encode_cs_king_team_recruit_request, de: _decode_cs_king_team_recruit_request };
    var cs_king_transform_request = (function () {
        function cs_king_transform_request() {
        }
        return cs_king_transform_request;
    }());
    Sproto.cs_king_transform_request = cs_king_transform_request;
    __reflect(cs_king_transform_request.prototype, "Sproto.cs_king_transform_request");
    function _decode_cs_king_transform_request(d) {
        var o = new cs_king_transform_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_king_transform_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_king_transform_request"] = { en: _encode_cs_king_transform_request, de: _decode_cs_king_transform_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=king_c2s.js.map