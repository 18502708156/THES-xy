// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var king_camp_point = (function () {
        function king_camp_point() {
        }
        return king_camp_point;
    }());
    Sproto.king_camp_point = king_camp_point;
    __reflect(king_camp_point.prototype, "Sproto.king_camp_point");
    function _decode_king_camp_point(d) {
        var o = new king_camp_point;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 1:
                    o.camp = d.ri();
                    break;
                case 2:
                    o.point = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_camp_point(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.camp != undefined) {
            se.wi(self.camp, 1);
        }
        if (self.point != undefined) {
            se.wi(self.point, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_camp_point"] = { en: _encode_king_camp_point, de: _decode_king_camp_point };
    var king_city_info = (function () {
        function king_city_info() {
        }
        return king_city_info;
    }());
    Sproto.king_city_info = king_city_info;
    __reflect(king_city_info.prototype, "Sproto.king_city_info");
    function _decode_king_city_info(d) {
        var o = new king_city_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                case 1:
                    o.currcamp = d.ri();
                    break;
                case 2:
                    o.currhp = d.ri();
                    break;
                case 3:
                    o.maxhp = d.ri();
                    break;
                case 4:
                    o.guards = d.roa("king_guard_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_city_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        if (self.currcamp != undefined) {
            se.wi(self.currcamp, 1);
        }
        if (self.currhp != undefined) {
            se.wi(self.currhp, 2);
        }
        if (self.maxhp != undefined) {
            se.wi(self.maxhp, 3);
        }
        if (self.guards != undefined) {
            se.woa("king_guard_info", self.guards, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_city_info"] = { en: _encode_king_city_info, de: _decode_king_city_info };
    var king_guard_info = (function () {
        function king_guard_info() {
        }
        return king_guard_info;
    }());
    Sproto.king_guard_info = king_guard_info;
    __reflect(king_guard_info.prototype, "Sproto.king_guard_info");
    function _decode_king_guard_info(d) {
        var o = new king_guard_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dbid = d.ri();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                case 2:
                    o.level = d.ri();
                    break;
                case 3:
                    o.job = d.ri();
                    break;
                case 4:
                    o.sex = d.ri();
                    break;
                case 5:
                    o.power = d.ri();
                    break;
                case 6:
                    o.isdead = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_guard_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 7);
        if (self.dbid != undefined) {
            se.wi(self.dbid, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        if (self.level != undefined) {
            se.wi(self.level, 2);
        }
        if (self.job != undefined) {
            se.wi(self.job, 3);
        }
        if (self.sex != undefined) {
            se.wi(self.sex, 4);
        }
        if (self.power != undefined) {
            se.wi(self.power, 5);
        }
        if (self.isdead != undefined) {
            se.wb(self.isdead, 6);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_guard_info"] = { en: _encode_king_guard_info, de: _decode_king_guard_info };
    var king_guard_record = (function () {
        function king_guard_record() {
        }
        return king_guard_record;
    }());
    Sproto.king_guard_record = king_guard_record;
    __reflect(king_guard_record.prototype, "Sproto.king_guard_record");
    function _decode_king_guard_record(d) {
        var o = new king_guard_record;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                case 1:
                    o.changhp = d.ri();
                    break;
                case 2:
                    o.names = d.rsa();
                    break;
                case 3:
                    o.time = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_guard_record(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        if (self.changhp != undefined) {
            se.wi(self.changhp, 1);
        }
        if (self.names != undefined) {
            se.wsa(self.names, 2);
        }
        if (self.time != undefined) {
            se.wi(self.time, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_guard_record"] = { en: _encode_king_guard_record, de: _decode_king_guard_record };
    var king_player_info = (function () {
        function king_player_info() {
        }
        return king_player_info;
    }());
    Sproto.king_player_info = king_player_info;
    __reflect(king_player_info.prototype, "Sproto.king_player_info");
    function _decode_king_player_info(d) {
        var o = new king_player_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dbid = d.ri();
                    break;
                case 1:
                    o.camp = d.ri();
                    break;
                case 2:
                    o.status = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_player_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.dbid != undefined) {
            se.wi(self.dbid, 0);
        }
        if (self.camp != undefined) {
            se.wi(self.camp, 1);
        }
        if (self.status != undefined) {
            se.wi(self.status, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_player_info"] = { en: _encode_king_player_info, de: _decode_king_player_info };
    var king_report_persondetail = (function () {
        function king_report_persondetail() {
        }
        return king_report_persondetail;
    }());
    Sproto.king_report_persondetail = king_report_persondetail;
    __reflect(king_report_persondetail.prototype, "Sproto.king_report_persondetail");
    function _decode_king_report_persondetail(d) {
        var o = new king_report_persondetail;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_report_persondetail(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_report_persondetail"] = { en: _encode_king_report_persondetail, de: _decode_king_report_persondetail };
    var king_report_sharedata = (function () {
        function king_report_sharedata() {
        }
        return king_report_sharedata;
    }());
    Sproto.king_report_sharedata = king_report_sharedata;
    __reflect(king_report_sharedata.prototype, "Sproto.king_report_sharedata");
    function _decode_king_report_sharedata(d) {
        var o = new king_report_sharedata;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rank = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_king_report_sharedata(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rank != undefined) {
            se.wia(self.rank, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["king_report_sharedata"] = { en: _encode_king_report_sharedata, de: _decode_king_report_sharedata };
    var sc_king_attack_result_request = (function () {
        function sc_king_attack_result_request() {
        }
        return sc_king_attack_result_request;
    }());
    Sproto.sc_king_attack_result_request = sc_king_attack_result_request;
    __reflect(sc_king_attack_result_request.prototype, "Sproto.sc_king_attack_result_request");
    function _decode_sc_king_attack_result_request(d) {
        var o = new sc_king_attack_result_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.iswin = d.rb();
                    break;
                case 1:
                    o.commonpoint = d.ri();
                    break;
                case 2:
                    o.camp = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_attack_result_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.iswin != undefined) {
            se.wb(self.iswin, 0);
        }
        if (self.commonpoint != undefined) {
            se.wi(self.commonpoint, 1);
        }
        if (self.camp != undefined) {
            se.wi(self.camp, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_attack_result_request"] = { en: _encode_sc_king_attack_result_request, de: _decode_sc_king_attack_result_request };
    var sc_king_begin_act_request = (function () {
        function sc_king_begin_act_request() {
        }
        return sc_king_begin_act_request;
    }());
    Sproto.sc_king_begin_act_request = sc_king_begin_act_request;
    __reflect(sc_king_begin_act_request.prototype, "Sproto.sc_king_begin_act_request");
    function _decode_sc_king_begin_act_request(d) {
        var o = new sc_king_begin_act_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_begin_act_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_begin_act_request"] = { en: _encode_sc_king_begin_act_request, de: _decode_sc_king_begin_act_request };
    var sc_king_city_data_request = (function () {
        function sc_king_city_data_request() {
        }
        return sc_king_city_data_request;
    }());
    Sproto.sc_king_city_data_request = sc_king_city_data_request;
    __reflect(sc_king_city_data_request.prototype, "Sproto.sc_king_city_data_request");
    function _decode_sc_king_city_data_request(d) {
        var o = new sc_king_city_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                case 1:
                    o.currcamp = d.ri();
                    break;
                case 2:
                    o.currhp = d.ri();
                    break;
                case 3:
                    o.maxhp = d.ri();
                    break;
                case 4:
                    o.guards = d.roa("king_guard_info");
                    break;
                case 5:
                    o.guardtime = d.ri();
                    break;
                case 6:
                    o.point = d.ri();
                    break;
                case 7:
                    o.pointtime = d.ri();
                    break;
                case 8:
                    o.record = d.roa("king_guard_record");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_city_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 9);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        if (self.currcamp != undefined) {
            se.wi(self.currcamp, 1);
        }
        if (self.currhp != undefined) {
            se.wi(self.currhp, 2);
        }
        if (self.maxhp != undefined) {
            se.wi(self.maxhp, 3);
        }
        if (self.guards != undefined) {
            se.woa("king_guard_info", self.guards, 4);
        }
        if (self.guardtime != undefined) {
            se.wi(self.guardtime, 5);
        }
        if (self.point != undefined) {
            se.wi(self.point, 6);
        }
        if (self.pointtime != undefined) {
            se.wi(self.pointtime, 7);
        }
        if (self.record != undefined) {
            se.woa("king_guard_record", self.record, 8);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_city_data_request"] = { en: _encode_sc_king_city_data_request, de: _decode_sc_king_city_data_request };
    var sc_king_city_occupy_request = (function () {
        function sc_king_city_occupy_request() {
        }
        return sc_king_city_occupy_request;
    }());
    Sproto.sc_king_city_occupy_request = sc_king_city_occupy_request;
    __reflect(sc_king_city_occupy_request.prototype, "Sproto.sc_king_city_occupy_request");
    function _decode_sc_king_city_occupy_request(d) {
        var o = new sc_king_city_occupy_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                case 1:
                    o.occupycamp = d.ri();
                    break;
                case 2:
                    o.names = d.rsa();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_city_occupy_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        if (self.occupycamp != undefined) {
            se.wi(self.occupycamp, 1);
        }
        if (self.names != undefined) {
            se.wsa(self.names, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_city_occupy_request"] = { en: _encode_sc_king_city_occupy_request, de: _decode_sc_king_city_occupy_request };
    var sc_king_fighting_change_request = (function () {
        function sc_king_fighting_change_request() {
        }
        return sc_king_fighting_change_request;
    }());
    Sproto.sc_king_fighting_change_request = sc_king_fighting_change_request;
    __reflect(sc_king_fighting_change_request.prototype, "Sproto.sc_king_fighting_change_request");
    function _decode_sc_king_fighting_change_request(d) {
        var o = new sc_king_fighting_change_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.fighting = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_fighting_change_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.fighting != undefined) {
            se.wia(self.fighting, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_fighting_change_request"] = { en: _encode_sc_king_fighting_change_request, de: _decode_sc_king_fighting_change_request };
    var sc_king_info_request = (function () {
        function sc_king_info_request() {
        }
        return sc_king_info_request;
    }());
    Sproto.sc_king_info_request = sc_king_info_request;
    __reflect(sc_king_info_request.prototype, "Sproto.sc_king_info_request");
    function _decode_sc_king_info_request(d) {
        var o = new sc_king_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camp = d.ri();
                    break;
                case 1:
                    o.status = d.ri();
                    break;
                case 2:
                    o.reborncout = d.ri();
                    break;
                case 3:
                    o.citypoint = d.ri();
                    break;
                case 4:
                    o.commonpoint = d.ri();
                    break;
                case 5:
                    o.players = d.roa("king_player_info");
                    break;
                case 6:
                    o.citys = d.roa("king_city_info");
                    break;
                case 7:
                    o.fighting = d.ria();
                    break;
                case 8:
                    o.transform = d.ria();
                    break;
                case 9:
                    o.camppoint = d.roa("king_camp_point");
                    break;
                case 10:
                    o.actcountdown = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 11);
        if (self.camp != undefined) {
            se.wi(self.camp, 0);
        }
        if (self.status != undefined) {
            se.wi(self.status, 1);
        }
        if (self.reborncout != undefined) {
            se.wi(self.reborncout, 2);
        }
        if (self.citypoint != undefined) {
            se.wi(self.citypoint, 3);
        }
        if (self.commonpoint != undefined) {
            se.wi(self.commonpoint, 4);
        }
        if (self.players != undefined) {
            se.woa("king_player_info", self.players, 5);
        }
        if (self.citys != undefined) {
            se.woa("king_city_info", self.citys, 6);
        }
        if (self.fighting != undefined) {
            se.wia(self.fighting, 7);
        }
        if (self.transform != undefined) {
            se.wia(self.transform, 8);
        }
        if (self.camppoint != undefined) {
            se.woa("king_camp_point", self.camppoint, 9);
        }
        if (self.actcountdown != undefined) {
            se.wi(self.actcountdown, 10);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_info_request"] = { en: _encode_sc_king_info_request, de: _decode_sc_king_info_request };
    var sc_king_info_update_request = (function () {
        function sc_king_info_update_request() {
        }
        return sc_king_info_update_request;
    }());
    Sproto.sc_king_info_update_request = sc_king_info_update_request;
    __reflect(sc_king_info_update_request.prototype, "Sproto.sc_king_info_update_request");
    function _decode_sc_king_info_update_request(d) {
        var o = new sc_king_info_update_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.citys = d.ro("king_city_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_info_update_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.citys != undefined) {
            se.wo("king_city_info", self.citys, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_info_update_request"] = { en: _encode_sc_king_info_update_request, de: _decode_sc_king_info_update_request };
    var sc_king_my_guard_city_request = (function () {
        function sc_king_my_guard_city_request() {
        }
        return sc_king_my_guard_city_request;
    }());
    Sproto.sc_king_my_guard_city_request = sc_king_my_guard_city_request;
    __reflect(sc_king_my_guard_city_request.prototype, "Sproto.sc_king_my_guard_city_request");
    function _decode_sc_king_my_guard_city_request(d) {
        var o = new sc_king_my_guard_city_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.city = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_my_guard_city_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.city != undefined) {
            se.wi(self.city, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_my_guard_city_request"] = { en: _encode_sc_king_my_guard_city_request, de: _decode_sc_king_my_guard_city_request };
    var sc_king_pk_result_request = (function () {
        function sc_king_pk_result_request() {
        }
        return sc_king_pk_result_request;
    }());
    Sproto.sc_king_pk_result_request = sc_king_pk_result_request;
    __reflect(sc_king_pk_result_request.prototype, "Sproto.sc_king_pk_result_request");
    function _decode_sc_king_pk_result_request(d) {
        var o = new sc_king_pk_result_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.iswin = d.rb();
                    break;
                case 1:
                    o.commonpoint = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_pk_result_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.iswin != undefined) {
            se.wb(self.iswin, 0);
        }
        if (self.commonpoint != undefined) {
            se.wi(self.commonpoint, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_pk_result_request"] = { en: _encode_sc_king_pk_result_request, de: _decode_sc_king_pk_result_request };
    var sc_king_player_enter_request = (function () {
        function sc_king_player_enter_request() {
        }
        return sc_king_player_enter_request;
    }());
    Sproto.sc_king_player_enter_request = sc_king_player_enter_request;
    __reflect(sc_king_player_enter_request.prototype, "Sproto.sc_king_player_enter_request");
    function _decode_sc_king_player_enter_request(d) {
        var o = new sc_king_player_enter_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.player = d.ro("king_player_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_player_enter_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.player != undefined) {
            se.wo("king_player_info", self.player, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_player_enter_request"] = { en: _encode_sc_king_player_enter_request, de: _decode_sc_king_player_enter_request };
    var sc_king_player_leave_request = (function () {
        function sc_king_player_leave_request() {
        }
        return sc_king_player_leave_request;
    }());
    Sproto.sc_king_player_leave_request = sc_king_player_leave_request;
    __reflect(sc_king_player_leave_request.prototype, "Sproto.sc_king_player_leave_request");
    function _decode_sc_king_player_leave_request(d) {
        var o = new sc_king_player_leave_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dbid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_player_leave_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.dbid != undefined) {
            se.wi(self.dbid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_player_leave_request"] = { en: _encode_sc_king_player_leave_request, de: _decode_sc_king_player_leave_request };
    var sc_king_point_data_request = (function () {
        function sc_king_point_data_request() {
        }
        return sc_king_point_data_request;
    }());
    Sproto.sc_king_point_data_request = sc_king_point_data_request;
    __reflect(sc_king_point_data_request.prototype, "Sproto.sc_king_point_data_request");
    function _decode_sc_king_point_data_request(d) {
        var o = new sc_king_point_data_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.citypoint = d.ri();
                    break;
                case 1:
                    o.commonpoint = d.ri();
                    break;
                case 2:
                    o.cityreward = d.ria();
                    break;
                case 3:
                    o.commonreward = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_point_data_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.citypoint != undefined) {
            se.wi(self.citypoint, 0);
        }
        if (self.commonpoint != undefined) {
            se.wi(self.commonpoint, 1);
        }
        if (self.cityreward != undefined) {
            se.wia(self.cityreward, 2);
        }
        if (self.commonreward != undefined) {
            se.wia(self.commonreward, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_point_data_request"] = { en: _encode_sc_king_point_data_request, de: _decode_sc_king_point_data_request };
    var sc_king_point_info_request = (function () {
        function sc_king_point_info_request() {
        }
        return sc_king_point_info_request;
    }());
    Sproto.sc_king_point_info_request = sc_king_point_info_request;
    __reflect(sc_king_point_info_request.prototype, "Sproto.sc_king_point_info_request");
    function _decode_sc_king_point_info_request(d) {
        var o = new sc_king_point_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.camppoint = d.roa("king_camp_point");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_point_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.camppoint != undefined) {
            se.woa("king_camp_point", self.camppoint, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_point_info_request"] = { en: _encode_sc_king_point_info_request, de: _decode_sc_king_point_info_request };
    var sc_king_reborn_countdown_request = (function () {
        function sc_king_reborn_countdown_request() {
        }
        return sc_king_reborn_countdown_request;
    }());
    Sproto.sc_king_reborn_countdown_request = sc_king_reborn_countdown_request;
    __reflect(sc_king_reborn_countdown_request.prototype, "Sproto.sc_king_reborn_countdown_request");
    function _decode_sc_king_reborn_countdown_request(d) {
        var o = new sc_king_reborn_countdown_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.reborncout = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_reborn_countdown_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.reborncout != undefined) {
            se.wi(self.reborncout, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_reborn_countdown_request"] = { en: _encode_sc_king_reborn_countdown_request, de: _decode_sc_king_reborn_countdown_request };
    var sc_king_report_request = (function () {
        function sc_king_report_request() {
        }
        return sc_king_report_request;
    }());
    Sproto.sc_king_report_request = sc_king_report_request;
    __reflect(sc_king_report_request.prototype, "Sproto.sc_king_report_request");
    function _decode_sc_king_report_request(d) {
        var o = new sc_king_report_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.persondetail = d.ro("king_report_persondetail");
                    break;
                case 1:
                    o.rewards = d.roa("reward_data");
                    break;
                case 2:
                    o.sharedata = d.ro("king_report_sharedata");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_report_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.persondetail != undefined) {
            se.wo("king_report_persondetail", self.persondetail, 0);
        }
        if (self.rewards != undefined) {
            se.woa("reward_data", self.rewards, 1);
        }
        if (self.sharedata != undefined) {
            se.wo("king_report_sharedata", self.sharedata, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_report_request"] = { en: _encode_sc_king_report_request, de: _decode_sc_king_report_request };
    var sc_king_status_change_request = (function () {
        function sc_king_status_change_request() {
        }
        return sc_king_status_change_request;
    }());
    Sproto.sc_king_status_change_request = sc_king_status_change_request;
    __reflect(sc_king_status_change_request.prototype, "Sproto.sc_king_status_change_request");
    function _decode_sc_king_status_change_request(d) {
        var o = new sc_king_status_change_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dbid = d.ri();
                    break;
                case 1:
                    o.status = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_status_change_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.dbid != undefined) {
            se.wi(self.dbid, 0);
        }
        if (self.status != undefined) {
            se.wi(self.status, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_status_change_request"] = { en: _encode_sc_king_status_change_request, de: _decode_sc_king_status_change_request };
    var sc_king_transform_change_request = (function () {
        function sc_king_transform_change_request() {
        }
        return sc_king_transform_change_request;
    }());
    Sproto.sc_king_transform_change_request = sc_king_transform_change_request;
    __reflect(sc_king_transform_change_request.prototype, "Sproto.sc_king_transform_change_request");
    function _decode_sc_king_transform_change_request(d) {
        var o = new sc_king_transform_change_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dbid = d.ri();
                    break;
                case 1:
                    o.istransform = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_transform_change_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.dbid != undefined) {
            se.wi(self.dbid, 0);
        }
        if (self.istransform != undefined) {
            se.wb(self.istransform, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_transform_change_request"] = { en: _encode_sc_king_transform_change_request, de: _decode_sc_king_transform_change_request };
    var sc_king_update_city_request = (function () {
        function sc_king_update_city_request() {
        }
        return sc_king_update_city_request;
    }());
    Sproto.sc_king_update_city_request = sc_king_update_city_request;
    __reflect(sc_king_update_city_request.prototype, "Sproto.sc_king_update_city_request");
    function _decode_sc_king_update_city_request(d) {
        var o = new sc_king_update_city_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.citys = d.roa("king_city_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_king_update_city_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.citys != undefined) {
            se.woa("king_city_info", self.citys, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_king_update_city_request"] = { en: _encode_sc_king_update_city_request, de: _decode_sc_king_update_city_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=king_s2c.js.map