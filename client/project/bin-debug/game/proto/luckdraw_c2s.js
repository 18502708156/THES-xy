// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_luck_draw_get_info_request = (function () {
        function cs_luck_draw_get_info_request() {
        }
        return cs_luck_draw_get_info_request;
    }());
    Sproto.cs_luck_draw_get_info_request = cs_luck_draw_get_info_request;
    __reflect(cs_luck_draw_get_info_request.prototype, "Sproto.cs_luck_draw_get_info_request");
    function _decode_cs_luck_draw_get_info_request(d) {
        var o = new cs_luck_draw_get_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_luck_draw_get_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_luck_draw_get_info_request"] = { en: _encode_cs_luck_draw_get_info_request, de: _decode_cs_luck_draw_get_info_request };
    var cs_luck_draw_get_info_response = (function () {
        function cs_luck_draw_get_info_response() {
        }
        return cs_luck_draw_get_info_response;
    }());
    Sproto.cs_luck_draw_get_info_response = cs_luck_draw_get_info_response;
    __reflect(cs_luck_draw_get_info_response.prototype, "Sproto.cs_luck_draw_get_info_response");
    function _decode_cs_luck_draw_get_info_response(d) {
        var o = new cs_luck_draw_get_info_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.data = d.roa("luck_draw_tianshen");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_luck_draw_get_info_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.data != undefined) {
            se.woa("luck_draw_tianshen", self.data, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_luck_draw_get_info_response"] = { en: _encode_cs_luck_draw_get_info_response, de: _decode_cs_luck_draw_get_info_response };
    var cs_luck_draw_tianshen_request = (function () {
        function cs_luck_draw_tianshen_request() {
        }
        return cs_luck_draw_tianshen_request;
    }());
    Sproto.cs_luck_draw_tianshen_request = cs_luck_draw_tianshen_request;
    __reflect(cs_luck_draw_tianshen_request.prototype, "Sproto.cs_luck_draw_tianshen_request");
    function _decode_cs_luck_draw_tianshen_request(d) {
        var o = new cs_luck_draw_tianshen_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.typ = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_luck_draw_tianshen_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.typ != undefined) {
            se.wi(self.typ, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_luck_draw_tianshen_request"] = { en: _encode_cs_luck_draw_tianshen_request, de: _decode_cs_luck_draw_tianshen_request };
    var cs_luck_draw_tianshen_response = (function () {
        function cs_luck_draw_tianshen_response() {
        }
        return cs_luck_draw_tianshen_response;
    }());
    Sproto.cs_luck_draw_tianshen_response = cs_luck_draw_tianshen_response;
    __reflect(cs_luck_draw_tianshen_response.prototype, "Sproto.cs_luck_draw_tianshen_response");
    function _decode_cs_luck_draw_tianshen_response(d) {
        var o = new cs_luck_draw_tianshen_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.no = d.ri();
                    break;
                case 2:
                    o.data = d.roa("luck_draw_tianshen");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_luck_draw_tianshen_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.no != undefined) {
            se.wi(self.no, 1);
        }
        if (self.data != undefined) {
            se.woa("luck_draw_tianshen", self.data, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_luck_draw_tianshen_response"] = { en: _encode_cs_luck_draw_tianshen_response, de: _decode_cs_luck_draw_tianshen_response };
    var luck_draw_tianshen = (function () {
        function luck_draw_tianshen() {
        }
        return luck_draw_tianshen;
    }());
    Sproto.luck_draw_tianshen = luck_draw_tianshen;
    __reflect(luck_draw_tianshen.prototype, "Sproto.luck_draw_tianshen");
    function _decode_luck_draw_tianshen(d) {
        var o = new luck_draw_tianshen;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.name = d.rs();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_luck_draw_tianshen(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.name != undefined) {
            se.ws(self.name, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["luck_draw_tianshen"] = { en: _encode_luck_draw_tianshen, de: _decode_luck_draw_tianshen };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=luckdraw_c2s.js.map