// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var mail_data = (function () {
        function mail_data() {
        }
        return mail_data;
    }());
    Sproto.mail_data = mail_data;
    __reflect(mail_data.prototype, "Sproto.mail_data");
    function _decode_mail_data(d) {
        var o = new mail_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.handle = d.ri();
                    break;
                case 1:
                    o.title = d.rs();
                    break;
                case 2:
                    o.times = d.ri();
                    break;
                case 3:
                    o.type = d.ri();
                    break;
                case 4:
                    o.receive = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_mail_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.handle != undefined) {
            se.wi(self.handle, 0);
        }
        if (self.title != undefined) {
            se.ws(self.title, 1);
        }
        if (self.times != undefined) {
            se.wi(self.times, 2);
        }
        if (self.type != undefined) {
            se.wi(self.type, 3);
        }
        if (self.receive != undefined) {
            se.wi(self.receive, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["mail_data"] = { en: _encode_mail_data, de: _decode_mail_data };
    var mail_update_data = (function () {
        function mail_update_data() {
        }
        return mail_update_data;
    }());
    Sproto.mail_update_data = mail_update_data;
    __reflect(mail_update_data.prototype, "Sproto.mail_update_data");
    function _decode_mail_update_data(d) {
        var o = new mail_update_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.handle = d.ri();
                    break;
                case 1:
                    o.type = d.ri();
                    break;
                case 2:
                    o.receive = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_mail_update_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.handle != undefined) {
            se.wi(self.handle, 0);
        }
        if (self.type != undefined) {
            se.wi(self.type, 1);
        }
        if (self.receive != undefined) {
            se.wi(self.receive, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["mail_update_data"] = { en: _encode_mail_update_data, de: _decode_mail_update_data };
    var sc_mail_add_info_request = (function () {
        function sc_mail_add_info_request() {
        }
        return sc_mail_add_info_request;
    }());
    Sproto.sc_mail_add_info_request = sc_mail_add_info_request;
    __reflect(sc_mail_add_info_request.prototype, "Sproto.sc_mail_add_info_request");
    function _decode_sc_mail_add_info_request(d) {
        var o = new sc_mail_add_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.mailData = d.ro("mail_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_mail_add_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.mailData != undefined) {
            se.wo("mail_data", self.mailData, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_mail_add_info_request"] = { en: _encode_sc_mail_add_info_request, de: _decode_sc_mail_add_info_request };
    var sc_mail_delete_request = (function () {
        function sc_mail_delete_request() {
        }
        return sc_mail_delete_request;
    }());
    Sproto.sc_mail_delete_request = sc_mail_delete_request;
    __reflect(sc_mail_delete_request.prototype, "Sproto.sc_mail_delete_request");
    function _decode_sc_mail_delete_request(d) {
        var o = new sc_mail_delete_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.handle = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_mail_delete_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.handle != undefined) {
            se.wi(self.handle, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_mail_delete_request"] = { en: _encode_sc_mail_delete_request, de: _decode_sc_mail_delete_request };
    var sc_mail_detailed_info_request = (function () {
        function sc_mail_detailed_info_request() {
        }
        return sc_mail_detailed_info_request;
    }());
    Sproto.sc_mail_detailed_info_request = sc_mail_detailed_info_request;
    __reflect(sc_mail_detailed_info_request.prototype, "Sproto.sc_mail_detailed_info_request");
    function _decode_sc_mail_detailed_info_request(d) {
        var o = new sc_mail_detailed_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.mailData = d.ro("mail_data");
                    break;
                case 1:
                    o.text = d.rs();
                    break;
                case 2:
                    o.rewardData = d.roa("reward_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_mail_detailed_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.mailData != undefined) {
            se.wo("mail_data", self.mailData, 0);
        }
        if (self.text != undefined) {
            se.ws(self.text, 1);
        }
        if (self.rewardData != undefined) {
            se.woa("reward_data", self.rewardData, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_mail_detailed_info_request"] = { en: _encode_sc_mail_detailed_info_request, de: _decode_sc_mail_detailed_info_request };
    var sc_mail_init_info_request = (function () {
        function sc_mail_init_info_request() {
        }
        return sc_mail_init_info_request;
    }());
    Sproto.sc_mail_init_info_request = sc_mail_init_info_request;
    __reflect(sc_mail_init_info_request.prototype, "Sproto.sc_mail_init_info_request");
    function _decode_sc_mail_init_info_request(d) {
        var o = new sc_mail_init_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.mailData = d.roa("mail_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_mail_init_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.mailData != undefined) {
            se.woa("mail_data", self.mailData, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_mail_init_info_request"] = { en: _encode_sc_mail_init_info_request, de: _decode_sc_mail_init_info_request };
    var sc_mail_update_info_request = (function () {
        function sc_mail_update_info_request() {
        }
        return sc_mail_update_info_request;
    }());
    Sproto.sc_mail_update_info_request = sc_mail_update_info_request;
    __reflect(sc_mail_update_info_request.prototype, "Sproto.sc_mail_update_info_request");
    function _decode_sc_mail_update_info_request(d) {
        var o = new sc_mail_update_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.updateData = d.roa("mail_update_data");
                    break;
                case 1:
                    o.showWarnBagSpace = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_mail_update_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.updateData != undefined) {
            se.woa("mail_update_data", self.updateData, 0);
        }
        if (self.showWarnBagSpace != undefined) {
            se.wb(self.showWarnBagSpace, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_mail_update_info_request"] = { en: _encode_sc_mail_update_info_request, de: _decode_sc_mail_update_info_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=mail_s2c.js.map