// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_pet_active_request = (function () {
        function cs_pet_active_request() {
        }
        return cs_pet_active_request;
    }());
    Sproto.cs_pet_active_request = cs_pet_active_request;
    __reflect(cs_pet_active_request.prototype, "Sproto.cs_pet_active_request");
    function _decode_cs_pet_active_request(d) {
        var o = new cs_pet_active_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_active_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_active_request"] = { en: _encode_cs_pet_active_request, de: _decode_cs_pet_active_request };
    var cs_pet_active_response = (function () {
        function cs_pet_active_response() {
        }
        return cs_pet_active_response;
    }());
    Sproto.cs_pet_active_response = cs_pet_active_response;
    __reflect(cs_pet_active_response.prototype, "Sproto.cs_pet_active_response");
    function _decode_cs_pet_active_response(d) {
        var o = new cs_pet_active_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_active_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_active_response"] = { en: _encode_cs_pet_active_response, de: _decode_cs_pet_active_response };
    var cs_pet_addexp_request = (function () {
        function cs_pet_addexp_request() {
        }
        return cs_pet_addexp_request;
    }());
    Sproto.cs_pet_addexp_request = cs_pet_addexp_request;
    __reflect(cs_pet_addexp_request.prototype, "Sproto.cs_pet_addexp_request");
    function _decode_cs_pet_addexp_request(d) {
        var o = new cs_pet_addexp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.autoBuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_addexp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.autoBuy != undefined) {
            se.wi(self.autoBuy, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_addexp_request"] = { en: _encode_cs_pet_addexp_request, de: _decode_cs_pet_addexp_request };
    var cs_pet_addexp_response = (function () {
        function cs_pet_addexp_response() {
        }
        return cs_pet_addexp_response;
    }());
    Sproto.cs_pet_addexp_response = cs_pet_addexp_response;
    __reflect(cs_pet_addexp_response.prototype, "Sproto.cs_pet_addexp_response");
    function _decode_cs_pet_addexp_response(d) {
        var o = new cs_pet_addexp_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.exp = d.ri();
                    break;
                case 2:
                    o.level = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_addexp_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.exp != undefined) {
            se.wi(self.exp, 1);
        }
        if (self.level != undefined) {
            se.wi(self.level, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_addexp_response"] = { en: _encode_cs_pet_addexp_response, de: _decode_cs_pet_addexp_response };
    var cs_pet_addgift_request = (function () {
        function cs_pet_addgift_request() {
        }
        return cs_pet_addgift_request;
    }());
    Sproto.cs_pet_addgift_request = cs_pet_addgift_request;
    __reflect(cs_pet_addgift_request.prototype, "Sproto.cs_pet_addgift_request");
    function _decode_cs_pet_addgift_request(d) {
        var o = new cs_pet_addgift_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_addgift_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_addgift_request"] = { en: _encode_cs_pet_addgift_request, de: _decode_cs_pet_addgift_request };
    var cs_pet_addgift_response = (function () {
        function cs_pet_addgift_response() {
        }
        return cs_pet_addgift_response;
    }());
    Sproto.cs_pet_addgift_response = cs_pet_addgift_response;
    __reflect(cs_pet_addgift_response.prototype, "Sproto.cs_pet_addgift_response");
    function _decode_cs_pet_addgift_response(d) {
        var o = new cs_pet_addgift_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.exp = d.ri();
                    break;
                case 2:
                    o.level = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_addgift_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.exp != undefined) {
            se.wi(self.exp, 1);
        }
        if (self.level != undefined) {
            se.wi(self.level, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_addgift_response"] = { en: _encode_cs_pet_addgift_response, de: _decode_cs_pet_addgift_response };
    var cs_pet_fly_addexp_request = (function () {
        function cs_pet_fly_addexp_request() {
        }
        return cs_pet_fly_addexp_request;
    }());
    Sproto.cs_pet_fly_addexp_request = cs_pet_fly_addexp_request;
    __reflect(cs_pet_fly_addexp_request.prototype, "Sproto.cs_pet_fly_addexp_request");
    function _decode_cs_pet_fly_addexp_request(d) {
        var o = new cs_pet_fly_addexp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.autoBuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_fly_addexp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.autoBuy != undefined) {
            se.wi(self.autoBuy, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_fly_addexp_request"] = { en: _encode_cs_pet_fly_addexp_request, de: _decode_cs_pet_fly_addexp_request };
    var cs_pet_fly_addexp_response = (function () {
        function cs_pet_fly_addexp_response() {
        }
        return cs_pet_fly_addexp_response;
    }());
    Sproto.cs_pet_fly_addexp_response = cs_pet_fly_addexp_response;
    __reflect(cs_pet_fly_addexp_response.prototype, "Sproto.cs_pet_fly_addexp_response");
    function _decode_cs_pet_fly_addexp_response(d) {
        var o = new cs_pet_fly_addexp_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.flyexp = d.ri();
                    break;
                case 2:
                    o.flylevel = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_fly_addexp_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.flyexp != undefined) {
            se.wi(self.flyexp, 1);
        }
        if (self.flylevel != undefined) {
            se.wi(self.flylevel, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_fly_addexp_response"] = { en: _encode_cs_pet_fly_addexp_response, de: _decode_cs_pet_fly_addexp_response };
    var cs_pet_fly_restore_request = (function () {
        function cs_pet_fly_restore_request() {
        }
        return cs_pet_fly_restore_request;
    }());
    Sproto.cs_pet_fly_restore_request = cs_pet_fly_restore_request;
    __reflect(cs_pet_fly_restore_request.prototype, "Sproto.cs_pet_fly_restore_request");
    function _decode_cs_pet_fly_restore_request(d) {
        var o = new cs_pet_fly_restore_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_fly_restore_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_fly_restore_request"] = { en: _encode_cs_pet_fly_restore_request, de: _decode_cs_pet_fly_restore_request };
    var cs_pet_outbound_request = (function () {
        function cs_pet_outbound_request() {
        }
        return cs_pet_outbound_request;
    }());
    Sproto.cs_pet_outbound_request = cs_pet_outbound_request;
    __reflect(cs_pet_outbound_request.prototype, "Sproto.cs_pet_outbound_request");
    function _decode_cs_pet_outbound_request(d) {
        var o = new cs_pet_outbound_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.first = d.ri();
                    break;
                case 1:
                    o.second = d.ri();
                    break;
                case 2:
                    o.third = d.ri();
                    break;
                case 3:
                    o.four = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_outbound_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.first != undefined) {
            se.wi(self.first, 0);
        }
        if (self.second != undefined) {
            se.wi(self.second, 1);
        }
        if (self.third != undefined) {
            se.wi(self.third, 2);
        }
        if (self.four != undefined) {
            se.wi(self.four, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_outbound_request"] = { en: _encode_cs_pet_outbound_request, de: _decode_cs_pet_outbound_request };
    var cs_pet_refreshskill_request = (function () {
        function cs_pet_refreshskill_request() {
        }
        return cs_pet_refreshskill_request;
    }());
    Sproto.cs_pet_refreshskill_request = cs_pet_refreshskill_request;
    __reflect(cs_pet_refreshskill_request.prototype, "Sproto.cs_pet_refreshskill_request");
    function _decode_cs_pet_refreshskill_request(d) {
        var o = new cs_pet_refreshskill_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.locklist = d.ria();
                    break;
                case 2:
                    o.type = d.ri();
                    break;
                case 3:
                    o.autoBuy = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_refreshskill_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.locklist != undefined) {
            se.wia(self.locklist, 1);
        }
        if (self.type != undefined) {
            se.wi(self.type, 2);
        }
        if (self.autoBuy != undefined) {
            se.wi(self.autoBuy, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_refreshskill_request"] = { en: _encode_cs_pet_refreshskill_request, de: _decode_cs_pet_refreshskill_request };
    var cs_pet_refreshskill_response = (function () {
        function cs_pet_refreshskill_response() {
        }
        return cs_pet_refreshskill_response;
    }());
    Sproto.cs_pet_refreshskill_response = cs_pet_refreshskill_response;
    __reflect(cs_pet_refreshskill_response.prototype, "Sproto.cs_pet_refreshskill_response");
    function _decode_cs_pet_refreshskill_response(d) {
        var o = new cs_pet_refreshskill_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.xilian = d.ri();
                    break;
                case 2:
                    o.xilianSkills = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_refreshskill_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.xilian != undefined) {
            se.wi(self.xilian, 1);
        }
        if (self.xilianSkills != undefined) {
            se.wia(self.xilianSkills, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_refreshskill_response"] = { en: _encode_cs_pet_refreshskill_response, de: _decode_cs_pet_refreshskill_response };
    var cs_pet_rename_request = (function () {
        function cs_pet_rename_request() {
        }
        return cs_pet_rename_request;
    }());
    Sproto.cs_pet_rename_request = cs_pet_rename_request;
    __reflect(cs_pet_rename_request.prototype, "Sproto.cs_pet_rename_request");
    function _decode_cs_pet_rename_request(d) {
        var o = new cs_pet_rename_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_rename_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_rename_request"] = { en: _encode_cs_pet_rename_request, de: _decode_cs_pet_rename_request };
    var cs_pet_rename_response = (function () {
        function cs_pet_rename_response() {
        }
        return cs_pet_rename_response;
    }());
    Sproto.cs_pet_rename_response = cs_pet_rename_response;
    __reflect(cs_pet_rename_response.prototype, "Sproto.cs_pet_rename_response");
    function _decode_cs_pet_rename_response(d) {
        var o = new cs_pet_rename_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_rename_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_rename_response"] = { en: _encode_cs_pet_rename_response, de: _decode_cs_pet_rename_response };
    var cs_pet_setshow_request = (function () {
        function cs_pet_setshow_request() {
        }
        return cs_pet_setshow_request;
    }());
    Sproto.cs_pet_setshow_request = cs_pet_setshow_request;
    __reflect(cs_pet_setshow_request.prototype, "Sproto.cs_pet_setshow_request");
    function _decode_cs_pet_setshow_request(d) {
        var o = new cs_pet_setshow_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_setshow_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_setshow_request"] = { en: _encode_cs_pet_setshow_request, de: _decode_cs_pet_setshow_request };
    var cs_pet_setskillin_request = (function () {
        function cs_pet_setskillin_request() {
        }
        return cs_pet_setskillin_request;
    }());
    Sproto.cs_pet_setskillin_request = cs_pet_setskillin_request;
    __reflect(cs_pet_setskillin_request.prototype, "Sproto.cs_pet_setskillin_request");
    function _decode_cs_pet_setskillin_request(d) {
        var o = new cs_pet_setskillin_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_setskillin_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_setskillin_request"] = { en: _encode_cs_pet_setskillin_request, de: _decode_cs_pet_setskillin_request };
    var cs_pet_setskillin_response = (function () {
        function cs_pet_setskillin_response() {
        }
        return cs_pet_setskillin_response;
    }());
    Sproto.cs_pet_setskillin_response = cs_pet_setskillin_response;
    __reflect(cs_pet_setskillin_response.prototype, "Sproto.cs_pet_setskillin_response");
    function _decode_cs_pet_setskillin_response(d) {
        var o = new cs_pet_setskillin_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.buffs = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_pet_setskillin_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.buffs != undefined) {
            se.wia(self.buffs, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_pet_setskillin_response"] = { en: _encode_cs_pet_setskillin_response, de: _decode_cs_pet_setskillin_response };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=pet_c2s.js.map