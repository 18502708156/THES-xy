// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_qualifyingMgr_gamble_request = (function () {
        function cs_qualifyingMgr_gamble_request() {
        }
        return cs_qualifyingMgr_gamble_request;
    }());
    Sproto.cs_qualifyingMgr_gamble_request = cs_qualifyingMgr_gamble_request;
    __reflect(cs_qualifyingMgr_gamble_request.prototype, "Sproto.cs_qualifyingMgr_gamble_request");
    function _decode_cs_qualifyingMgr_gamble_request(d) {
        var o = new cs_qualifyingMgr_gamble_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.field = d.ri();
                    break;
                case 1:
                    o.no = d.ri();
                    break;
                case 2:
                    o.typ = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_gamble_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.field != undefined) {
            se.wi(self.field, 0);
        }
        if (self.no != undefined) {
            se.wi(self.no, 1);
        }
        if (self.typ != undefined) {
            se.wi(self.typ, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_gamble_request"] = { en: _encode_cs_qualifyingMgr_gamble_request, de: _decode_cs_qualifyingMgr_gamble_request };
    var cs_qualifyingMgr_gamble_response = (function () {
        function cs_qualifyingMgr_gamble_response() {
        }
        return cs_qualifyingMgr_gamble_response;
    }());
    Sproto.cs_qualifyingMgr_gamble_response = cs_qualifyingMgr_gamble_response;
    __reflect(cs_qualifyingMgr_gamble_response.prototype, "Sproto.cs_qualifyingMgr_gamble_response");
    function _decode_cs_qualifyingMgr_gamble_response(d) {
        var o = new cs_qualifyingMgr_gamble_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_gamble_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_gamble_response"] = { en: _encode_cs_qualifyingMgr_gamble_response, de: _decode_cs_qualifyingMgr_gamble_response };
    var cs_qualifyingMgr_info_request = (function () {
        function cs_qualifyingMgr_info_request() {
        }
        return cs_qualifyingMgr_info_request;
    }());
    Sproto.cs_qualifyingMgr_info_request = cs_qualifyingMgr_info_request;
    __reflect(cs_qualifyingMgr_info_request.prototype, "Sproto.cs_qualifyingMgr_info_request");
    function _decode_cs_qualifyingMgr_info_request(d) {
        var o = new cs_qualifyingMgr_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_info_request"] = { en: _encode_cs_qualifyingMgr_info_request, de: _decode_cs_qualifyingMgr_info_request };
    var cs_qualifyingMgr_map_info_request = (function () {
        function cs_qualifyingMgr_map_info_request() {
        }
        return cs_qualifyingMgr_map_info_request;
    }());
    Sproto.cs_qualifyingMgr_map_info_request = cs_qualifyingMgr_map_info_request;
    __reflect(cs_qualifyingMgr_map_info_request.prototype, "Sproto.cs_qualifyingMgr_map_info_request");
    function _decode_cs_qualifyingMgr_map_info_request(d) {
        var o = new cs_qualifyingMgr_map_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_map_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_map_info_request"] = { en: _encode_cs_qualifyingMgr_map_info_request, de: _decode_cs_qualifyingMgr_map_info_request };
    var cs_qualifyingMgr_rank_request = (function () {
        function cs_qualifyingMgr_rank_request() {
        }
        return cs_qualifyingMgr_rank_request;
    }());
    Sproto.cs_qualifyingMgr_rank_request = cs_qualifyingMgr_rank_request;
    __reflect(cs_qualifyingMgr_rank_request.prototype, "Sproto.cs_qualifyingMgr_rank_request");
    function _decode_cs_qualifyingMgr_rank_request(d) {
        var o = new cs_qualifyingMgr_rank_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_rank_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_rank_request"] = { en: _encode_cs_qualifyingMgr_rank_request, de: _decode_cs_qualifyingMgr_rank_request };
    var cs_qualifyingMgr_rank_response = (function () {
        function cs_qualifyingMgr_rank_response() {
        }
        return cs_qualifyingMgr_rank_response;
    }());
    Sproto.cs_qualifyingMgr_rank_response = cs_qualifyingMgr_rank_response;
    __reflect(cs_qualifyingMgr_rank_response.prototype, "Sproto.cs_qualifyingMgr_rank_response");
    function _decode_cs_qualifyingMgr_rank_response(d) {
        var o = new cs_qualifyingMgr_rank_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rank_data = d.roa("qualifyingMgr_rank_data");
                    break;
                case 1:
                    o.fightRecord = d.roa("qualifyingMgr_fight_data");
                    break;
                case 2:
                    o.rankNo = d.ri();
                    break;
                case 3:
                    o.point = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_rank_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.rank_data != undefined) {
            se.woa("qualifyingMgr_rank_data", self.rank_data, 0);
        }
        if (self.fightRecord != undefined) {
            se.woa("qualifyingMgr_fight_data", self.fightRecord, 1);
        }
        if (self.rankNo != undefined) {
            se.wi(self.rankNo, 2);
        }
        if (self.point != undefined) {
            se.wi(self.point, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_rank_response"] = { en: _encode_cs_qualifyingMgr_rank_response, de: _decode_cs_qualifyingMgr_rank_response };
    var cs_qualifyingMgr_sign_up_request = (function () {
        function cs_qualifyingMgr_sign_up_request() {
        }
        return cs_qualifyingMgr_sign_up_request;
    }());
    Sproto.cs_qualifyingMgr_sign_up_request = cs_qualifyingMgr_sign_up_request;
    __reflect(cs_qualifyingMgr_sign_up_request.prototype, "Sproto.cs_qualifyingMgr_sign_up_request");
    function _decode_cs_qualifyingMgr_sign_up_request(d) {
        var o = new cs_qualifyingMgr_sign_up_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_sign_up_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_sign_up_request"] = { en: _encode_cs_qualifyingMgr_sign_up_request, de: _decode_cs_qualifyingMgr_sign_up_request };
    var cs_qualifyingMgr_sign_up_response = (function () {
        function cs_qualifyingMgr_sign_up_response() {
        }
        return cs_qualifyingMgr_sign_up_response;
    }());
    Sproto.cs_qualifyingMgr_sign_up_response = cs_qualifyingMgr_sign_up_response;
    __reflect(cs_qualifyingMgr_sign_up_response.prototype, "Sproto.cs_qualifyingMgr_sign_up_response");
    function _decode_cs_qualifyingMgr_sign_up_response(d) {
        var o = new cs_qualifyingMgr_sign_up_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_sign_up_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_sign_up_response"] = { en: _encode_cs_qualifyingMgr_sign_up_response, de: _decode_cs_qualifyingMgr_sign_up_response };
    var cs_qualifyingMgr_timeout_request = (function () {
        function cs_qualifyingMgr_timeout_request() {
        }
        return cs_qualifyingMgr_timeout_request;
    }());
    Sproto.cs_qualifyingMgr_timeout_request = cs_qualifyingMgr_timeout_request;
    __reflect(cs_qualifyingMgr_timeout_request.prototype, "Sproto.cs_qualifyingMgr_timeout_request");
    function _decode_cs_qualifyingMgr_timeout_request(d) {
        var o = new cs_qualifyingMgr_timeout_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_timeout_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_timeout_request"] = { en: _encode_cs_qualifyingMgr_timeout_request, de: _decode_cs_qualifyingMgr_timeout_request };
    var cs_qualifyingMgr_timeout_response = (function () {
        function cs_qualifyingMgr_timeout_response() {
        }
        return cs_qualifyingMgr_timeout_response;
    }());
    Sproto.cs_qualifyingMgr_timeout_response = cs_qualifyingMgr_timeout_response;
    __reflect(cs_qualifyingMgr_timeout_response.prototype, "Sproto.cs_qualifyingMgr_timeout_response");
    function _decode_cs_qualifyingMgr_timeout_response(d) {
        var o = new cs_qualifyingMgr_timeout_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.timeout = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_timeout_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.timeout != undefined) {
            se.wi(self.timeout, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_timeout_response"] = { en: _encode_cs_qualifyingMgr_timeout_response, de: _decode_cs_qualifyingMgr_timeout_response };
    var cs_qualifyingMgr_video_request = (function () {
        function cs_qualifyingMgr_video_request() {
        }
        return cs_qualifyingMgr_video_request;
    }());
    Sproto.cs_qualifyingMgr_video_request = cs_qualifyingMgr_video_request;
    __reflect(cs_qualifyingMgr_video_request.prototype, "Sproto.cs_qualifyingMgr_video_request");
    function _decode_cs_qualifyingMgr_video_request(d) {
        var o = new cs_qualifyingMgr_video_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.the = d.ri();
                    break;
                case 1:
                    o.field = d.ri();
                    break;
                case 2:
                    o.round = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_qualifyingMgr_video_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.the != undefined) {
            se.wi(self.the, 0);
        }
        if (self.field != undefined) {
            se.wi(self.field, 1);
        }
        if (self.round != undefined) {
            se.wi(self.round, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_qualifyingMgr_video_request"] = { en: _encode_cs_qualifyingMgr_video_request, de: _decode_cs_qualifyingMgr_video_request };
    var qualifyingMgr_fight_data = (function () {
        function qualifyingMgr_fight_data() {
        }
        return qualifyingMgr_fight_data;
    }());
    Sproto.qualifyingMgr_fight_data = qualifyingMgr_fight_data;
    __reflect(qualifyingMgr_fight_data.prototype, "Sproto.qualifyingMgr_fight_data");
    function _decode_qualifyingMgr_fight_data(d) {
        var o = new qualifyingMgr_fight_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.win = d.rb();
                    break;
                case 1:
                    o.name1 = d.rs();
                    break;
                case 2:
                    o.server1 = d.ri();
                    break;
                case 3:
                    o.name2 = d.rs();
                    break;
                case 4:
                    o.server2 = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_qualifyingMgr_fight_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.win != undefined) {
            se.wb(self.win, 0);
        }
        if (self.name1 != undefined) {
            se.ws(self.name1, 1);
        }
        if (self.server1 != undefined) {
            se.wi(self.server1, 2);
        }
        if (self.name2 != undefined) {
            se.ws(self.name2, 3);
        }
        if (self.server2 != undefined) {
            se.wi(self.server2, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["qualifyingMgr_fight_data"] = { en: _encode_qualifyingMgr_fight_data, de: _decode_qualifyingMgr_fight_data };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=qualifyingMgr_c2s.js.map