// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_rank_req_request = (function () {
        function cs_rank_req_request() {
        }
        return cs_rank_req_request;
    }());
    Sproto.cs_rank_req_request = cs_rank_req_request;
    __reflect(cs_rank_req_request.prototype, "Sproto.cs_rank_req_request");
    function _decode_cs_rank_req_request(d) {
        var o = new cs_rank_req_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_rank_req_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_rank_req_request"] = { en: _encode_cs_rank_req_request, de: _decode_cs_rank_req_request };
    var cs_rank_worship_all_count_request = (function () {
        function cs_rank_worship_all_count_request() {
        }
        return cs_rank_worship_all_count_request;
    }());
    Sproto.cs_rank_worship_all_count_request = cs_rank_worship_all_count_request;
    __reflect(cs_rank_worship_all_count_request.prototype, "Sproto.cs_rank_worship_all_count_request");
    function _decode_cs_rank_worship_all_count_request(d) {
        var o = new cs_rank_worship_all_count_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_rank_worship_all_count_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_rank_worship_all_count_request"] = { en: _encode_cs_rank_worship_all_count_request, de: _decode_cs_rank_worship_all_count_request };
    var cs_rank_worship_data_req_request = (function () {
        function cs_rank_worship_data_req_request() {
        }
        return cs_rank_worship_data_req_request;
    }());
    Sproto.cs_rank_worship_data_req_request = cs_rank_worship_data_req_request;
    __reflect(cs_rank_worship_data_req_request.prototype, "Sproto.cs_rank_worship_data_req_request");
    function _decode_cs_rank_worship_data_req_request(d) {
        var o = new cs_rank_worship_data_req_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_rank_worship_data_req_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_rank_worship_data_req_request"] = { en: _encode_cs_rank_worship_data_req_request, de: _decode_cs_rank_worship_data_req_request };
    var cs_rank_worship_once_request = (function () {
        function cs_rank_worship_once_request() {
        }
        return cs_rank_worship_once_request;
    }());
    Sproto.cs_rank_worship_once_request = cs_rank_worship_once_request;
    __reflect(cs_rank_worship_once_request.prototype, "Sproto.cs_rank_worship_once_request");
    function _decode_cs_rank_worship_once_request(d) {
        var o = new cs_rank_worship_once_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_rank_worship_once_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_rank_worship_once_request"] = { en: _encode_cs_rank_worship_once_request, de: _decode_cs_rank_worship_once_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=rank_c2s.js.map