// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_recharge_first_reward_request = (function () {
        function cs_recharge_first_reward_request() {
        }
        return cs_recharge_first_reward_request;
    }());
    Sproto.cs_recharge_first_reward_request = cs_recharge_first_reward_request;
    __reflect(cs_recharge_first_reward_request.prototype, "Sproto.cs_recharge_first_reward_request");
    function _decode_cs_recharge_first_reward_request(d) {
        var o = new cs_recharge_first_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_recharge_first_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_recharge_first_reward_request"] = { en: _encode_cs_recharge_first_reward_request, de: _decode_cs_recharge_first_reward_request };
    var cs_recharge_get_choice_reward_request = (function () {
        function cs_recharge_get_choice_reward_request() {
        }
        return cs_recharge_get_choice_reward_request;
    }());
    Sproto.cs_recharge_get_choice_reward_request = cs_recharge_get_choice_reward_request;
    __reflect(cs_recharge_get_choice_reward_request.prototype, "Sproto.cs_recharge_get_choice_reward_request");
    function _decode_cs_recharge_get_choice_reward_request(d) {
        var o = new cs_recharge_get_choice_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_recharge_get_choice_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_recharge_get_choice_reward_request"] = { en: _encode_cs_recharge_get_choice_reward_request, de: _decode_cs_recharge_get_choice_reward_request };
    var cs_recharge_get_dailyrecharge_reward_request = (function () {
        function cs_recharge_get_dailyrecharge_reward_request() {
        }
        return cs_recharge_get_dailyrecharge_reward_request;
    }());
    Sproto.cs_recharge_get_dailyrecharge_reward_request = cs_recharge_get_dailyrecharge_reward_request;
    __reflect(cs_recharge_get_dailyrecharge_reward_request.prototype, "Sproto.cs_recharge_get_dailyrecharge_reward_request");
    function _decode_cs_recharge_get_dailyrecharge_reward_request(d) {
        var o = new cs_recharge_get_dailyrecharge_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rewardid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_recharge_get_dailyrecharge_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rewardid != undefined) {
            se.wi(self.rewardid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_recharge_get_dailyrecharge_reward_request"] = { en: _encode_cs_recharge_get_dailyrecharge_reward_request, de: _decode_cs_recharge_get_dailyrecharge_reward_request };
    var cs_recharge_get_order_number_response = (function () {
        function cs_recharge_get_order_number_response() {
        }
        return cs_recharge_get_order_number_response;
    }());
    Sproto.cs_recharge_get_order_number_response = cs_recharge_get_order_number_response;
    __reflect(cs_recharge_get_order_number_response.prototype, "Sproto.cs_recharge_get_order_number_response");
    function _decode_cs_recharge_get_order_number_response(d) {
        var o = new cs_recharge_get_order_number_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.order_number = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_recharge_get_order_number_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.order_number != undefined) {
            se.wi(self.order_number, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_recharge_get_order_number_response"] = { en: _encode_cs_recharge_get_order_number_response, de: _decode_cs_recharge_get_order_number_response };
    var cs_recharge_normal_request = (function () {
        function cs_recharge_normal_request() {
        }
        return cs_recharge_normal_request;
    }());
    Sproto.cs_recharge_normal_request = cs_recharge_normal_request;
    __reflect(cs_recharge_normal_request.prototype, "Sproto.cs_recharge_normal_request");
    function _decode_cs_recharge_normal_request(d) {
        var o = new cs_recharge_normal_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.rechargeid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_recharge_normal_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.rechargeid != undefined) {
            se.wi(self.rechargeid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_recharge_normal_request"] = { en: _encode_cs_recharge_normal_request, de: _decode_cs_recharge_normal_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=recharge_c2s.js.map