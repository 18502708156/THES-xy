// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var award_item = (function () {
        function award_item() {
        }
        return award_item;
    }());
    Sproto.award_item = award_item;
    __reflect(award_item.prototype, "Sproto.award_item");
    function _decode_award_item(d) {
        var o = new award_item;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.type = d.ri();
                    break;
                case 1:
                    o.id = d.ri();
                    break;
                case 2:
                    o.count = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_award_item(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.type != undefined) {
            se.wi(self.type, 0);
        }
        if (self.id != undefined) {
            se.wi(self.id, 1);
        }
        if (self.count != undefined) {
            se.wi(self.count, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["award_item"] = { en: _encode_award_item, de: _decode_award_item };
    var award_one = (function () {
        function award_one() {
        }
        return award_one;
    }());
    Sproto.award_one = award_one;
    __reflect(award_one.prototype, "Sproto.award_one");
    function _decode_award_one(d) {
        var o = new award_one;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.items = d.roa("award_item");
                    break;
                case 1:
                    o.buycount = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_award_one(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.items != undefined) {
            se.woa("award_item", self.items, 0);
        }
        if (self.buycount != undefined) {
            se.wi(self.buycount, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["award_one"] = { en: _encode_award_one, de: _decode_award_one };
    var rechargew_initinfo = (function () {
        function rechargew_initinfo() {
        }
        return rechargew_initinfo;
    }());
    Sproto.rechargew_initinfo = rechargew_initinfo;
    __reflect(rechargew_initinfo.prototype, "Sproto.rechargew_initinfo");
    function _decode_rechargew_initinfo(d) {
        var o = new rechargew_initinfo;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.config = d.ro("rechargew_shit_info");
                    break;
                case 1:
                    o.info = d.ro("rechargew_my_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_rechargew_initinfo(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.config != undefined) {
            se.wo("rechargew_shit_info", self.config, 0);
        }
        if (self.info != undefined) {
            se.wo("rechargew_my_info", self.info, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["rechargew_initinfo"] = { en: _encode_rechargew_initinfo, de: _decode_rechargew_initinfo };
    var rechargew_my_info = (function () {
        function rechargew_my_info() {
        }
        return rechargew_my_info;
    }());
    Sproto.rechargew_my_info = rechargew_my_info;
    __reflect(rechargew_my_info.prototype, "Sproto.rechargew_my_info");
    function _decode_rechargew_my_info(d) {
        var o = new rechargew_my_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.nopop = d.rb();
                    break;
                case 1:
                    o.step = d.ri();
                    break;
                case 2:
                    o.getnum = d.ria();
                    break;
                case 3:
                    o.steps = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_rechargew_my_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.nopop != undefined) {
            se.wb(self.nopop, 0);
        }
        if (self.step != undefined) {
            se.wi(self.step, 1);
        }
        if (self.getnum != undefined) {
            se.wia(self.getnum, 2);
        }
        if (self.steps != undefined) {
            se.wia(self.steps, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["rechargew_my_info"] = { en: _encode_rechargew_my_info, de: _decode_rechargew_my_info };
    var rechargew_shit_info = (function () {
        function rechargew_shit_info() {
        }
        return rechargew_shit_info;
    }());
    Sproto.rechargew_shit_info = rechargew_shit_info;
    __reflect(rechargew_shit_info.prototype, "Sproto.rechargew_shit_info");
    function _decode_rechargew_shit_info(d) {
        var o = new rechargew_shit_info;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.payType = d.ri();
                    break;
                case 1:
                    o.gid = d.ri();
                    break;
                case 2:
                    o.gtype = d.ri();
                    break;
                case 3:
                    o.startTime = d.ri();
                    break;
                case 4:
                    o.endTime = d.ri();
                    break;
                case 5:
                    o.headtext = d.rs();
                    break;
                case 6:
                    o.content = d.rs();
                    break;
                case 7:
                    o.awards = d.roa("award_one");
                    break;
                case 8:
                    o.condType = d.ri();
                    break;
                case 9:
                    o.targets = d.ria();
                    break;
                case 10:
                    o.prices = d.ria();
                    break;
                case 11:
                    o.dayRefresh = d.ri();
                    break;
                case 12:
                    o.showType = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_rechargew_shit_info(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 13);
        if (self.payType != undefined) {
            se.wi(self.payType, 0);
        }
        if (self.gid != undefined) {
            se.wi(self.gid, 1);
        }
        if (self.gtype != undefined) {
            se.wi(self.gtype, 2);
        }
        if (self.startTime != undefined) {
            se.wi(self.startTime, 3);
        }
        if (self.endTime != undefined) {
            se.wi(self.endTime, 4);
        }
        if (self.headtext != undefined) {
            se.ws(self.headtext, 5);
        }
        if (self.content != undefined) {
            se.ws(self.content, 6);
        }
        if (self.awards != undefined) {
            se.woa("award_one", self.awards, 7);
        }
        if (self.condType != undefined) {
            se.wi(self.condType, 8);
        }
        if (self.targets != undefined) {
            se.wia(self.targets, 9);
        }
        if (self.prices != undefined) {
            se.wia(self.prices, 10);
        }
        if (self.dayRefresh != undefined) {
            se.wi(self.dayRefresh, 11);
        }
        if (self.showType != undefined) {
            se.wi(self.showType, 12);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["rechargew_shit_info"] = { en: _encode_rechargew_shit_info, de: _decode_rechargew_shit_info };
    var sc_rechargew_shit_request = (function () {
        function sc_rechargew_shit_request() {
        }
        return sc_rechargew_shit_request;
    }());
    Sproto.sc_rechargew_shit_request = sc_rechargew_shit_request;
    __reflect(sc_rechargew_shit_request.prototype, "Sproto.sc_rechargew_shit_request");
    function _decode_sc_rechargew_shit_request(d) {
        var o = new sc_rechargew_shit_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.config = d.ro("rechargew_shit_info");
                    break;
                case 1:
                    o.info = d.ro("rechargew_my_info");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_rechargew_shit_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.config != undefined) {
            se.wo("rechargew_shit_info", self.config, 0);
        }
        if (self.info != undefined) {
            se.wo("rechargew_my_info", self.info, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_rechargew_shit_request"] = { en: _encode_sc_rechargew_shit_request, de: _decode_sc_rechargew_shit_request };
    var sc_rechargew_shitclose_request = (function () {
        function sc_rechargew_shitclose_request() {
        }
        return sc_rechargew_shitclose_request;
    }());
    Sproto.sc_rechargew_shitclose_request = sc_rechargew_shitclose_request;
    __reflect(sc_rechargew_shitclose_request.prototype, "Sproto.sc_rechargew_shitclose_request");
    function _decode_sc_rechargew_shitclose_request(d) {
        var o = new sc_rechargew_shitclose_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.payType = d.ri();
                    break;
                case 1:
                    o.gid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_rechargew_shitclose_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.payType != undefined) {
            se.wi(self.payType, 0);
        }
        if (self.gid != undefined) {
            se.wi(self.gid, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_rechargew_shitclose_request"] = { en: _encode_sc_rechargew_shitclose_request, de: _decode_sc_rechargew_shitclose_request };
    var sc_rechargew_shitindex_request = (function () {
        function sc_rechargew_shitindex_request() {
        }
        return sc_rechargew_shitindex_request;
    }());
    Sproto.sc_rechargew_shitindex_request = sc_rechargew_shitindex_request;
    __reflect(sc_rechargew_shitindex_request.prototype, "Sproto.sc_rechargew_shitindex_request");
    function _decode_sc_rechargew_shitindex_request(d) {
        var o = new sc_rechargew_shitindex_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.payType = d.ri();
                    break;
                case 1:
                    o.gid = d.ri();
                    break;
                case 2:
                    o.index = d.ri();
                    break;
                case 3:
                    o.price = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_rechargew_shitindex_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.payType != undefined) {
            se.wi(self.payType, 0);
        }
        if (self.gid != undefined) {
            se.wi(self.gid, 1);
        }
        if (self.index != undefined) {
            se.wi(self.index, 2);
        }
        if (self.price != undefined) {
            se.wi(self.price, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_rechargew_shitindex_request"] = { en: _encode_sc_rechargew_shitindex_request, de: _decode_sc_rechargew_shitindex_request };
    var sc_rechargew_shitinit_request = (function () {
        function sc_rechargew_shitinit_request() {
        }
        return sc_rechargew_shitinit_request;
    }());
    Sproto.sc_rechargew_shitinit_request = sc_rechargew_shitinit_request;
    __reflect(sc_rechargew_shitinit_request.prototype, "Sproto.sc_rechargew_shitinit_request");
    function _decode_sc_rechargew_shitinit_request(d) {
        var o = new sc_rechargew_shitinit_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.initinfo = d.roa("rechargew_initinfo");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_rechargew_shitinit_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.initinfo != undefined) {
            se.woa("rechargew_initinfo", self.initinfo, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_rechargew_shitinit_request"] = { en: _encode_sc_rechargew_shitinit_request, de: _decode_sc_rechargew_shitinit_request };
    var sc_rechargew_shitstep_request = (function () {
        function sc_rechargew_shitstep_request() {
        }
        return sc_rechargew_shitstep_request;
    }());
    Sproto.sc_rechargew_shitstep_request = sc_rechargew_shitstep_request;
    __reflect(sc_rechargew_shitstep_request.prototype, "Sproto.sc_rechargew_shitstep_request");
    function _decode_sc_rechargew_shitstep_request(d) {
        var o = new sc_rechargew_shitstep_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.payType = d.ri();
                    break;
                case 1:
                    o.gid = d.ri();
                    break;
                case 2:
                    o.step = d.ri();
                    break;
                case 3:
                    o.getnum = d.ria();
                    break;
                case 4:
                    o.steps = d.ria();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_rechargew_shitstep_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 5);
        if (self.payType != undefined) {
            se.wi(self.payType, 0);
        }
        if (self.gid != undefined) {
            se.wi(self.gid, 1);
        }
        if (self.step != undefined) {
            se.wi(self.step, 2);
        }
        if (self.getnum != undefined) {
            se.wia(self.getnum, 3);
        }
        if (self.steps != undefined) {
            se.wia(self.steps, 4);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_rechargew_shitstep_request"] = { en: _encode_sc_rechargew_shitstep_request, de: _decode_sc_rechargew_shitstep_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=rechargew_s2c.js.map