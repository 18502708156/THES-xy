// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_secret_floor_rewards_request = (function () {
        function cs_secret_floor_rewards_request() {
        }
        return cs_secret_floor_rewards_request;
    }());
    Sproto.cs_secret_floor_rewards_request = cs_secret_floor_rewards_request;
    __reflect(cs_secret_floor_rewards_request.prototype, "Sproto.cs_secret_floor_rewards_request");
    function _decode_cs_secret_floor_rewards_request(d) {
        var o = new cs_secret_floor_rewards_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_secret_floor_rewards_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_secret_floor_rewards_request"] = { en: _encode_cs_secret_floor_rewards_request, de: _decode_cs_secret_floor_rewards_request };
    var cs_secret_info_request = (function () {
        function cs_secret_info_request() {
        }
        return cs_secret_info_request;
    }());
    Sproto.cs_secret_info_request = cs_secret_info_request;
    __reflect(cs_secret_info_request.prototype, "Sproto.cs_secret_info_request");
    function _decode_cs_secret_info_request(d) {
        var o = new cs_secret_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_secret_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_secret_info_request"] = { en: _encode_cs_secret_info_request, de: _decode_cs_secret_info_request };
    var cs_secret_pitch_request = (function () {
        function cs_secret_pitch_request() {
        }
        return cs_secret_pitch_request;
    }());
    Sproto.cs_secret_pitch_request = cs_secret_pitch_request;
    __reflect(cs_secret_pitch_request.prototype, "Sproto.cs_secret_pitch_request");
    function _decode_cs_secret_pitch_request(d) {
        var o = new cs_secret_pitch_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_secret_pitch_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_secret_pitch_request"] = { en: _encode_cs_secret_pitch_request, de: _decode_cs_secret_pitch_request };
    var cs_secret_pitch_response = (function () {
        function cs_secret_pitch_response() {
        }
        return cs_secret_pitch_response;
    }());
    Sproto.cs_secret_pitch_response = cs_secret_pitch_response;
    __reflect(cs_secret_pitch_response.prototype, "Sproto.cs_secret_pitch_response");
    function _decode_cs_secret_pitch_response(d) {
        var o = new cs_secret_pitch_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.step = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_secret_pitch_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.step != undefined) {
            se.wi(self.step, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_secret_pitch_response"] = { en: _encode_cs_secret_pitch_response, de: _decode_cs_secret_pitch_response };
    var cs_secret_reset_request = (function () {
        function cs_secret_reset_request() {
        }
        return cs_secret_reset_request;
    }());
    Sproto.cs_secret_reset_request = cs_secret_reset_request;
    __reflect(cs_secret_reset_request.prototype, "Sproto.cs_secret_reset_request");
    function _decode_cs_secret_reset_request(d) {
        var o = new cs_secret_reset_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_secret_reset_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_secret_reset_request"] = { en: _encode_cs_secret_reset_request, de: _decode_cs_secret_reset_request };
    var cs_secret_step_rewards_request = (function () {
        function cs_secret_step_rewards_request() {
        }
        return cs_secret_step_rewards_request;
    }());
    Sproto.cs_secret_step_rewards_request = cs_secret_step_rewards_request;
    __reflect(cs_secret_step_rewards_request.prototype, "Sproto.cs_secret_step_rewards_request");
    function _decode_cs_secret_step_rewards_request(d) {
        var o = new cs_secret_step_rewards_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.id = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_secret_step_rewards_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.id != undefined) {
            se.wi(self.id, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_secret_step_rewards_request"] = { en: _encode_cs_secret_step_rewards_request, de: _decode_cs_secret_step_rewards_request };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=secret_c2s.js.map