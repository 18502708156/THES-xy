// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var cs_teachers_apply_confirm_request = (function () {
        function cs_teachers_apply_confirm_request() {
        }
        return cs_teachers_apply_confirm_request;
    }());
    Sproto.cs_teachers_apply_confirm_request = cs_teachers_apply_confirm_request;
    __reflect(cs_teachers_apply_confirm_request.prototype, "Sproto.cs_teachers_apply_confirm_request");
    function _decode_cs_teachers_apply_confirm_request(d) {
        var o = new cs_teachers_apply_confirm_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.tDbid = d.ri();
                    break;
                case 1:
                    o.res = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_apply_confirm_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.tDbid != undefined) {
            se.wi(self.tDbid, 0);
        }
        if (self.res != undefined) {
            se.wb(self.res, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_apply_confirm_request"] = { en: _encode_cs_teachers_apply_confirm_request, de: _decode_cs_teachers_apply_confirm_request };
    var cs_teachers_apply_teacher_request = (function () {
        function cs_teachers_apply_teacher_request() {
        }
        return cs_teachers_apply_teacher_request;
    }());
    Sproto.cs_teachers_apply_teacher_request = cs_teachers_apply_teacher_request;
    __reflect(cs_teachers_apply_teacher_request.prototype, "Sproto.cs_teachers_apply_teacher_request");
    function _decode_cs_teachers_apply_teacher_request(d) {
        var o = new cs_teachers_apply_teacher_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.sDbid = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_apply_teacher_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.sDbid != undefined) {
            se.wi(self.sDbid, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_apply_teacher_request"] = { en: _encode_cs_teachers_apply_teacher_request, de: _decode_cs_teachers_apply_teacher_request };
    var cs_teachers_apply_teacher_response = (function () {
        function cs_teachers_apply_teacher_response() {
        }
        return cs_teachers_apply_teacher_response;
    }());
    Sproto.cs_teachers_apply_teacher_response = cs_teachers_apply_teacher_response;
    __reflect(cs_teachers_apply_teacher_response.prototype, "Sproto.cs_teachers_apply_teacher_response");
    function _decode_cs_teachers_apply_teacher_response(d) {
        var o = new cs_teachers_apply_teacher_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_apply_teacher_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wi(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_apply_teacher_response"] = { en: _encode_cs_teachers_apply_teacher_response, de: _decode_cs_teachers_apply_teacher_response };
    var cs_teachers_force_get_reward_request = (function () {
        function cs_teachers_force_get_reward_request() {
        }
        return cs_teachers_force_get_reward_request;
    }());
    Sproto.cs_teachers_force_get_reward_request = cs_teachers_force_get_reward_request;
    __reflect(cs_teachers_force_get_reward_request.prototype, "Sproto.cs_teachers_force_get_reward_request");
    function _decode_cs_teachers_force_get_reward_request(d) {
        var o = new cs_teachers_force_get_reward_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.act = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_force_get_reward_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.act != undefined) {
            se.wi(self.act, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_force_get_reward_request"] = { en: _encode_cs_teachers_force_get_reward_request, de: _decode_cs_teachers_force_get_reward_request };
    var cs_teachers_force_get_reward_response = (function () {
        function cs_teachers_force_get_reward_response() {
        }
        return cs_teachers_force_get_reward_response;
    }());
    Sproto.cs_teachers_force_get_reward_response = cs_teachers_force_get_reward_response;
    __reflect(cs_teachers_force_get_reward_response.prototype, "Sproto.cs_teachers_force_get_reward_response");
    function _decode_cs_teachers_force_get_reward_response(d) {
        var o = new cs_teachers_force_get_reward_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                case 1:
                    o.rewards = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_force_get_reward_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        if (self.rewards != undefined) {
            se.wi(self.rewards, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_force_get_reward_response"] = { en: _encode_cs_teachers_force_get_reward_response, de: _decode_cs_teachers_force_get_reward_response };
    var cs_teachers_get_exp_request = (function () {
        function cs_teachers_get_exp_request() {
        }
        return cs_teachers_get_exp_request;
    }());
    Sproto.cs_teachers_get_exp_request = cs_teachers_get_exp_request;
    __reflect(cs_teachers_get_exp_request.prototype, "Sproto.cs_teachers_get_exp_request");
    function _decode_cs_teachers_get_exp_request(d) {
        var o = new cs_teachers_get_exp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_get_exp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_get_exp_request"] = { en: _encode_cs_teachers_get_exp_request, de: _decode_cs_teachers_get_exp_request };
    var cs_teachers_get_message_request = (function () {
        function cs_teachers_get_message_request() {
        }
        return cs_teachers_get_message_request;
    }());
    Sproto.cs_teachers_get_message_request = cs_teachers_get_message_request;
    __reflect(cs_teachers_get_message_request.prototype, "Sproto.cs_teachers_get_message_request");
    function _decode_cs_teachers_get_message_request(d) {
        var o = new cs_teachers_get_message_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_get_message_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_get_message_request"] = { en: _encode_cs_teachers_get_message_request, de: _decode_cs_teachers_get_message_request };
    var cs_teachers_get_message_response = (function () {
        function cs_teachers_get_message_response() {
        }
        return cs_teachers_get_message_response;
    }());
    Sproto.cs_teachers_get_message_response = cs_teachers_get_message_response;
    __reflect(cs_teachers_get_message_response.prototype, "Sproto.cs_teachers_get_message_response");
    function _decode_cs_teachers_get_message_response(d) {
        var o = new cs_teachers_get_message_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.data = d.roa("teachers_student_data");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_get_message_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.data != undefined) {
            se.woa("teachers_student_data", self.data, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_get_message_response"] = { en: _encode_cs_teachers_get_message_response, de: _decode_cs_teachers_get_message_response };
    var cs_teachers_graduation_request = (function () {
        function cs_teachers_graduation_request() {
        }
        return cs_teachers_graduation_request;
    }());
    Sproto.cs_teachers_graduation_request = cs_teachers_graduation_request;
    __reflect(cs_teachers_graduation_request.prototype, "Sproto.cs_teachers_graduation_request");
    function _decode_cs_teachers_graduation_request(d) {
        var o = new cs_teachers_graduation_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.typ = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_graduation_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.typ != undefined) {
            se.wi(self.typ, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_graduation_request"] = { en: _encode_cs_teachers_graduation_request, de: _decode_cs_teachers_graduation_request };
    var cs_teachers_message_request = (function () {
        function cs_teachers_message_request() {
        }
        return cs_teachers_message_request;
    }());
    Sproto.cs_teachers_message_request = cs_teachers_message_request;
    __reflect(cs_teachers_message_request.prototype, "Sproto.cs_teachers_message_request");
    function _decode_cs_teachers_message_request(d) {
        var o = new cs_teachers_message_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_message_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 0);
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_message_request"] = { en: _encode_cs_teachers_message_request, de: _decode_cs_teachers_message_request };
    var cs_teachers_message_response = (function () {
        function cs_teachers_message_response() {
        }
        return cs_teachers_message_response;
    }());
    Sproto.cs_teachers_message_response = cs_teachers_message_response;
    __reflect(cs_teachers_message_response.prototype, "Sproto.cs_teachers_message_response");
    function _decode_cs_teachers_message_response(d) {
        var o = new cs_teachers_message_response;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.ret = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_message_response(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.ret != undefined) {
            se.wb(self.ret, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_message_response"] = { en: _encode_cs_teachers_message_response, de: _decode_cs_teachers_message_response };
    var cs_teachers_teach_exp_request = (function () {
        function cs_teachers_teach_exp_request() {
        }
        return cs_teachers_teach_exp_request;
    }());
    Sproto.cs_teachers_teach_exp_request = cs_teachers_teach_exp_request;
    __reflect(cs_teachers_teach_exp_request.prototype, "Sproto.cs_teachers_teach_exp_request");
    function _decode_cs_teachers_teach_exp_request(d) {
        var o = new cs_teachers_teach_exp_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_cs_teachers_teach_exp_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["cs_teachers_teach_exp_request"] = { en: _encode_cs_teachers_teach_exp_request, de: _decode_cs_teachers_teach_exp_request };
    var teachers_student_data = (function () {
        function teachers_student_data() {
        }
        return teachers_student_data;
    }());
    Sproto.teachers_student_data = teachers_student_data;
    __reflect(teachers_student_data.prototype, "Sproto.teachers_student_data");
    function _decode_teachers_student_data(d) {
        var o = new teachers_student_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.dbid = d.ri();
                    break;
                case 1:
                    o.name = d.rs();
                    break;
                case 2:
                    o.lv = d.ri();
                    break;
                case 3:
                    o.tag = d.rb();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_teachers_student_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.dbid != undefined) {
            se.wi(self.dbid, 0);
        }
        if (self.name != undefined) {
            se.ws(self.name, 1);
        }
        if (self.lv != undefined) {
            se.wi(self.lv, 2);
        }
        if (self.tag != undefined) {
            se.wb(self.tag, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["teachers_student_data"] = { en: _encode_teachers_student_data, de: _decode_teachers_student_data };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=teachers_c2s.js.map