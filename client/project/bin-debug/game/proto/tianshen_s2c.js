// Generated by sprotodump. DO NOT EDIT!
var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var Sproto;
(function (Sproto) {
    var sc_tianshen_info_request = (function () {
        function sc_tianshen_info_request() {
        }
        return sc_tianshen_info_request;
    }());
    Sproto.sc_tianshen_info_request = sc_tianshen_info_request;
    __reflect(sc_tianshen_info_request.prototype, "Sproto.sc_tianshen_info_request");
    function _decode_sc_tianshen_info_request(d) {
        var o = new sc_tianshen_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.use = d.ri();
                    break;
                case 1:
                    o.infoList = d.roa("tianshen_data");
                    break;
                case 2:
                    o.drugNum = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_tianshen_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 3);
        if (self.use != undefined) {
            se.wi(self.use, 0);
        }
        if (self.infoList != undefined) {
            se.woa("tianshen_data", self.infoList, 1);
        }
        if (self.drugNum != undefined) {
            se.wi(self.drugNum, 2);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_tianshen_info_request"] = { en: _encode_sc_tianshen_info_request, de: _decode_sc_tianshen_info_request };
    var sc_tianshen_spells_info_request = (function () {
        function sc_tianshen_spells_info_request() {
        }
        return sc_tianshen_spells_info_request;
    }());
    Sproto.sc_tianshen_spells_info_request = sc_tianshen_spells_info_request;
    __reflect(sc_tianshen_spells_info_request.prototype, "Sproto.sc_tianshen_spells_info_request");
    function _decode_sc_tianshen_spells_info_request(d) {
        var o = new sc_tianshen_spells_info_request;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.data = d.roa("tianshen_spells");
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_sc_tianshen_spells_info_request(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 1);
        if (self.data != undefined) {
            se.woa("tianshen_spells", self.data, 0);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["sc_tianshen_spells_info_request"] = { en: _encode_sc_tianshen_spells_info_request, de: _decode_sc_tianshen_spells_info_request };
    var tianshen_data = (function () {
        function tianshen_data() {
        }
        return tianshen_data;
    }());
    Sproto.tianshen_data = tianshen_data;
    __reflect(tianshen_data.prototype, "Sproto.tianshen_data");
    function _decode_tianshen_data(d) {
        var o = new tianshen_data;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.no = d.ri();
                    break;
                case 1:
                    o.lv = d.ri();
                    break;
                case 2:
                    o.upNum = d.ri();
                    break;
                case 3:
                    o.promotion = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_tianshen_data(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 4);
        if (self.no != undefined) {
            se.wi(self.no, 0);
        }
        if (self.lv != undefined) {
            se.wi(self.lv, 1);
        }
        if (self.upNum != undefined) {
            se.wi(self.upNum, 2);
        }
        if (self.promotion != undefined) {
            se.wi(self.promotion, 3);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["tianshen_data"] = { en: _encode_tianshen_data, de: _decode_tianshen_data };
    var tianshen_spells = (function () {
        function tianshen_spells() {
        }
        return tianshen_spells;
    }());
    Sproto.tianshen_spells = tianshen_spells;
    __reflect(tianshen_spells.prototype, "Sproto.tianshen_spells");
    function _decode_tianshen_spells(d) {
        var o = new tianshen_spells;
        var t = -1;
        while (-1 != (t = d.rt())) {
            switch (t) {
                case 0:
                    o.upNum = d.ri();
                    break;
                case 1:
                    o.lv = d.ri();
                    break;
                default:
                    d.nod();
                    break;
            }
        }
        return o;
    }
    function _encode_tianshen_spells(self, st) {
        var se = Sproto.SprotoCore.GetSerialize(st, 2);
        if (self.upNum != undefined) {
            se.wi(self.upNum, 0);
        }
        if (self.lv != undefined) {
            se.wi(self.lv, 1);
        }
        return Sproto.SprotoCore.CloseSerialize(se);
    }
    Sproto.ALL_DICT["tianshen_spells"] = { en: _encode_tianshen_spells, de: _decode_tianshen_spells };
})(Sproto || (Sproto = {}));
//# sourceMappingURL=tianshen_s2c.js.map