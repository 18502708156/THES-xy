// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class activity_brief {
		public activity: number; // tag 0
		public isopen: boolean; // tag 1
	}

	function _decode_activity_brief(d: SprotoTypeDeserialize) {
		let o = new activity_brief;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.activity = d.ri ();
				break;
			case 1:
				o.isopen = d.rb ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_activity_brief(self: activity_brief, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.activity != undefined) {
			se.wi (self.activity, 0);
		}

		if (self.isopen != undefined) {
			se.wb (self.isopen, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["activity_brief"] = {en: _encode_activity_brief, de: _decode_activity_brief}
	export class sc_activity_hall_request {
		public activitys: activity_brief[]; // tag 0
	}

	function _decode_sc_activity_hall_request(d: SprotoTypeDeserialize) {
		let o = new sc_activity_hall_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.activitys = d.roa("activity_brief");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_activity_hall_request(self: sc_activity_hall_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.activitys != undefined) {
			se.woa ("activity_brief", self.activitys, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_activity_hall_request"] = {en: _encode_sc_activity_hall_request, de: _decode_sc_activity_hall_request}
	export class sc_activity_info_res_request {
		public answer: string; // tag 0
	}

	function _decode_sc_activity_info_res_request(d: SprotoTypeDeserialize) {
		let o = new sc_activity_info_res_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.answer = d.rs ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_activity_info_res_request(self: sc_activity_info_res_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.answer != undefined) {
			se.ws (self.answer, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_activity_info_res_request"] = {en: _encode_sc_activity_info_res_request, de: _decode_sc_activity_info_res_request}
	export class sc_activity_msg_request {
		public activity: number; // tag 0
	}

	function _decode_sc_activity_msg_request(d: SprotoTypeDeserialize) {
		let o = new sc_activity_msg_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.activity = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_activity_msg_request(self: sc_activity_msg_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.activity != undefined) {
			se.wi (self.activity, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_activity_msg_request"] = {en: _encode_sc_activity_msg_request, de: _decode_sc_activity_msg_request}
}

