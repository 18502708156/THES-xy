// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_arena_pk_result_request {
		public result: number; // tag 0
		public rewards: reward_data[]; // tag 1
		public iskill: boolean; // tag 2
		public maxrank: number; // tag 3
		public lastmaxrank: number; // tag 4
		public rank: number; // tag 5
		public lastrank: number; // tag 6
	}

	function _decode_sc_arena_pk_result_request(d: SprotoTypeDeserialize) {
		let o = new sc_arena_pk_result_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.result = d.ri ();
				break;
			case 1:
				o.rewards = d.roa("reward_data");
				break;
			case 2:
				o.iskill = d.rb ();
				break;
			case 3:
				o.maxrank = d.ri ();
				break;
			case 4:
				o.lastmaxrank = d.ri ();
				break;
			case 5:
				o.rank = d.ri ();
				break;
			case 6:
				o.lastrank = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_arena_pk_result_request(self: sc_arena_pk_result_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 7);

		if (self.result != undefined) {
			se.wi (self.result, 0);
		}

		if (self.rewards != undefined) {
			se.woa ("reward_data", self.rewards, 1);
		}

		if (self.iskill != undefined) {
			se.wb (self.iskill, 2);
		}

		if (self.maxrank != undefined) {
			se.wi (self.maxrank, 3);
		}

		if (self.lastmaxrank != undefined) {
			se.wi (self.lastmaxrank, 4);
		}

		if (self.rank != undefined) {
			se.wi (self.rank, 5);
		}

		if (self.lastrank != undefined) {
			se.wi (self.lastrank, 6);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_arena_pk_result_request"] = {en: _encode_sc_arena_pk_result_request, de: _decode_sc_arena_pk_result_request}
}

