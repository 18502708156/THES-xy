// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_auction_buy_request {
		public id: number; // tag 0
		public guildid: number; // tag 1
	}

	function _decode_cs_auction_buy_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_buy_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			case 1:
				o.guildid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_buy_request(self: cs_auction_buy_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		if (self.guildid != undefined) {
			se.wi (self.guildid, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_buy_request"] = {en: _encode_cs_auction_buy_request, de: _decode_cs_auction_buy_request}
	export class cs_auction_list_request {
		public auctype: number; // tag 0
	}

	function _decode_cs_auction_list_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_list_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.auctype = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_list_request(self: cs_auction_list_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.auctype != undefined) {
			se.wi (self.auctype, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_list_request"] = {en: _encode_cs_auction_list_request, de: _decode_cs_auction_list_request}
	export class cs_auction_offer_request {
		public id: number; // tag 0
		public guildid: number; // tag 1
	}

	function _decode_cs_auction_offer_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_offer_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			case 1:
				o.guildid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_offer_request(self: cs_auction_offer_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		if (self.guildid != undefined) {
			se.wi (self.guildid, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_offer_request"] = {en: _encode_cs_auction_offer_request, de: _decode_cs_auction_offer_request}
	export class cs_auction_query_item_request {
		public itemid: number; // tag 0
	}

	function _decode_cs_auction_query_item_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_query_item_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.itemid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_query_item_request(self: cs_auction_query_item_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.itemid != undefined) {
			se.wi (self.itemid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_query_item_request"] = {en: _encode_cs_auction_query_item_request, de: _decode_cs_auction_query_item_request}
	export class cs_auction_query_item_response {
		public dealprice: number; // tag 0
		public addprice: number; // tag 1
		public price: number; // tag 2
		public numerictype: number; // tag 3
	}

	function _decode_cs_auction_query_item_response(d: SprotoTypeDeserialize) {
		let o = new cs_auction_query_item_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.dealprice = d.ri ();
				break;
			case 1:
				o.addprice = d.ri ();
				break;
			case 2:
				o.price = d.ri ();
				break;
			case 3:
				o.numerictype = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_query_item_response(self: cs_auction_query_item_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.dealprice != undefined) {
			se.wi (self.dealprice, 0);
		}

		if (self.addprice != undefined) {
			se.wi (self.addprice, 1);
		}

		if (self.price != undefined) {
			se.wi (self.price, 2);
		}

		if (self.numerictype != undefined) {
			se.wi (self.numerictype, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_query_item_response"] = {en: _encode_cs_auction_query_item_response, de: _decode_cs_auction_query_item_response}
	export class cs_auction_record_request {
		public auctype: number; // tag 0
	}

	function _decode_cs_auction_record_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_record_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.auctype = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_record_request(self: cs_auction_record_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.auctype != undefined) {
			se.wi (self.auctype, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_record_request"] = {en: _encode_cs_auction_record_request, de: _decode_cs_auction_record_request}
	export class cs_auction_select_request {
		public choose: number; // tag 0
	}

	function _decode_cs_auction_select_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_select_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.choose = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_select_request(self: cs_auction_select_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.choose != undefined) {
			se.wi (self.choose, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_select_request"] = {en: _encode_cs_auction_select_request, de: _decode_cs_auction_select_request}
	export class cs_auction_update_request {
		public id: number; // tag 0
		public guildid: number; // tag 1
	}

	function _decode_cs_auction_update_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_update_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			case 1:
				o.guildid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_update_request(self: cs_auction_update_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		if (self.guildid != undefined) {
			se.wi (self.guildid, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_update_request"] = {en: _encode_cs_auction_update_request, de: _decode_cs_auction_update_request}
	export class cs_auction_useitem_request {
		public id: number; // tag 0
	}

	function _decode_cs_auction_useitem_request(d: SprotoTypeDeserialize) {
		let o = new cs_auction_useitem_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_auction_useitem_request(self: cs_auction_useitem_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_auction_useitem_request"] = {en: _encode_cs_auction_useitem_request, de: _decode_cs_auction_useitem_request}
}

