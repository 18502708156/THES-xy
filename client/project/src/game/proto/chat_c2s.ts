// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_chat_check_online_request {
		public playerIdArray: number[]; // tag 0
	}

	function _decode_cs_chat_check_online_request(d: SprotoTypeDeserialize) {
		let o = new cs_chat_check_online_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.playerIdArray = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_chat_check_online_request(self: cs_chat_check_online_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.playerIdArray != undefined) {
			se.wia (self.playerIdArray, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_chat_check_online_request"] = {en: _encode_cs_chat_check_online_request, de: _decode_cs_chat_check_online_request}
	export class cs_chat_check_online_response {
		public onlineStatus: boolean[]; // tag 0
	}

	function _decode_cs_chat_check_online_response(d: SprotoTypeDeserialize) {
		let o = new cs_chat_check_online_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.onlineStatus = d.rba ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_chat_check_online_response(self: cs_chat_check_online_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.onlineStatus != undefined) {
			se.wba (self.onlineStatus, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_chat_check_online_response"] = {en: _encode_cs_chat_check_online_response, de: _decode_cs_chat_check_online_response}
	export class cs_chat_private_send_init_request {
		public targetId: number; // tag 0
	}

	function _decode_cs_chat_private_send_init_request(d: SprotoTypeDeserialize) {
		let o = new cs_chat_private_send_init_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.targetId = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_chat_private_send_init_request(self: cs_chat_private_send_init_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.targetId != undefined) {
			se.wi (self.targetId, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_chat_private_send_init_request"] = {en: _encode_cs_chat_private_send_init_request, de: _decode_cs_chat_private_send_init_request}
	export class cs_chat_send_info_request {
		public type: number; // tag 0
		public str: string; // tag 1
		public recId: number; // tag 2
	}

	function _decode_cs_chat_send_info_request(d: SprotoTypeDeserialize) {
		let o = new cs_chat_send_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.type = d.ri ();
				break;
			case 1:
				o.str = d.rs ();
				break;
			case 2:
				o.recId = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_chat_send_info_request(self: cs_chat_send_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.type != undefined) {
			se.wi (self.type, 0);
		}

		if (self.str != undefined) {
			se.ws (self.str, 1);
		}

		if (self.recId != undefined) {
			se.wi (self.recId, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_chat_send_info_request"] = {en: _encode_cs_chat_send_info_request, de: _decode_cs_chat_send_info_request}
	export class cs_chat_share_info_request {
		public shareId: number; // tag 0
		public params: client_chat_param[]; // tag 1
	}

	function _decode_cs_chat_share_info_request(d: SprotoTypeDeserialize) {
		let o = new cs_chat_share_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.shareId = d.ri ();
				break;
			case 1:
				o.params = d.roa("client_chat_param");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_chat_share_info_request(self: cs_chat_share_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.shareId != undefined) {
			se.wi (self.shareId, 0);
		}

		if (self.params != undefined) {
			se.woa ("client_chat_param", self.params, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_chat_share_info_request"] = {en: _encode_cs_chat_share_info_request, de: _decode_cs_chat_share_info_request}
}

