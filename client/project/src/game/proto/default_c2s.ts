// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_accu_login_get_request {
		public index: number; // tag 0
	}

	function _decode_cs_accu_login_get_request(d: SprotoTypeDeserialize) {
		let o = new cs_accu_login_get_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.index = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_accu_login_get_request(self: cs_accu_login_get_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.index != undefined) {
			se.wi (self.index, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_accu_login_get_request"] = {en: _encode_cs_accu_login_get_request, de: _decode_cs_accu_login_get_request}
	export class cs_baserecord_info_request {
		public type: number; // tag 0
	}

	function _decode_cs_baserecord_info_request(d: SprotoTypeDeserialize) {
		let o = new cs_baserecord_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.type = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_baserecord_info_request(self: cs_baserecord_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.type != undefined) {
			se.wi (self.type, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_baserecord_info_request"] = {en: _encode_cs_baserecord_info_request, de: _decode_cs_baserecord_info_request}
	export class cs_change_player_name_request {
		public name: string; // tag 0
	}

	function _decode_cs_change_player_name_request(d: SprotoTypeDeserialize) {
		let o = new cs_change_player_name_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.name = d.rs ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_change_player_name_request(self: cs_change_player_name_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.name != undefined) {
			se.ws (self.name, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_change_player_name_request"] = {en: _encode_cs_change_player_name_request, de: _decode_cs_change_player_name_request}
	export class cs_create_new_sub_role_request {
		public job: number; // tag 0
		public sex: number; // tag 1
	}

	function _decode_cs_create_new_sub_role_request(d: SprotoTypeDeserialize) {
		let o = new cs_create_new_sub_role_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.job = d.ri ();
				break;
			case 1:
				o.sex = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_create_new_sub_role_request(self: cs_create_new_sub_role_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.job != undefined) {
			se.wi (self.job, 0);
		}

		if (self.sex != undefined) {
			se.wi (self.sex, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_create_new_sub_role_request"] = {en: _encode_cs_create_new_sub_role_request, de: _decode_cs_create_new_sub_role_request}
	export class cs_cross_team_reward_count_request {
	}

	function _decode_cs_cross_team_reward_count_request(d: SprotoTypeDeserialize) {
		let o = new cs_cross_team_reward_count_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_cross_team_reward_count_request(self: cs_cross_team_reward_count_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_cross_team_reward_count_request"] = {en: _encode_cs_cross_team_reward_count_request, de: _decode_cs_cross_team_reward_count_request}
	export class cs_get_gongnengyugao_reward_request {
		public index: number; // tag 0
	}

	function _decode_cs_get_gongnengyugao_reward_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_gongnengyugao_reward_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.index = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_gongnengyugao_reward_request(self: cs_get_gongnengyugao_reward_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.index != undefined) {
			se.wi (self.index, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_gongnengyugao_reward_request"] = {en: _encode_cs_get_gongnengyugao_reward_request, de: _decode_cs_get_gongnengyugao_reward_request}
	export class cs_get_gongnengyugao_reward_response {
		public index: number; // tag 0
	}

	function _decode_cs_get_gongnengyugao_reward_response(d: SprotoTypeDeserialize) {
		let o = new cs_get_gongnengyugao_reward_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.index = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_gongnengyugao_reward_response(self: cs_get_gongnengyugao_reward_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.index != undefined) {
			se.wi (self.index, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_gongnengyugao_reward_response"] = {en: _encode_cs_get_gongnengyugao_reward_response, de: _decode_cs_get_gongnengyugao_reward_response}
	export class cs_get_kefu_qq_response {
		public qq: string; // tag 0
	}

	function _decode_cs_get_kefu_qq_response(d: SprotoTypeDeserialize) {
		let o = new cs_get_kefu_qq_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.qq = d.rs ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_kefu_qq_response(self: cs_get_kefu_qq_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.qq != undefined) {
			se.ws (self.qq, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_kefu_qq_response"] = {en: _encode_cs_get_kefu_qq_response, de: _decode_cs_get_kefu_qq_response}
	export class cs_get_other_actor_equip_request {
		public otherid: number; // tag 0
		public slot: number; // tag 1
	}

	function _decode_cs_get_other_actor_equip_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_other_actor_equip_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			case 1:
				o.slot = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_other_actor_equip_request(self: cs_get_other_actor_equip_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		if (self.slot != undefined) {
			se.wi (self.slot, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_other_actor_equip_request"] = {en: _encode_cs_get_other_actor_equip_request, de: _decode_cs_get_other_actor_equip_request}
	export class cs_get_other_actor_info_request {
		public otherid: number; // tag 0
	}

	function _decode_cs_get_other_actor_info_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_other_actor_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_other_actor_info_request(self: cs_get_other_actor_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_other_actor_info_request"] = {en: _encode_cs_get_other_actor_info_request, de: _decode_cs_get_other_actor_info_request}
	export class cs_get_other_actor_item_request {
		public otherid: number; // tag 0
		public itemhandle: number; // tag 1
	}

	function _decode_cs_get_other_actor_item_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_other_actor_item_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			case 1:
				o.itemhandle = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_other_actor_item_request(self: cs_get_other_actor_item_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		if (self.itemhandle != undefined) {
			se.wi (self.itemhandle, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_other_actor_item_request"] = {en: _encode_cs_get_other_actor_item_request, de: _decode_cs_get_other_actor_item_request}
	export class cs_get_other_actor_pet_request {
		public otherid: number; // tag 0
		public petid: number; // tag 1
	}

	function _decode_cs_get_other_actor_pet_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_other_actor_pet_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			case 1:
				o.petid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_other_actor_pet_request(self: cs_get_other_actor_pet_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		if (self.petid != undefined) {
			se.wi (self.petid, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_other_actor_pet_request"] = {en: _encode_cs_get_other_actor_pet_request, de: _decode_cs_get_other_actor_pet_request}
	export class cs_get_other_actor_spellsRes_request {
		public otherid: number; // tag 0
		public pos: number; // tag 1
	}

	function _decode_cs_get_other_actor_spellsRes_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_other_actor_spellsRes_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			case 1:
				o.pos = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_other_actor_spellsRes_request(self: cs_get_other_actor_spellsRes_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		if (self.pos != undefined) {
			se.wi (self.pos, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_other_actor_spellsRes_request"] = {en: _encode_cs_get_other_actor_spellsRes_request, de: _decode_cs_get_other_actor_spellsRes_request}
	export class cs_get_other_actor_xianlv_request {
		public otherid: number; // tag 0
		public id: number; // tag 1
	}

	function _decode_cs_get_other_actor_xianlv_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_other_actor_xianlv_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			case 1:
				o.id = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_other_actor_xianlv_request(self: cs_get_other_actor_xianlv_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		if (self.id != undefined) {
			se.wi (self.id, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_other_actor_xianlv_request"] = {en: _encode_cs_get_other_actor_xianlv_request, de: _decode_cs_get_other_actor_xianlv_request}
	export class cs_get_server_time_request {
	}

	function _decode_cs_get_server_time_request(d: SprotoTypeDeserialize) {
		let o = new cs_get_server_time_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_get_server_time_request(self: cs_get_server_time_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_get_server_time_request"] = {en: _encode_cs_get_server_time_request, de: _decode_cs_get_server_time_request}
	export class cs_rank_worship_request {
	}

	function _decode_cs_rank_worship_request(d: SprotoTypeDeserialize) {
		let o = new cs_rank_worship_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_rank_worship_request(self: cs_rank_worship_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_rank_worship_request"] = {en: _encode_cs_rank_worship_request, de: _decode_cs_rank_worship_request}
	export class cs_send_client_point_request {
		public point: number; // tag 0
	}

	function _decode_cs_send_client_point_request(d: SprotoTypeDeserialize) {
		let o = new cs_send_client_point_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.point = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_send_client_point_request(self: cs_send_client_point_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.point != undefined) {
			se.wi (self.point, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_send_client_point_request"] = {en: _encode_cs_send_client_point_request, de: _decode_cs_send_client_point_request}
	export class cs_send_heart_beat_request {
	}

	function _decode_cs_send_heart_beat_request(d: SprotoTypeDeserialize) {
		let o = new cs_send_heart_beat_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_send_heart_beat_request(self: cs_send_heart_beat_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_send_heart_beat_request"] = {en: _encode_cs_send_heart_beat_request, de: _decode_cs_send_heart_beat_request}
	export class cs_send_kefu_msg_request {
		public msg: string; // tag 0
	}

	function _decode_cs_send_kefu_msg_request(d: SprotoTypeDeserialize) {
		let o = new cs_send_kefu_msg_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.msg = d.rs ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_send_kefu_msg_request(self: cs_send_kefu_msg_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.msg != undefined) {
			se.ws (self.msg, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_send_kefu_msg_request"] = {en: _encode_cs_send_kefu_msg_request, de: _decode_cs_send_kefu_msg_request}
	export class cs_sene_gm_command_request {
		public cmd: string; // tag 0
	}

	function _decode_cs_sene_gm_command_request(d: SprotoTypeDeserialize) {
		let o = new cs_sene_gm_command_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.cmd = d.rs ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_sene_gm_command_request(self: cs_sene_gm_command_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.cmd != undefined) {
			se.ws (self.cmd, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_sene_gm_command_request"] = {en: _encode_cs_sene_gm_command_request, de: _decode_cs_sene_gm_command_request}
	export class cs_set_clientvalue_request {
		public value: number; // tag 0
		public list: number[]; // tag 1
	}

	function _decode_cs_set_clientvalue_request(d: SprotoTypeDeserialize) {
		let o = new cs_set_clientvalue_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.value = d.ri ();
				break;
			case 1:
				o.list = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_set_clientvalue_request(self: cs_set_clientvalue_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.value != undefined) {
			se.wi (self.value, 0);
		}

		if (self.list != undefined) {
			se.wia (self.list, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_set_clientvalue_request"] = {en: _encode_cs_set_clientvalue_request, de: _decode_cs_set_clientvalue_request}
	export class cs_show_rank_player_request {
		public otherid: number; // tag 0
	}

	function _decode_cs_show_rank_player_request(d: SprotoTypeDeserialize) {
		let o = new cs_show_rank_player_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.otherid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_show_rank_player_request(self: cs_show_rank_player_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.otherid != undefined) {
			se.wi (self.otherid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_show_rank_player_request"] = {en: _encode_cs_show_rank_player_request, de: _decode_cs_show_rank_player_request}
}

