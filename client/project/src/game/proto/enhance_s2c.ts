// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class enhance_data {
		public no: number; // tag 0
		public val: number; // tag 1
	}

	function _decode_enhance_data(d: SprotoTypeDeserialize) {
		let o = new enhance_data;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			case 1:
				o.val = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_enhance_data(self: enhance_data, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		if (self.val != undefined) {
			se.wi (self.val, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["enhance_data"] = {en: _encode_enhance_data, de: _decode_enhance_data}
	export class sc_enhance_add_info_request {
		public no: number; // tag 0
		public val: number; // tag 1
		public point: number; // tag 2
	}

	function _decode_sc_enhance_add_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_enhance_add_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			case 1:
				o.val = d.ri ();
				break;
			case 2:
				o.point = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_enhance_add_info_request(self: sc_enhance_add_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		if (self.val != undefined) {
			se.wi (self.val, 1);
		}

		if (self.point != undefined) {
			se.wi (self.point, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_enhance_add_info_request"] = {en: _encode_sc_enhance_add_info_request, de: _decode_sc_enhance_add_info_request}
	export class sc_enhance_info_request {
		public data: enhance_data[]; // tag 0
		public point: number; // tag 1
		public rewards: number[]; // tag 2
	}

	function _decode_sc_enhance_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_enhance_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.data = d.roa("enhance_data");
				break;
			case 1:
				o.point = d.ri ();
				break;
			case 2:
				o.rewards = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_enhance_info_request(self: sc_enhance_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.data != undefined) {
			se.woa ("enhance_data", self.data, 0);
		}

		if (self.point != undefined) {
			se.wi (self.point, 1);
		}

		if (self.rewards != undefined) {
			se.wia (self.rewards, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_enhance_info_request"] = {en: _encode_sc_enhance_info_request, de: _decode_sc_enhance_info_request}
}

