// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_equip_forge_request {
		public forgeType: number; // tag 0
	}

	function _decode_cs_equip_forge_request(d: SprotoTypeDeserialize) {
		let o = new cs_equip_forge_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.forgeType = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_forge_request(self: cs_equip_forge_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.forgeType != undefined) {
			se.wi (self.forgeType, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_forge_request"] = {en: _encode_cs_equip_forge_request, de: _decode_cs_equip_forge_request}
	export class cs_equip_red_generate_request {
		public slot: number; // tag 0
	}

	function _decode_cs_equip_red_generate_request(d: SprotoTypeDeserialize) {
		let o = new cs_equip_red_generate_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.slot = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_red_generate_request(self: cs_equip_red_generate_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.slot != undefined) {
			se.wi (self.slot, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_red_generate_request"] = {en: _encode_cs_equip_red_generate_request, de: _decode_cs_equip_red_generate_request}
	export class cs_equip_red_inject_request {
		public slot: number; // tag 0
		public mode: number; // tag 1
	}

	function _decode_cs_equip_red_inject_request(d: SprotoTypeDeserialize) {
		let o = new cs_equip_red_inject_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.slot = d.ri ();
				break;
			case 1:
				o.mode = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_red_inject_request(self: cs_equip_red_inject_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.slot != undefined) {
			se.wi (self.slot, 0);
		}

		if (self.mode != undefined) {
			se.wi (self.mode, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_red_inject_request"] = {en: _encode_cs_equip_red_inject_request, de: _decode_cs_equip_red_inject_request}
	export class cs_equip_red_inject_response {
		public ret: boolean; // tag 0
	}

	function _decode_cs_equip_red_inject_response(d: SprotoTypeDeserialize) {
		let o = new cs_equip_red_inject_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_red_inject_response(self: cs_equip_red_inject_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_red_inject_response"] = {en: _encode_cs_equip_red_inject_response, de: _decode_cs_equip_red_inject_response}
	export class cs_equip_red_upgrade_request {
		public slot: number; // tag 0
	}

	function _decode_cs_equip_red_upgrade_request(d: SprotoTypeDeserialize) {
		let o = new cs_equip_red_upgrade_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.slot = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_red_upgrade_request(self: cs_equip_red_upgrade_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.slot != undefined) {
			se.wi (self.slot, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_red_upgrade_request"] = {en: _encode_cs_equip_red_upgrade_request, de: _decode_cs_equip_red_upgrade_request}
	export class cs_equip_upgrade_request {
		public pos: number; // tag 0
		public isgodequip: boolean; // tag 1
	}

	function _decode_cs_equip_upgrade_request(d: SprotoTypeDeserialize) {
		let o = new cs_equip_upgrade_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.pos = d.ri ();
				break;
			case 1:
				o.isgodequip = d.rb ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_upgrade_request(self: cs_equip_upgrade_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.pos != undefined) {
			se.wi (self.pos, 0);
		}

		if (self.isgodequip != undefined) {
			se.wb (self.isgodequip, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_upgrade_request"] = {en: _encode_cs_equip_upgrade_request, de: _decode_cs_equip_upgrade_request}
	export class cs_equip_wear_request {
		public itemHandle: number; // tag 0
		public pos: number; // tag 1
	}

	function _decode_cs_equip_wear_request(d: SprotoTypeDeserialize) {
		let o = new cs_equip_wear_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.itemHandle = d.ri ();
				break;
			case 1:
				o.pos = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_equip_wear_request(self: cs_equip_wear_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.itemHandle != undefined) {
			se.wi (self.itemHandle, 0);
		}

		if (self.pos != undefined) {
			se.wi (self.pos, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_equip_wear_request"] = {en: _encode_cs_equip_wear_request, de: _decode_cs_equip_wear_request}
}

