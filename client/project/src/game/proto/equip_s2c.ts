// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_equip_forge_request {
		public forgeType: number; // tag 0
		public forgeLevel: number[]; // tag 1
	}

	function _decode_sc_equip_forge_request(d: SprotoTypeDeserialize) {
		let o = new sc_equip_forge_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.forgeType = d.ri ();
				break;
			case 1:
				o.forgeLevel = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_equip_forge_request(self: sc_equip_forge_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.forgeType != undefined) {
			se.wi (self.forgeType, 0);
		}

		if (self.forgeLevel != undefined) {
			se.wia (self.forgeLevel, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_equip_forge_request"] = {en: _encode_sc_equip_forge_request, de: _decode_sc_equip_forge_request}
	export class sc_equip_update_data_request {
		public roleID: number; // tag 0
		public equipPos: number; // tag 1
		public data: item_data; // tag 2
		public reddata: equip_red_data; // tag 3
	}

	function _decode_sc_equip_update_data_request(d: SprotoTypeDeserialize) {
		let o = new sc_equip_update_data_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.roleID = d.ri ();
				break;
			case 1:
				o.equipPos = d.ri ();
				break;
			case 2:
				o.data = d.ro("item_data");
				break;
			case 3:
				o.reddata = d.ro("equip_red_data");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_equip_update_data_request(self: sc_equip_update_data_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.roleID != undefined) {
			se.wi (self.roleID, 0);
		}

		if (self.equipPos != undefined) {
			se.wi (self.equipPos, 1);
		}

		if (self.data != undefined) {
			se.wo ("item_data", self.data, 2);
		}

		if (self.reddata != undefined) {
			se.wo ("equip_red_data", self.reddata, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_equip_update_data_request"] = {en: _encode_sc_equip_update_data_request, de: _decode_sc_equip_update_data_request}
	export class sc_equip_update_suitlv_request {
		public suitlv: number; // tag 0
	}

	function _decode_sc_equip_update_suitlv_request(d: SprotoTypeDeserialize) {
		let o = new sc_equip_update_suitlv_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.suitlv = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_equip_update_suitlv_request(self: sc_equip_update_suitlv_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.suitlv != undefined) {
			se.wi (self.suitlv, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_equip_update_suitlv_request"] = {en: _encode_sc_equip_update_suitlv_request, de: _decode_sc_equip_update_suitlv_request}
}

