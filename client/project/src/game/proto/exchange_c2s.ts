// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_exchange_gold_info_request {
	}

	function _decode_cs_exchange_gold_info_request(d: SprotoTypeDeserialize) {
		let o = new cs_exchange_gold_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_exchange_gold_info_request(self: cs_exchange_gold_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_exchange_gold_info_request"] = {en: _encode_cs_exchange_gold_info_request, de: _decode_cs_exchange_gold_info_request}
	export class cs_exchange_gold_info_response {
		public exchangeCount: number; // tag 0
		public goldnum: number; // tag 1
	}

	function _decode_cs_exchange_gold_info_response(d: SprotoTypeDeserialize) {
		let o = new cs_exchange_gold_info_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.exchangeCount = d.ri ();
				break;
			case 1:
				o.goldnum = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_exchange_gold_info_response(self: cs_exchange_gold_info_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.exchangeCount != undefined) {
			se.wi (self.exchangeCount, 0);
		}

		if (self.goldnum != undefined) {
			se.wi (self.goldnum, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_exchange_gold_info_response"] = {en: _encode_cs_exchange_gold_info_response, de: _decode_cs_exchange_gold_info_response}
	export class cs_exchange_gold_perform_request {
	}

	function _decode_cs_exchange_gold_perform_request(d: SprotoTypeDeserialize) {
		let o = new cs_exchange_gold_perform_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_exchange_gold_perform_request(self: cs_exchange_gold_perform_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_exchange_gold_perform_request"] = {en: _encode_cs_exchange_gold_perform_request, de: _decode_cs_exchange_gold_perform_request}
	export class cs_exchange_gold_perform_response {
		public ret: boolean; // tag 0
		public exchangeCount: number; // tag 1
	}

	function _decode_cs_exchange_gold_perform_response(d: SprotoTypeDeserialize) {
		let o = new cs_exchange_gold_perform_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.exchangeCount = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_exchange_gold_perform_response(self: cs_exchange_gold_perform_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.exchangeCount != undefined) {
			se.wi (self.exchangeCount, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_exchange_gold_perform_response"] = {en: _encode_cs_exchange_gold_perform_response, de: _decode_cs_exchange_gold_perform_response}
}

