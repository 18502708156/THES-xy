// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_guildboss_challenge_request {
		public challengeid: number; // tag 0
	}

	function _decode_cs_guildboss_challenge_request(d: SprotoTypeDeserialize) {
		let o = new cs_guildboss_challenge_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.challengeid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_guildboss_challenge_request(self: cs_guildboss_challenge_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.challengeid != undefined) {
			se.wi (self.challengeid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_guildboss_challenge_request"] = {en: _encode_cs_guildboss_challenge_request, de: _decode_cs_guildboss_challenge_request}
	export class cs_guildboss_collect_box_start_request {
		public boxid: number; // tag 0
	}

	function _decode_cs_guildboss_collect_box_start_request(d: SprotoTypeDeserialize) {
		let o = new cs_guildboss_collect_box_start_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.boxid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_guildboss_collect_box_start_request(self: cs_guildboss_collect_box_start_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.boxid != undefined) {
			se.wi (self.boxid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_guildboss_collect_box_start_request"] = {en: _encode_cs_guildboss_collect_box_start_request, de: _decode_cs_guildboss_collect_box_start_request}
	export class cs_guildboss_get_rewards_response {
		public success: boolean; // tag 0
	}

	function _decode_cs_guildboss_get_rewards_response(d: SprotoTypeDeserialize) {
		let o = new cs_guildboss_get_rewards_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.success = d.rb ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_guildboss_get_rewards_response(self: cs_guildboss_get_rewards_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.success != undefined) {
			se.wb (self.success, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_guildboss_get_rewards_response"] = {en: _encode_cs_guildboss_get_rewards_response, de: _decode_cs_guildboss_get_rewards_response}
}

