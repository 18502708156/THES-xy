// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_money_recharge_gift_info_request {
		public day: number; // tag 0
		public awards: number[]; // tag 1
	}

	function _decode_sc_money_recharge_gift_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_money_recharge_gift_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.day = d.ri ();
				break;
			case 1:
				o.awards = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_money_recharge_gift_info_request(self: sc_money_recharge_gift_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.day != undefined) {
			se.wi (self.day, 0);
		}

		if (self.awards != undefined) {
			se.wia (self.awards, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_money_recharge_gift_info_request"] = {en: _encode_sc_money_recharge_gift_info_request, de: _decode_sc_money_recharge_gift_info_request}
	export class sc_money_tree_info_request {
		public playNum: number; // tag 0
		public boxOn: number; // tag 1
		public addCoefficient: number; // tag 2
		public exp: number; // tag 3
		public boxInfo: number; // tag 4
	}

	function _decode_sc_money_tree_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_money_tree_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.playNum = d.ri ();
				break;
			case 1:
				o.boxOn = d.ri ();
				break;
			case 2:
				o.addCoefficient = d.ri ();
				break;
			case 3:
				o.exp = d.ri ();
				break;
			case 4:
				o.boxInfo = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_money_tree_info_request(self: sc_money_tree_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 5);

		if (self.playNum != undefined) {
			se.wi (self.playNum, 0);
		}

		if (self.boxOn != undefined) {
			se.wi (self.boxOn, 1);
		}

		if (self.addCoefficient != undefined) {
			se.wi (self.addCoefficient, 2);
		}

		if (self.exp != undefined) {
			se.wi (self.exp, 3);
		}

		if (self.boxInfo != undefined) {
			se.wi (self.boxInfo, 4);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_money_tree_info_request"] = {en: _encode_sc_money_tree_info_request, de: _decode_sc_money_tree_info_request}
	export class sc_money_tree_play_info_request {
		public playNum: number; // tag 0
		public boxOn: number; // tag 1
		public addCoefficient: number; // tag 2
		public exp: number; // tag 3
		public baoji: number; // tag 4
	}

	function _decode_sc_money_tree_play_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_money_tree_play_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.playNum = d.ri ();
				break;
			case 1:
				o.boxOn = d.ri ();
				break;
			case 2:
				o.addCoefficient = d.ri ();
				break;
			case 3:
				o.exp = d.ri ();
				break;
			case 4:
				o.baoji = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_money_tree_play_info_request(self: sc_money_tree_play_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 5);

		if (self.playNum != undefined) {
			se.wi (self.playNum, 0);
		}

		if (self.boxOn != undefined) {
			se.wi (self.boxOn, 1);
		}

		if (self.addCoefficient != undefined) {
			se.wi (self.addCoefficient, 2);
		}

		if (self.exp != undefined) {
			se.wi (self.exp, 3);
		}

		if (self.baoji != undefined) {
			se.wi (self.baoji, 4);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_money_tree_play_info_request"] = {en: _encode_sc_money_tree_play_info_request, de: _decode_sc_money_tree_play_info_request}
	export class sc_money_tree_reward_info_request {
		public boxInfo: number; // tag 0
	}

	function _decode_sc_money_tree_reward_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_money_tree_reward_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.boxInfo = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_money_tree_reward_info_request(self: sc_money_tree_reward_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.boxInfo != undefined) {
			se.wi (self.boxInfo, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_money_tree_reward_info_request"] = {en: _encode_sc_money_tree_reward_info_request, de: _decode_sc_money_tree_reward_info_request}
	export class sc_qdday_reward_info_request {
		public qdday: number; // tag 0
		public bqday: number; // tag 1
		public drawBin: number; // tag 2
		public isqd: number; // tag 3
	}

	function _decode_sc_qdday_reward_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_qdday_reward_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.qdday = d.ri ();
				break;
			case 1:
				o.bqday = d.ri ();
				break;
			case 2:
				o.drawBin = d.ri ();
				break;
			case 3:
				o.isqd = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_qdday_reward_info_request(self: sc_qdday_reward_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.qdday != undefined) {
			se.wi (self.qdday, 0);
		}

		if (self.bqday != undefined) {
			se.wi (self.bqday, 1);
		}

		if (self.drawBin != undefined) {
			se.wi (self.drawBin, 2);
		}

		if (self.isqd != undefined) {
			se.wi (self.isqd, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_qdday_reward_info_request"] = {en: _encode_sc_qdday_reward_info_request, de: _decode_sc_qdday_reward_info_request}
}

