// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class position_data {
		public no: number; // tag 0
		public typ: number; // tag 1
	}

	function _decode_position_data(d: SprotoTypeDeserialize) {
		let o = new position_data;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			case 1:
				o.typ = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_position_data(self: position_data, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		if (self.typ != undefined) {
			se.wi (self.typ, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["position_data"] = {en: _encode_position_data, de: _decode_position_data}
	export class sc_position_info_request {
		public creatTime: number; // tag 0
		public data: position_data[]; // tag 1
	}

	function _decode_sc_position_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_position_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.creatTime = d.ri ();
				break;
			case 1:
				o.data = d.roa("position_data");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_position_info_request(self: sc_position_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.creatTime != undefined) {
			se.wi (self.creatTime, 0);
		}

		if (self.data != undefined) {
			se.woa ("position_data", self.data, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_position_info_request"] = {en: _encode_sc_position_info_request, de: _decode_sc_position_info_request}
}

