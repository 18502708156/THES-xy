// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_recharge_first_reward_request {
		public id: number; // tag 0
	}

	function _decode_cs_recharge_first_reward_request(d: SprotoTypeDeserialize) {
		let o = new cs_recharge_first_reward_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_recharge_first_reward_request(self: cs_recharge_first_reward_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_recharge_first_reward_request"] = {en: _encode_cs_recharge_first_reward_request, de: _decode_cs_recharge_first_reward_request}
	export class cs_recharge_get_choice_reward_request {
	}

	function _decode_cs_recharge_get_choice_reward_request(d: SprotoTypeDeserialize) {
		let o = new cs_recharge_get_choice_reward_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_recharge_get_choice_reward_request(self: cs_recharge_get_choice_reward_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 0);

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_recharge_get_choice_reward_request"] = {en: _encode_cs_recharge_get_choice_reward_request, de: _decode_cs_recharge_get_choice_reward_request}
	export class cs_recharge_get_dailyrecharge_reward_request {
		public rewardid: number; // tag 0
	}

	function _decode_cs_recharge_get_dailyrecharge_reward_request(d: SprotoTypeDeserialize) {
		let o = new cs_recharge_get_dailyrecharge_reward_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.rewardid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_recharge_get_dailyrecharge_reward_request(self: cs_recharge_get_dailyrecharge_reward_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.rewardid != undefined) {
			se.wi (self.rewardid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_recharge_get_dailyrecharge_reward_request"] = {en: _encode_cs_recharge_get_dailyrecharge_reward_request, de: _decode_cs_recharge_get_dailyrecharge_reward_request}
	export class cs_recharge_get_order_number_response {
		public order_number: number; // tag 0
	}

	function _decode_cs_recharge_get_order_number_response(d: SprotoTypeDeserialize) {
		let o = new cs_recharge_get_order_number_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.order_number = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_recharge_get_order_number_response(self: cs_recharge_get_order_number_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.order_number != undefined) {
			se.wi (self.order_number, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_recharge_get_order_number_response"] = {en: _encode_cs_recharge_get_order_number_response, de: _decode_cs_recharge_get_order_number_response}
	export class cs_recharge_normal_request {
		public rechargeid: number; // tag 0
	}

	function _decode_cs_recharge_normal_request(d: SprotoTypeDeserialize) {
		let o = new cs_recharge_normal_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.rechargeid = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_recharge_normal_request(self: cs_recharge_normal_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.rechargeid != undefined) {
			se.wi (self.rechargeid, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_recharge_normal_request"] = {en: _encode_cs_recharge_normal_request, de: _decode_cs_recharge_normal_request}
}

