// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_rechargew_getawards_request {
		public payType: number; // tag 0
		public gid: number; // tag 1
		public index: number; // tag 2
	}

	function _decode_cs_rechargew_getawards_request(d: SprotoTypeDeserialize) {
		let o = new cs_rechargew_getawards_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.payType = d.ri ();
				break;
			case 1:
				o.gid = d.ri ();
				break;
			case 2:
				o.index = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_rechargew_getawards_request(self: cs_rechargew_getawards_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.payType != undefined) {
			se.wi (self.payType, 0);
		}

		if (self.gid != undefined) {
			se.wi (self.gid, 1);
		}

		if (self.index != undefined) {
			se.wi (self.index, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_rechargew_getawards_request"] = {en: _encode_cs_rechargew_getawards_request, de: _decode_cs_rechargew_getawards_request}
	export class cs_rechargew_setpop_request {
		public payType: number; // tag 0
		public gid: number; // tag 1
		public nopop: boolean; // tag 2
	}

	function _decode_cs_rechargew_setpop_request(d: SprotoTypeDeserialize) {
		let o = new cs_rechargew_setpop_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.payType = d.ri ();
				break;
			case 1:
				o.gid = d.ri ();
				break;
			case 2:
				o.nopop = d.rb ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_rechargew_setpop_request(self: cs_rechargew_setpop_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.payType != undefined) {
			se.wi (self.payType, 0);
		}

		if (self.gid != undefined) {
			se.wi (self.gid, 1);
		}

		if (self.nopop != undefined) {
			se.wb (self.nopop, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_rechargew_setpop_request"] = {en: _encode_cs_rechargew_setpop_request, de: _decode_cs_rechargew_setpop_request}
}

