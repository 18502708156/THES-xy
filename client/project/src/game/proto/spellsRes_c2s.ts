// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_spellsRes_lock_request {
		public lock: number; // tag 0
		public spellsId: number; // tag 1
	}

	function _decode_cs_spellsRes_lock_request(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_lock_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.lock = d.ri ();
				break;
			case 1:
				o.spellsId = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_lock_request(self: cs_spellsRes_lock_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.lock != undefined) {
			se.wi (self.lock, 0);
		}

		if (self.spellsId != undefined) {
			se.wi (self.spellsId, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_lock_request"] = {en: _encode_cs_spellsRes_lock_request, de: _decode_cs_spellsRes_lock_request}
	export class cs_spellsRes_lock_response {
		public ret: boolean; // tag 0
		public spellsId: number; // tag 1
		public lock: number; // tag 2
	}

	function _decode_cs_spellsRes_lock_response(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_lock_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.spellsId = d.ri ();
				break;
			case 2:
				o.lock = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_lock_response(self: cs_spellsRes_lock_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.spellsId != undefined) {
			se.wi (self.spellsId, 1);
		}

		if (self.lock != undefined) {
			se.wi (self.lock, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_lock_response"] = {en: _encode_cs_spellsRes_lock_response, de: _decode_cs_spellsRes_lock_response}
	export class cs_spellsRes_make_request {
		public makeType: number; // tag 0
		public autoBuy: number; // tag 1
	}

	function _decode_cs_spellsRes_make_request(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_make_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.makeType = d.ri ();
				break;
			case 1:
				o.autoBuy = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_make_request(self: cs_spellsRes_make_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.makeType != undefined) {
			se.wi (self.makeType, 0);
		}

		if (self.autoBuy != undefined) {
			se.wi (self.autoBuy, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_make_request"] = {en: _encode_cs_spellsRes_make_request, de: _decode_cs_spellsRes_make_request}
	export class cs_spellsRes_make_response {
		public ret: boolean; // tag 0
		public spellsId: number; // tag 1
		public spellsNo: number; // tag 2
		public num: number; // tag 3
		public perfectNum: number; // tag 4
		public skillList: number[]; // tag 5
	}

	function _decode_cs_spellsRes_make_response(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_make_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.spellsId = d.ri ();
				break;
			case 2:
				o.spellsNo = d.ri ();
				break;
			case 3:
				o.num = d.ri ();
				break;
			case 4:
				o.perfectNum = d.ri ();
				break;
			case 5:
				o.skillList = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_make_response(self: cs_spellsRes_make_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 6);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.spellsId != undefined) {
			se.wi (self.spellsId, 1);
		}

		if (self.spellsNo != undefined) {
			se.wi (self.spellsNo, 2);
		}

		if (self.num != undefined) {
			se.wi (self.num, 3);
		}

		if (self.perfectNum != undefined) {
			se.wi (self.perfectNum, 4);
		}

		if (self.skillList != undefined) {
			se.wia (self.skillList, 5);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_make_response"] = {en: _encode_cs_spellsRes_make_response, de: _decode_cs_spellsRes_make_response}
	export class cs_spellsRes_smelt_request {
		public spellsIdList: number[]; // tag 0
	}

	function _decode_cs_spellsRes_smelt_request(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_smelt_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.spellsIdList = d.ria ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_smelt_request(self: cs_spellsRes_smelt_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.spellsIdList != undefined) {
			se.wia (self.spellsIdList, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_smelt_request"] = {en: _encode_cs_spellsRes_smelt_request, de: _decode_cs_spellsRes_smelt_request}
	export class cs_spellsRes_smelt_response {
		public spellsIdList: number[]; // tag 0
		public num: number; // tag 1
	}

	function _decode_cs_spellsRes_smelt_response(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_smelt_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.spellsIdList = d.ria ();
				break;
			case 1:
				o.num = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_smelt_response(self: cs_spellsRes_smelt_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.spellsIdList != undefined) {
			se.wia (self.spellsIdList, 0);
		}

		if (self.num != undefined) {
			se.wi (self.num, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_smelt_response"] = {en: _encode_cs_spellsRes_smelt_response, de: _decode_cs_spellsRes_smelt_response}
	export class cs_spellsRes_up_lv_request {
		public pos: number; // tag 0
		public autoBuy: number; // tag 1
	}

	function _decode_cs_spellsRes_up_lv_request(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_up_lv_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.pos = d.ri ();
				break;
			case 1:
				o.autoBuy = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_up_lv_request(self: cs_spellsRes_up_lv_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.pos != undefined) {
			se.wi (self.pos, 0);
		}

		if (self.autoBuy != undefined) {
			se.wi (self.autoBuy, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_up_lv_request"] = {en: _encode_cs_spellsRes_up_lv_request, de: _decode_cs_spellsRes_up_lv_request}
	export class cs_spellsRes_up_lv_response {
		public ret: boolean; // tag 0
		public pos: number; // tag 1
		public lv: number; // tag 2
	}

	function _decode_cs_spellsRes_up_lv_response(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_up_lv_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.pos = d.ri ();
				break;
			case 2:
				o.lv = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_up_lv_response(self: cs_spellsRes_up_lv_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.pos != undefined) {
			se.wi (self.pos, 1);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_up_lv_response"] = {en: _encode_cs_spellsRes_up_lv_response, de: _decode_cs_spellsRes_up_lv_response}
	export class cs_spellsRes_use_request {
		public pos: number; // tag 0
		public spellsId: number; // tag 1
	}

	function _decode_cs_spellsRes_use_request(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_use_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.pos = d.ri ();
				break;
			case 1:
				o.spellsId = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_use_request(self: cs_spellsRes_use_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.pos != undefined) {
			se.wi (self.pos, 0);
		}

		if (self.spellsId != undefined) {
			se.wi (self.spellsId, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_use_request"] = {en: _encode_cs_spellsRes_use_request, de: _decode_cs_spellsRes_use_request}
	export class cs_spellsRes_use_response {
		public ret: boolean; // tag 0
		public pos: number; // tag 1
		public useSpellsNo: number; // tag 2
		public spellsId: number; // tag 3
		public spellsNo: number; // tag 4
		public useSkillList: number[]; // tag 5
		public oldSkillList: number[]; // tag 6
		public lock: number; // tag 7
		public num: number; // tag 8
	}

	function _decode_cs_spellsRes_use_response(d: SprotoTypeDeserialize) {
		let o = new cs_spellsRes_use_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.pos = d.ri ();
				break;
			case 2:
				o.useSpellsNo = d.ri ();
				break;
			case 3:
				o.spellsId = d.ri ();
				break;
			case 4:
				o.spellsNo = d.ri ();
				break;
			case 5:
				o.useSkillList = d.ria ();
				break;
			case 6:
				o.oldSkillList = d.ria ();
				break;
			case 7:
				o.lock = d.ri ();
				break;
			case 8:
				o.num = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_spellsRes_use_response(self: cs_spellsRes_use_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 9);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.pos != undefined) {
			se.wi (self.pos, 1);
		}

		if (self.useSpellsNo != undefined) {
			se.wi (self.useSpellsNo, 2);
		}

		if (self.spellsId != undefined) {
			se.wi (self.spellsId, 3);
		}

		if (self.spellsNo != undefined) {
			se.wi (self.spellsNo, 4);
		}

		if (self.useSkillList != undefined) {
			se.wia (self.useSkillList, 5);
		}

		if (self.oldSkillList != undefined) {
			se.wia (self.oldSkillList, 6);
		}

		if (self.lock != undefined) {
			se.wi (self.lock, 7);
		}

		if (self.num != undefined) {
			se.wi (self.num, 8);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_spellsRes_use_response"] = {en: _encode_cs_spellsRes_use_response, de: _decode_cs_spellsRes_use_response}
}

