// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_tiannv_equip_request {
		public data: tiannv_equip_data[]; // tag 0
	}

	function _decode_sc_tiannv_equip_request(d: SprotoTypeDeserialize) {
		let o = new sc_tiannv_equip_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.data = d.roa("tiannv_equip_data");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_tiannv_equip_request(self: sc_tiannv_equip_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.data != undefined) {
			se.woa ("tiannv_equip_data", self.data, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_tiannv_equip_request"] = {en: _encode_sc_tiannv_equip_request, de: _decode_sc_tiannv_equip_request}
	export class sc_tiannv_wash_replace_res_request {
		public pos: number; // tag 0
		public attrData: tiannv_attrs_data[]; // tag 1
		public washData: tiannv_attrs_data[]; // tag 2
	}

	function _decode_sc_tiannv_wash_replace_res_request(d: SprotoTypeDeserialize) {
		let o = new sc_tiannv_wash_replace_res_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.pos = d.ri ();
				break;
			case 1:
				o.attrData = d.roa("tiannv_attrs_data");
				break;
			case 2:
				o.washData = d.roa("tiannv_attrs_data");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_tiannv_wash_replace_res_request(self: sc_tiannv_wash_replace_res_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.pos != undefined) {
			se.wi (self.pos, 0);
		}

		if (self.attrData != undefined) {
			se.woa ("tiannv_attrs_data", self.attrData, 1);
		}

		if (self.washData != undefined) {
			se.woa ("tiannv_attrs_data", self.washData, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_tiannv_wash_replace_res_request"] = {en: _encode_sc_tiannv_wash_replace_res_request, de: _decode_sc_tiannv_wash_replace_res_request}
	export class sc_tiannv_wash_res_request {
		public pos: number; // tag 0
		public washNum: number; // tag 1
		public attrData: tiannv_attrs_data[]; // tag 2
		public washData: tiannv_attrs_data[]; // tag 3
	}

	function _decode_sc_tiannv_wash_res_request(d: SprotoTypeDeserialize) {
		let o = new sc_tiannv_wash_res_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.pos = d.ri ();
				break;
			case 1:
				o.washNum = d.ri ();
				break;
			case 2:
				o.attrData = d.roa("tiannv_attrs_data");
				break;
			case 3:
				o.washData = d.roa("tiannv_attrs_data");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_tiannv_wash_res_request(self: sc_tiannv_wash_res_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.pos != undefined) {
			se.wi (self.pos, 0);
		}

		if (self.washNum != undefined) {
			se.wi (self.washNum, 1);
		}

		if (self.attrData != undefined) {
			se.woa ("tiannv_attrs_data", self.attrData, 2);
		}

		if (self.washData != undefined) {
			se.woa ("tiannv_attrs_data", self.washData, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_tiannv_wash_res_request"] = {en: _encode_sc_tiannv_wash_res_request, de: _decode_sc_tiannv_wash_res_request}
	export class tiannv_attrs_data {
		public type: number; // tag 0
		public attrs: number; // tag 1
		public skillNo: number; // tag 2
	}

	function _decode_tiannv_attrs_data(d: SprotoTypeDeserialize) {
		let o = new tiannv_attrs_data;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.type = d.ri ();
				break;
			case 1:
				o.attrs = d.ri ();
				break;
			case 2:
				o.skillNo = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_tiannv_attrs_data(self: tiannv_attrs_data, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.type != undefined) {
			se.wi (self.type, 0);
		}

		if (self.attrs != undefined) {
			se.wi (self.attrs, 1);
		}

		if (self.skillNo != undefined) {
			se.wi (self.skillNo, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["tiannv_attrs_data"] = {en: _encode_tiannv_attrs_data, de: _decode_tiannv_attrs_data}
	export class tiannv_equip_data {
		public washNum: number; // tag 0
		public attrData: tiannv_attrs_data[]; // tag 1
		public washData: tiannv_attrs_data[]; // tag 2
	}

	function _decode_tiannv_equip_data(d: SprotoTypeDeserialize) {
		let o = new tiannv_equip_data;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.washNum = d.ri ();
				break;
			case 1:
				o.attrData = d.roa("tiannv_attrs_data");
				break;
			case 2:
				o.washData = d.roa("tiannv_attrs_data");
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_tiannv_equip_data(self: tiannv_equip_data, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.washNum != undefined) {
			se.wi (self.washNum, 0);
		}

		if (self.attrData != undefined) {
			se.woa ("tiannv_attrs_data", self.attrData, 1);
		}

		if (self.washData != undefined) {
			se.woa ("tiannv_attrs_data", self.washData, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["tiannv_equip_data"] = {en: _encode_tiannv_equip_data, de: _decode_tiannv_equip_data}
}

