// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_tianshen_activation_request {
		public no: number; // tag 0
	}

	function _decode_cs_tianshen_activation_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_activation_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_activation_request(self: cs_tianshen_activation_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_activation_request"] = {en: _encode_cs_tianshen_activation_request, de: _decode_cs_tianshen_activation_request}
	export class cs_tianshen_activation_response {
		public ret: boolean; // tag 0
		public no: number; // tag 1
		public lv: number; // tag 2
		public upNum: number; // tag 3
		public promotion: number; // tag 4
	}

	function _decode_cs_tianshen_activation_response(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_activation_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.no = d.ri ();
				break;
			case 2:
				o.lv = d.ri ();
				break;
			case 3:
				o.upNum = d.ri ();
				break;
			case 4:
				o.promotion = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_activation_response(self: cs_tianshen_activation_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 5);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.no != undefined) {
			se.wi (self.no, 1);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 2);
		}

		if (self.upNum != undefined) {
			se.wi (self.upNum, 3);
		}

		if (self.promotion != undefined) {
			se.wi (self.promotion, 4);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_activation_response"] = {en: _encode_cs_tianshen_activation_response, de: _decode_cs_tianshen_activation_response}
	export class cs_tianshen_drug_request {
		public useNum: number; // tag 0
	}

	function _decode_cs_tianshen_drug_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_drug_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.useNum = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_drug_request(self: cs_tianshen_drug_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.useNum != undefined) {
			se.wi (self.useNum, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_drug_request"] = {en: _encode_cs_tianshen_drug_request, de: _decode_cs_tianshen_drug_request}
	export class cs_tianshen_drug_response {
		public ret: boolean; // tag 0
		public drugNum: number; // tag 1
	}

	function _decode_cs_tianshen_drug_response(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_drug_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.drugNum = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_drug_response(self: cs_tianshen_drug_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.drugNum != undefined) {
			se.wi (self.drugNum, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_drug_response"] = {en: _encode_cs_tianshen_drug_response, de: _decode_cs_tianshen_drug_response}
	export class cs_tianshen_exchange_request {
		public no: number; // tag 0
	}

	function _decode_cs_tianshen_exchange_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_exchange_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_exchange_request(self: cs_tianshen_exchange_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_exchange_request"] = {en: _encode_cs_tianshen_exchange_request, de: _decode_cs_tianshen_exchange_request}
	export class cs_tianshen_fight_request {
		public no: number; // tag 0
		public warType: number; // tag 1
	}

	function _decode_cs_tianshen_fight_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_fight_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			case 1:
				o.warType = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_fight_request(self: cs_tianshen_fight_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		if (self.warType != undefined) {
			se.wi (self.warType, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_fight_request"] = {en: _encode_cs_tianshen_fight_request, de: _decode_cs_tianshen_fight_request}
	export class cs_tianshen_fight_response {
		public ret: boolean; // tag 0
		public use: number; // tag 1
		public disuse: number; // tag 2
	}

	function _decode_cs_tianshen_fight_response(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_fight_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.use = d.ri ();
				break;
			case 2:
				o.disuse = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_fight_response(self: cs_tianshen_fight_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.use != undefined) {
			se.wi (self.use, 1);
		}

		if (self.disuse != undefined) {
			se.wi (self.disuse, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_fight_response"] = {en: _encode_cs_tianshen_fight_response, de: _decode_cs_tianshen_fight_response}
	export class cs_tianshen_promotion_request {
		public no: number; // tag 0
	}

	function _decode_cs_tianshen_promotion_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_promotion_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_promotion_request(self: cs_tianshen_promotion_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_promotion_request"] = {en: _encode_cs_tianshen_promotion_request, de: _decode_cs_tianshen_promotion_request}
	export class cs_tianshen_promotion_response {
		public ret: boolean; // tag 0
		public no: number; // tag 1
		public promotion: number; // tag 2
	}

	function _decode_cs_tianshen_promotion_response(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_promotion_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.no = d.ri ();
				break;
			case 2:
				o.promotion = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_promotion_response(self: cs_tianshen_promotion_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.no != undefined) {
			se.wi (self.no, 1);
		}

		if (self.promotion != undefined) {
			se.wi (self.promotion, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_promotion_response"] = {en: _encode_cs_tianshen_promotion_response, de: _decode_cs_tianshen_promotion_response}
	export class cs_tianshen_spells_request {
		public pos: number; // tag 0
		public autoBuy: number; // tag 1
	}

	function _decode_cs_tianshen_spells_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_spells_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.pos = d.ri ();
				break;
			case 1:
				o.autoBuy = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_spells_request(self: cs_tianshen_spells_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.pos != undefined) {
			se.wi (self.pos, 0);
		}

		if (self.autoBuy != undefined) {
			se.wi (self.autoBuy, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_spells_request"] = {en: _encode_cs_tianshen_spells_request, de: _decode_cs_tianshen_spells_request}
	export class cs_tianshen_spells_response {
		public ret: boolean; // tag 0
		public pos: number; // tag 1
		public upNum: number; // tag 2
		public lv: number; // tag 3
	}

	function _decode_cs_tianshen_spells_response(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_spells_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.pos = d.ri ();
				break;
			case 2:
				o.upNum = d.ri ();
				break;
			case 3:
				o.lv = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_spells_response(self: cs_tianshen_spells_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.pos != undefined) {
			se.wi (self.pos, 1);
		}

		if (self.upNum != undefined) {
			se.wi (self.upNum, 2);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_spells_response"] = {en: _encode_cs_tianshen_spells_response, de: _decode_cs_tianshen_spells_response}
	export class cs_tianshen_up_level_request {
		public no: number; // tag 0
		public autoBuy: number; // tag 1
	}

	function _decode_cs_tianshen_up_level_request(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_up_level_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.no = d.ri ();
				break;
			case 1:
				o.autoBuy = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_up_level_request(self: cs_tianshen_up_level_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.no != undefined) {
			se.wi (self.no, 0);
		}

		if (self.autoBuy != undefined) {
			se.wi (self.autoBuy, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_up_level_request"] = {en: _encode_cs_tianshen_up_level_request, de: _decode_cs_tianshen_up_level_request}
	export class cs_tianshen_up_level_response {
		public ret: boolean; // tag 0
		public no: number; // tag 1
		public lv: number; // tag 2
		public upNum: number; // tag 3
	}

	function _decode_cs_tianshen_up_level_response(d: SprotoTypeDeserialize) {
		let o = new cs_tianshen_up_level_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.no = d.ri ();
				break;
			case 2:
				o.lv = d.ri ();
				break;
			case 3:
				o.upNum = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_tianshen_up_level_response(self: cs_tianshen_up_level_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.no != undefined) {
			se.wi (self.no, 1);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 2);
		}

		if (self.upNum != undefined) {
			se.wi (self.upNum, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_tianshen_up_level_response"] = {en: _encode_cs_tianshen_up_level_response, de: _decode_cs_tianshen_up_level_response}
}

