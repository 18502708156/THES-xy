// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class cs_totems_add_exp_request {
		public id: number; // tag 0
		public num: number; // tag 1
		public autobuy: number; // tag 2
	}

	function _decode_cs_totems_add_exp_request(d: SprotoTypeDeserialize) {
		let o = new cs_totems_add_exp_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			case 1:
				o.num = d.ri ();
				break;
			case 2:
				o.autobuy = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_totems_add_exp_request(self: cs_totems_add_exp_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		if (self.num != undefined) {
			se.wi (self.num, 1);
		}

		if (self.autobuy != undefined) {
			se.wi (self.autobuy, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_totems_add_exp_request"] = {en: _encode_cs_totems_add_exp_request, de: _decode_cs_totems_add_exp_request}
	export class cs_totems_add_exp_response {
		public ret: boolean; // tag 0
		public id: number; // tag 1
		public lv: number; // tag 2
		public upNum: number; // tag 3
		public todayNum: number; // tag 4
		public todayId: number; // tag 5
		public breach: number; // tag 6
	}

	function _decode_cs_totems_add_exp_response(d: SprotoTypeDeserialize) {
		let o = new cs_totems_add_exp_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.id = d.ri ();
				break;
			case 2:
				o.lv = d.ri ();
				break;
			case 3:
				o.upNum = d.ri ();
				break;
			case 4:
				o.todayNum = d.ri ();
				break;
			case 5:
				o.todayId = d.ri ();
				break;
			case 6:
				o.breach = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_totems_add_exp_response(self: cs_totems_add_exp_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 7);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.id != undefined) {
			se.wi (self.id, 1);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 2);
		}

		if (self.upNum != undefined) {
			se.wi (self.upNum, 3);
		}

		if (self.todayNum != undefined) {
			se.wi (self.todayNum, 4);
		}

		if (self.todayId != undefined) {
			se.wi (self.todayId, 5);
		}

		if (self.breach != undefined) {
			se.wi (self.breach, 6);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_totems_add_exp_response"] = {en: _encode_cs_totems_add_exp_response, de: _decode_cs_totems_add_exp_response}
	export class cs_totems_breach_request {
		public id: number; // tag 0
	}

	function _decode_cs_totems_breach_request(d: SprotoTypeDeserialize) {
		let o = new cs_totems_breach_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_totems_breach_request(self: cs_totems_breach_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_totems_breach_request"] = {en: _encode_cs_totems_breach_request, de: _decode_cs_totems_breach_request}
	export class cs_totems_breach_response {
		public ret: boolean; // tag 0
		public id: number; // tag 1
		public lv: number; // tag 2
		public upNum: number; // tag 3
		public todayNum: number; // tag 4
		public todayId: number; // tag 5
		public breach: number; // tag 6
	}

	function _decode_cs_totems_breach_response(d: SprotoTypeDeserialize) {
		let o = new cs_totems_breach_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.id = d.ri ();
				break;
			case 2:
				o.lv = d.ri ();
				break;
			case 3:
				o.upNum = d.ri ();
				break;
			case 4:
				o.todayNum = d.ri ();
				break;
			case 5:
				o.todayId = d.ri ();
				break;
			case 6:
				o.breach = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_totems_breach_response(self: cs_totems_breach_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 7);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.id != undefined) {
			se.wi (self.id, 1);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 2);
		}

		if (self.upNum != undefined) {
			se.wi (self.upNum, 3);
		}

		if (self.todayNum != undefined) {
			se.wi (self.todayNum, 4);
		}

		if (self.todayId != undefined) {
			se.wi (self.todayId, 5);
		}

		if (self.breach != undefined) {
			se.wi (self.breach, 6);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_totems_breach_response"] = {en: _encode_cs_totems_breach_response, de: _decode_cs_totems_breach_response}
	export class cs_totems_open_request {
		public id: number; // tag 0
	}

	function _decode_cs_totems_open_request(d: SprotoTypeDeserialize) {
		let o = new cs_totems_open_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_totems_open_request(self: cs_totems_open_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 1);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_totems_open_request"] = {en: _encode_cs_totems_open_request, de: _decode_cs_totems_open_request}
	export class cs_totems_open_response {
		public ret: boolean; // tag 0
		public id: number; // tag 1
		public lv: number; // tag 2
		public upNum: number; // tag 3
		public todayNum: number; // tag 4
		public todayId: number; // tag 5
		public breach: number; // tag 6
	}

	function _decode_cs_totems_open_response(d: SprotoTypeDeserialize) {
		let o = new cs_totems_open_response;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.ret = d.rb ();
				break;
			case 1:
				o.id = d.ri ();
				break;
			case 2:
				o.lv = d.ri ();
				break;
			case 3:
				o.upNum = d.ri ();
				break;
			case 4:
				o.todayNum = d.ri ();
				break;
			case 5:
				o.todayId = d.ri ();
				break;
			case 6:
				o.breach = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_cs_totems_open_response(self: cs_totems_open_response, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 7);

		if (self.ret != undefined) {
			se.wb (self.ret, 0);
		}

		if (self.id != undefined) {
			se.wi (self.id, 1);
		}

		if (self.lv != undefined) {
			se.wi (self.lv, 2);
		}

		if (self.upNum != undefined) {
			se.wi (self.upNum, 3);
		}

		if (self.todayNum != undefined) {
			se.wi (self.todayNum, 4);
		}

		if (self.todayId != undefined) {
			se.wi (self.todayId, 5);
		}

		if (self.breach != undefined) {
			se.wi (self.breach, 6);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["cs_totems_open_response"] = {en: _encode_cs_totems_open_response, de: _decode_cs_totems_open_response}
}

