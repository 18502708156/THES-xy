// Generated by sprotodump. DO NOT EDIT!

namespace Sproto { 
	export class sc_welfare_bonus_add_request {
		public id: number; // tag 0
		public name: string; // tag 2
		public endtime: number; // tag 3
	}

	function _decode_sc_welfare_bonus_add_request(d: SprotoTypeDeserialize) {
		let o = new sc_welfare_bonus_add_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.id = d.ri ();
				break;
			case 2:
				o.name = d.rs ();
				break;
			case 3:
				o.endtime = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_welfare_bonus_add_request(self: sc_welfare_bonus_add_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 4);

		if (self.id != undefined) {
			se.wi (self.id, 0);
		}

		if (self.name != undefined) {
			se.ws (self.name, 2);
		}

		if (self.endtime != undefined) {
			se.wi (self.endtime, 3);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_welfare_bonus_add_request"] = {en: _encode_sc_welfare_bonus_add_request, de: _decode_sc_welfare_bonus_add_request}
	export class sc_welfare_info_request {
		public month: number; // tag 0
		public week: number; // tag 1
		public lvReward: number; // tag 2
		public welfareReward: number; // tag 3
		public rankData: entity_shows[]; // tag 4
		public avgLv: number; // tag 5
		public forever: number; // tag 6
		public firstMonth: number; // tag 7
	}

	function _decode_sc_welfare_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_welfare_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.month = d.ri ();
				break;
			case 1:
				o.week = d.ri ();
				break;
			case 2:
				o.lvReward = d.ri ();
				break;
			case 3:
				o.welfareReward = d.ri ();
				break;
			case 4:
				o.rankData = d.roa("entity_shows");
				break;
			case 5:
				o.avgLv = d.ri ();
				break;
			case 6:
				o.forever = d.ri ();
				break;
			case 7:
				o.firstMonth = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_welfare_info_request(self: sc_welfare_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 8);

		if (self.month != undefined) {
			se.wi (self.month, 0);
		}

		if (self.week != undefined) {
			se.wi (self.week, 1);
		}

		if (self.lvReward != undefined) {
			se.wi (self.lvReward, 2);
		}

		if (self.welfareReward != undefined) {
			se.wi (self.welfareReward, 3);
		}

		if (self.rankData != undefined) {
			se.woa ("entity_shows", self.rankData, 4);
		}

		if (self.avgLv != undefined) {
			se.wi (self.avgLv, 5);
		}

		if (self.forever != undefined) {
			se.wi (self.forever, 6);
		}

		if (self.firstMonth != undefined) {
			se.wi (self.firstMonth, 7);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_welfare_info_request"] = {en: _encode_sc_welfare_info_request, de: _decode_sc_welfare_info_request}
	export class sc_welfare_login_gift_info_request {
		public totalLoginday: number; // tag 0
		public receivemark: number; // tag 1
	}

	function _decode_sc_welfare_login_gift_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_welfare_login_gift_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.totalLoginday = d.ri ();
				break;
			case 1:
				o.receivemark = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_welfare_login_gift_info_request(self: sc_welfare_login_gift_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 2);

		if (self.totalLoginday != undefined) {
			se.wi (self.totalLoginday, 0);
		}

		if (self.receivemark != undefined) {
			se.wi (self.receivemark, 1);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_welfare_login_gift_info_request"] = {en: _encode_sc_welfare_login_gift_info_request, de: _decode_sc_welfare_login_gift_info_request}
	export class sc_welfare_signin_info_request {
		public rewardMark: number; // tag 0
		public dailyId: number; // tag 1
		public totalDay: number; // tag 2
	}

	function _decode_sc_welfare_signin_info_request(d: SprotoTypeDeserialize) {
		let o = new sc_welfare_signin_info_request;
		let t = -1;
		while (-1 != (t = d.rt())) {
			switch (t) {
			case 0:
				o.rewardMark = d.ri ();
				break;
			case 1:
				o.dailyId = d.ri ();
				break;
			case 2:
				o.totalDay = d.ri ();
				break;
			default:
				d.nod ();
				break;
			}
		}
		return o
	}

	function _encode_sc_welfare_signin_info_request(self: sc_welfare_signin_info_request, st: Sproto.SprotoStream) {
		let se = SprotoCore.GetSerialize(st, 3);

		if (self.rewardMark != undefined) {
			se.wi (self.rewardMark, 0);
		}

		if (self.dailyId != undefined) {
			se.wi (self.dailyId, 1);
		}

		if (self.totalDay != undefined) {
			se.wi (self.totalDay, 2);
		}

		return SprotoCore.CloseSerialize(se);
	}

	ALL_DICT["sc_welfare_signin_info_request"] = {en: _encode_sc_welfare_signin_info_request, de: _decode_sc_welfare_signin_info_request}
}

